{
  "formatVersion": "2.0.0",
  "applicationDomains": [
    {
      "createdTime": "2023-02-14T17:32:17.723Z",
      "updatedTime": "2023-02-14T17:38:23.701Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "mb8idaqw0d7",
      "name": "TBD Kafka - Fulfillment",
      "description": "",
      "uniqueTopicAddressEnforcementEnabled": false,
      "topicDomainEnforcementEnabled": false,
      "customAttributes": [],
      "type": "applicationDomain"
    },
    {
      "createdTime": "2023-02-14T15:15:14.074Z",
      "updatedTime": "2023-02-14T20:37:57.336Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "46jg3911lh2",
      "name": "TBD Kafka - Merchandising",
      "description": "",
      "uniqueTopicAddressEnforcementEnabled": false,
      "topicDomainEnforcementEnabled": false,
      "customAttributes": [],
      "type": "applicationDomain"
    },
    {
      "createdTime": "2023-02-14T15:26:53.280Z",
      "updatedTime": "2023-02-14T19:48:23.666Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "yd4nuq4m9lj",
      "name": "TBD Kafka - Online Services",
      "description": "",
      "uniqueTopicAddressEnforcementEnabled": false,
      "topicDomainEnforcementEnabled": false,
      "customAttributes": [],
      "type": "applicationDomain"
    },
    {
      "createdTime": "2023-02-14T20:46:22.362Z",
      "updatedTime": "2023-02-14T20:46:22.362Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "ijhzqyvihpr",
      "name": "TBD Kafka - Shipping",
      "description": "",
      "uniqueTopicAddressEnforcementEnabled": false,
      "topicDomainEnforcementEnabled": false,
      "customAttributes": [],
      "type": "applicationDomain"
    }
  ],
  "topicDomains": [],
  "applications": [
    {
      "createdTime": "2023-02-14T19:49:42.665Z",
      "updatedTime": "2023-02-15T13:06:12.276Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "0rdjw06225n",
      "name": "Basket Service - Basket View (kSQL)",
      "applicationType": "standard",
      "brokerType": "kafka",
      "applicationDomainId": "yd4nuq4m9lj",
      "numberOfVersions": 1,
      "customAttributes": [],
      "type": "application"
    },
    {
      "createdTime": "2023-02-14T16:37:50.577Z",
      "updatedTime": "2023-02-15T13:05:41.265Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "yjpekaf854t",
      "name": "Basket Service - Basket Writer (REST proxy)",
      "applicationType": "standard",
      "brokerType": "kafka",
      "applicationDomainId": "yd4nuq4m9lj",
      "numberOfVersions": 1,
      "customAttributes": [],
      "type": "application"
    },
    {
      "createdTime": "2023-02-14T19:55:44.626Z",
      "updatedTime": "2023-02-15T13:04:42.447Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "k0j0aa45rjy",
      "name": "Catalogue Filter View (kSQL)",
      "applicationType": "standard",
      "brokerType": "kafka",
      "applicationDomainId": "yd4nuq4m9lj",
      "numberOfVersions": 1,
      "customAttributes": [],
      "type": "application"
    },
    {
      "createdTime": "2023-02-14T19:53:29.144Z",
      "updatedTime": "2023-02-15T13:03:19.725Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "v72ssvcd7x1",
      "name": "Catalogue Search (Kafka Connect -> Elasticsearch)",
      "applicationType": "standard",
      "brokerType": "kafka",
      "applicationDomainId": "yd4nuq4m9lj",
      "numberOfVersions": 1,
      "customAttributes": [],
      "type": "application"
    },
    {
      "createdTime": "2023-02-14T20:39:58.712Z",
      "updatedTime": "2023-02-15T12:45:04.057Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "wp2be4gy8ph",
      "name": "Catalogue Services",
      "applicationType": "standard",
      "brokerType": "kafka",
      "applicationDomainId": "46jg3911lh2",
      "numberOfVersions": 1,
      "customAttributes": [],
      "type": "application"
    },
    {
      "createdTime": "2023-02-14T18:12:50.925Z",
      "updatedTime": "2023-02-15T12:54:03.823Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "uoql5dhyc13",
      "name": "Email Service",
      "applicationType": "standard",
      "brokerType": "kafka",
      "applicationDomainId": "mb8idaqw0d7",
      "numberOfVersions": 1,
      "customAttributes": [],
      "type": "application"
    },
    {
      "createdTime": "2023-02-14T18:13:11.291Z",
      "updatedTime": "2023-02-15T12:53:06.436Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "gjhtvx701iz",
      "name": "Fraud Service",
      "applicationType": "standard",
      "brokerType": "kafka",
      "applicationDomainId": "mb8idaqw0d7",
      "numberOfVersions": 1,
      "customAttributes": [],
      "type": "application"
    },
    {
      "createdTime": "2023-02-14T18:14:16.951Z",
      "updatedTime": "2023-02-15T12:55:12.857Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "rjut1n7cjza",
      "name": "Inventory Service",
      "applicationType": "standard",
      "brokerType": "kafka",
      "applicationDomainId": "mb8idaqw0d7",
      "numberOfVersions": 1,
      "customAttributes": [],
      "type": "application"
    },
    {
      "createdTime": "2023-02-14T19:39:04.347Z",
      "updatedTime": "2023-02-15T12:56:12.420Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "yzc86bkdlet",
      "name": "Order Details Service",
      "applicationType": "standard",
      "brokerType": "kafka",
      "applicationDomainId": "mb8idaqw0d7",
      "numberOfVersions": 1,
      "customAttributes": [],
      "type": "application"
    },
    {
      "createdTime": "2023-02-14T19:50:37.969Z",
      "updatedTime": "2023-02-15T12:59:22.105Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "doilhj7pemx",
      "name": "Orders Service  - Order Writer",
      "applicationType": "standard",
      "brokerType": "kafka",
      "applicationDomainId": "yd4nuq4m9lj",
      "numberOfVersions": 1,
      "customAttributes": [],
      "type": "application"
    },
    {
      "createdTime": "2023-02-14T19:51:07.859Z",
      "updatedTime": "2023-02-15T13:00:04.266Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "di7qthig6uq",
      "name": "Orders Service - Orders View",
      "applicationType": "standard",
      "brokerType": "kafka",
      "applicationDomainId": "yd4nuq4m9lj",
      "numberOfVersions": 1,
      "customAttributes": [],
      "type": "application"
    },
    {
      "createdTime": "2023-02-14T19:51:27.417Z",
      "updatedTime": "2023-02-15T13:02:22.462Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "9ynh4642bw1",
      "name": "Orders Service - Validations Aggregator",
      "applicationType": "standard",
      "brokerType": "kafka",
      "applicationDomainId": "yd4nuq4m9lj",
      "numberOfVersions": 1,
      "customAttributes": [],
      "type": "application"
    },
    {
      "createdTime": "2023-02-14T20:49:48.118Z",
      "updatedTime": "2023-02-15T12:45:46.479Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "p8mdso44i30",
      "name": "Shipping Service",
      "applicationType": "standard",
      "brokerType": "kafka",
      "applicationDomainId": "ijhzqyvihpr",
      "numberOfVersions": 1,
      "customAttributes": [],
      "type": "application"
    }
  ],
  "applicationVersions": [
    {
      "createdTime": "2023-02-14T18:12:51.062Z",
      "updatedTime": "2023-02-15T12:54:03.823Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "2dc5zf5vokj",
      "applicationId": "uoql5dhyc13",
      "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
      "version": "0.1.0",
      "displayName": "",
      "declaredProducedEventVersionIds": [],
      "declaredConsumedEventVersionIds": [
        "5dbogvbsgr8",
        "kj4gb2ha7ub",
        "pyodcxkisd8"
      ],
      "declaredEventApiProductVersionIds": [],
      "stateId": "1",
      "eventMeshIds": [],
      "consumers": [
        {
          "createdTime": "2023-02-14T19:23:50.856Z",
          "updatedTime": "2023-02-15T12:54:03.510Z",
          "createdBy": "2ko4lk2qe58f",
          "changedBy": "2ko4lk2qe58f",
          "id": "28hgu3pkjbj",
          "name": "EMAIL.CUSTOMERS",
          "applicationVersionId": "2dc5zf5vokj",
          "brokerType": "kafka",
          "consumerType": "kafkaConsumer",
          "subscriptions": [
            {
              "id": "a9xc5ojtx0j",
              "subscriptionType": "topic",
              "value": "CUSTOMERS",
              "attractedEventVersionIds": []
            }
          ],
          "type": "consumer"
        },
        {
          "createdTime": "2023-02-14T19:23:50.639Z",
          "updatedTime": "2023-02-15T12:54:03.649Z",
          "createdBy": "2ko4lk2qe58f",
          "changedBy": "2ko4lk2qe58f",
          "id": "g47xavhhi8e",
          "name": "EMAIL.ORDERS",
          "applicationVersionId": "2dc5zf5vokj",
          "brokerType": "kafka",
          "consumerType": "kafkaConsumer",
          "subscriptions": [
            {
              "id": "tzboi5df5bf",
              "subscriptionType": "topic",
              "value": "ORDERS",
              "attractedEventVersionIds": []
            }
          ],
          "type": "consumer"
        },
        {
          "createdTime": "2023-02-14T19:23:50.458Z",
          "updatedTime": "2023-02-15T12:54:03.792Z",
          "createdBy": "2ko4lk2qe58f",
          "changedBy": "2ko4lk2qe58f",
          "id": "z9ytkqgkrej",
          "name": "EMAIL.PAYMENTS",
          "applicationVersionId": "2dc5zf5vokj",
          "brokerType": "kafka",
          "consumerType": "kafkaConsumer",
          "subscriptions": [
            {
              "id": "0qazhrshbv7",
              "subscriptionType": "topic",
              "value": "PAYMENTS",
              "attractedEventVersionIds": []
            }
          ],
          "type": "consumer"
        }
      ],
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "applicationVersion"
    },
    {
      "createdTime": "2023-02-14T19:53:29.299Z",
      "updatedTime": "2023-02-15T13:03:19.725Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "2jvqk790202",
      "applicationId": "v72ssvcd7x1",
      "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.",
      "version": "0.1.0",
      "displayName": "",
      "declaredProducedEventVersionIds": [],
      "declaredConsumedEventVersionIds": [
        "d9a7v9lc08j"
      ],
      "declaredEventApiProductVersionIds": [],
      "stateId": "1",
      "eventMeshIds": [],
      "consumers": [
        {
          "createdTime": "2023-02-14T20:45:14.858Z",
          "updatedTime": "2023-02-15T13:03:19.696Z",
          "createdBy": "2ko4lk2qe58f",
          "changedBy": "2ko4lk2qe58f",
          "id": "2hy5fu40tep",
          "name": "CATALOGUESEARCH.CATALOGUE",
          "applicationVersionId": "2jvqk790202",
          "brokerType": "kafka",
          "consumerType": "kafkaConsumer",
          "subscriptions": [
            {
              "id": "dy8daqrj0r7",
              "subscriptionType": "topic",
              "value": "CATALOGUE",
              "attractedEventVersionIds": []
            }
          ],
          "type": "consumer"
        }
      ],
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "applicationVersion"
    },
    {
      "createdTime": "2023-02-14T20:39:58.868Z",
      "updatedTime": "2023-02-15T12:45:04.057Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "388ywv4ibrz",
      "applicationId": "wp2be4gy8ph",
      "description": "A legacy codebase that manages changes made to the product catalog, initiated from an internal UI. This has comparatively fewer users, and an existing codebase. Events are picked up from the legacy Postgres database using a CDC connector to push them into Kafka. The single-message transforms feature reformats the messages before they are made public. Images are saved to a distributed filesystem for access by the web tier.",
      "version": "0.1.0",
      "displayName": "",
      "declaredProducedEventVersionIds": [
        "d9a7v9lc08j"
      ],
      "declaredConsumedEventVersionIds": [],
      "declaredEventApiProductVersionIds": [],
      "stateId": "1",
      "eventMeshIds": [],
      "consumers": [],
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "applicationVersion"
    },
    {
      "createdTime": "2023-02-14T19:51:08.022Z",
      "updatedTime": "2023-02-15T13:00:04.266Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "3t02zh36cld",
      "applicationId": "di7qthig6uq",
      "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nGET returns requested order, blocking for timeout if no id present.",
      "version": "0.1.0",
      "displayName": "",
      "declaredProducedEventVersionIds": [],
      "declaredConsumedEventVersionIds": [
        "opjw5oon5d7"
      ],
      "declaredEventApiProductVersionIds": [],
      "stateId": "1",
      "eventMeshIds": [],
      "consumers": [
        {
          "createdTime": "2023-02-14T20:05:19.273Z",
          "updatedTime": "2023-02-15T13:00:04.234Z",
          "createdBy": "2ko4lk2qe58f",
          "changedBy": "2ko4lk2qe58f",
          "id": "6hj1p5c5v3q",
          "name": "ORDERSVIEW.ORDERVALIDATED",
          "applicationVersionId": "3t02zh36cld",
          "brokerType": "kafka",
          "consumerType": "kafkaConsumer",
          "subscriptions": [
            {
              "id": "1mbdtc64kwi",
              "subscriptionType": "topic",
              "value": "ORDERS",
              "attractedEventVersionIds": []
            }
          ],
          "type": "consumer"
        }
      ],
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "applicationVersion"
    },
    {
      "createdTime": "2023-02-14T19:49:42.809Z",
      "updatedTime": "2023-02-15T13:06:12.276Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "93sk3blveqa",
      "applicationId": "0rdjw06225n",
      "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.",
      "version": "0.1.0",
      "displayName": "",
      "declaredProducedEventVersionIds": [],
      "declaredConsumedEventVersionIds": [
        "5dbogvbsgr8",
        "ouw4vy276uo"
      ],
      "declaredEventApiProductVersionIds": [],
      "stateId": "1",
      "eventMeshIds": [],
      "consumers": [
        {
          "createdTime": "2023-02-14T20:35:52.689Z",
          "updatedTime": "2023-02-15T13:06:12.088Z",
          "createdBy": "2ko4lk2qe58f",
          "changedBy": "2ko4lk2qe58f",
          "id": "0415dycvg2f",
          "name": "BASKET.CUSTOMER",
          "applicationVersionId": "93sk3blveqa",
          "brokerType": "kafka",
          "consumerType": "kafkaConsumer",
          "subscriptions": [
            {
              "id": "cxbica83mqa",
              "subscriptionType": "topic",
              "value": "CUSTOMERS",
              "attractedEventVersionIds": []
            }
          ],
          "type": "consumer"
        },
        {
          "createdTime": "2023-02-14T20:35:52.895Z",
          "updatedTime": "2023-02-15T13:06:12.245Z",
          "createdBy": "2ko4lk2qe58f",
          "changedBy": "2ko4lk2qe58f",
          "id": "0in3i6dhca6",
          "name": "BASKETWRITER.BASKET",
          "applicationVersionId": "93sk3blveqa",
          "brokerType": "kafka",
          "consumerType": "kafkaConsumer",
          "subscriptions": [
            {
              "id": "biw4c7crm17",
              "subscriptionType": "topic",
              "value": "BASKET",
              "attractedEventVersionIds": []
            }
          ],
          "type": "consumer"
        }
      ],
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "applicationVersion"
    },
    {
      "createdTime": "2023-02-14T18:13:11.423Z",
      "updatedTime": "2023-02-15T12:53:06.436Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "a0iu8dlgn7r",
      "applicationId": "gjhtvx701iz",
      "description": "This service searches for potentially fraudulent transactions by calculating the total value of orders for a customer within a time period, then checks to see if this is over a configured limit. \n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/FraudService.java)",
      "version": "0.1.0",
      "displayName": "",
      "declaredProducedEventVersionIds": [
        "9x1omx11dt6"
      ],
      "declaredConsumedEventVersionIds": [
        "kj4gb2ha7ub"
      ],
      "declaredEventApiProductVersionIds": [],
      "stateId": "1",
      "eventMeshIds": [],
      "consumers": [
        {
          "createdTime": "2023-02-14T20:58:43.502Z",
          "updatedTime": "2023-02-15T12:53:06.407Z",
          "createdBy": "2ko4lk2qe58f",
          "changedBy": "2ko4lk2qe58f",
          "id": "3imo8fy6khs",
          "name": "FRAUD.ORDERCREATED",
          "applicationVersionId": "a0iu8dlgn7r",
          "brokerType": "kafka",
          "consumerType": "kafkaConsumer",
          "subscriptions": [
            {
              "id": "8skw8422r9e",
              "subscriptionType": "topic",
              "value": "ORDERS",
              "attractedEventVersionIds": []
            }
          ],
          "type": "consumer"
        }
      ],
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "applicationVersion"
    },
    {
      "createdTime": "2023-02-14T20:49:48.313Z",
      "updatedTime": "2023-02-15T12:45:46.479Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "chzyogcc73c",
      "applicationId": "p8mdso44i30",
      "description": "A streaming service leveraging the Kafka Streams API. This service reacts to orders as they are created, updating the Shipping topic as notifications are received from the delivery company.",
      "version": "0.1.0",
      "displayName": "",
      "declaredProducedEventVersionIds": [
        "63ce096c7t8"
      ],
      "declaredConsumedEventVersionIds": [
        "5dbogvbsgr8",
        "d9a7v9lc08j"
      ],
      "declaredEventApiProductVersionIds": [],
      "stateId": "1",
      "eventMeshIds": [],
      "consumers": [
        {
          "createdTime": "2023-02-14T20:49:48.621Z",
          "updatedTime": "2023-02-15T12:45:46.324Z",
          "createdBy": "2ko4lk2qe58f",
          "changedBy": "2ko4lk2qe58f",
          "id": "isiq6wk6296",
          "name": "SHIPPING.CATALOGUE",
          "applicationVersionId": "chzyogcc73c",
          "brokerType": "kafka",
          "consumerType": "kafkaConsumer",
          "subscriptions": [
            {
              "id": "7ek47ihdio5",
              "subscriptionType": "topic",
              "value": "CATALOGUE",
              "attractedEventVersionIds": []
            }
          ],
          "type": "consumer"
        },
        {
          "createdTime": "2023-02-14T20:49:48.424Z",
          "updatedTime": "2023-02-15T12:45:46.449Z",
          "createdBy": "2ko4lk2qe58f",
          "changedBy": "2ko4lk2qe58f",
          "id": "1fxj6100rg7",
          "name": "SHIPPING.CUSTOMERS",
          "applicationVersionId": "chzyogcc73c",
          "brokerType": "kafka",
          "consumerType": "kafkaConsumer",
          "subscriptions": [
            {
              "id": "x3cbsera9o3",
              "subscriptionType": "topic",
              "value": "CUSTOMERS",
              "attractedEventVersionIds": []
            }
          ],
          "type": "consumer"
        }
      ],
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "applicationVersion"
    },
    {
      "createdTime": "2023-02-14T19:51:27.576Z",
      "updatedTime": "2023-02-15T13:02:22.462Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "gjh167jv7jm",
      "applicationId": "9ynh4642bw1",
      "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/ValidationsAggregatorService.java)",
      "version": "0.1.0",
      "displayName": "",
      "declaredProducedEventVersionIds": [
        "opjw5oon5d7"
      ],
      "declaredConsumedEventVersionIds": [
        "9x1omx11dt6"
      ],
      "declaredEventApiProductVersionIds": [],
      "stateId": "1",
      "eventMeshIds": [],
      "consumers": [
        {
          "createdTime": "2023-02-14T20:06:55.114Z",
          "updatedTime": "2023-02-15T13:02:22.428Z",
          "createdBy": "2ko4lk2qe58f",
          "changedBy": "2ko4lk2qe58f",
          "id": "701pb894a22",
          "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
          "applicationVersionId": "gjh167jv7jm",
          "brokerType": "kafka",
          "consumerType": "kafkaConsumer",
          "subscriptions": [
            {
              "id": "lo8fwimkpe8",
              "subscriptionType": "topic",
              "value": "ORDER_VALIDATIONS",
              "attractedEventVersionIds": []
            }
          ],
          "type": "consumer"
        }
      ],
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "applicationVersion"
    },
    {
      "createdTime": "2023-02-14T19:55:44.782Z",
      "updatedTime": "2023-02-15T13:04:42.447Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "gvcojwejr0q",
      "applicationId": "k0j0aa45rjy",
      "description": "An event-sourced view combining information from the catalogue and stock topics",
      "version": "0.1.0",
      "displayName": "",
      "declaredProducedEventVersionIds": [],
      "declaredConsumedEventVersionIds": [
        "co8nd40ssga",
        "d9a7v9lc08j"
      ],
      "declaredEventApiProductVersionIds": [],
      "stateId": "1",
      "eventMeshIds": [],
      "consumers": [
        {
          "createdTime": "2023-02-14T20:44:19.434Z",
          "updatedTime": "2023-02-15T13:04:42.272Z",
          "createdBy": "2ko4lk2qe58f",
          "changedBy": "2ko4lk2qe58f",
          "id": "id06amxjdjd",
          "name": "CATALOGUE.INVENTORY",
          "applicationVersionId": "gvcojwejr0q",
          "brokerType": "kafka",
          "consumerType": "kafkaConsumer",
          "subscriptions": [
            {
              "id": "2a5yo7eh1we",
              "subscriptionType": "topic",
              "value": "WAREHOUSE_INVENTORY",
              "attractedEventVersionIds": []
            }
          ],
          "type": "consumer"
        },
        {
          "createdTime": "2023-02-14T20:44:19.618Z",
          "updatedTime": "2023-02-15T13:04:42.417Z",
          "createdBy": "2ko4lk2qe58f",
          "changedBy": "2ko4lk2qe58f",
          "id": "z7nvev40qyx",
          "name": "CATALOGUEFILTER.CATALOGUE",
          "applicationVersionId": "gvcojwejr0q",
          "brokerType": "kafka",
          "consumerType": "kafkaConsumer",
          "subscriptions": [
            {
              "id": "xerjt6s5k4m",
              "subscriptionType": "topic",
              "value": "CATALOGUE",
              "attractedEventVersionIds": []
            }
          ],
          "type": "consumer"
        }
      ],
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "applicationVersion"
    },
    {
      "createdTime": "2023-02-14T16:37:50.726Z",
      "updatedTime": "2023-02-15T13:05:41.265Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "mb8gz0ufw24",
      "applicationId": "yjpekaf854t",
      "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. ",
      "version": "0.1.0",
      "displayName": "",
      "declaredProducedEventVersionIds": [
        "ouw4vy276uo"
      ],
      "declaredConsumedEventVersionIds": [],
      "declaredEventApiProductVersionIds": [],
      "stateId": "1",
      "eventMeshIds": [],
      "consumers": [],
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "applicationVersion"
    },
    {
      "createdTime": "2023-02-14T19:50:38.102Z",
      "updatedTime": "2023-02-15T12:59:22.105Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "op7csqjhi5b",
      "applicationId": "doilhj7pemx",
      "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nPOST  adds Order, Payment and Customer information to the system returning when Kafka sends the appropriate acknowledgement.",
      "version": "0.1.0",
      "displayName": "",
      "declaredProducedEventVersionIds": [
        "5dbogvbsgr8",
        "kj4gb2ha7ub",
        "pyodcxkisd8"
      ],
      "declaredConsumedEventVersionIds": [],
      "declaredEventApiProductVersionIds": [],
      "stateId": "1",
      "eventMeshIds": [],
      "consumers": [],
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "applicationVersion"
    },
    {
      "createdTime": "2023-02-14T18:14:17.075Z",
      "updatedTime": "2023-02-15T12:55:12.857Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "wlt3j4ze6t3",
      "applicationId": "rjut1n7cjza",
      "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
      "version": "0.1.0",
      "displayName": "",
      "declaredProducedEventVersionIds": [
        "9x1omx11dt6",
        "co8nd40ssga"
      ],
      "declaredConsumedEventVersionIds": [
        "co8nd40ssga",
        "kj4gb2ha7ub"
      ],
      "declaredEventApiProductVersionIds": [],
      "stateId": "1",
      "eventMeshIds": [],
      "consumers": [
        {
          "createdTime": "2023-02-14T20:12:09.215Z",
          "updatedTime": "2023-02-15T12:55:12.698Z",
          "createdBy": "2ko4lk2qe58f",
          "changedBy": "2ko4lk2qe58f",
          "id": "1jpkaj9gah2",
          "name": "INVENTORY.INVENTORY",
          "applicationVersionId": "wlt3j4ze6t3",
          "brokerType": "kafka",
          "consumerType": "kafkaConsumer",
          "subscriptions": [
            {
              "id": "it4cju3nuth",
              "subscriptionType": "topic",
              "value": "WAREHOUSE_INVENTORY",
              "attractedEventVersionIds": []
            }
          ],
          "type": "consumer"
        },
        {
          "createdTime": "2023-02-14T20:12:09.359Z",
          "updatedTime": "2023-02-15T12:55:12.825Z",
          "createdBy": "2ko4lk2qe58f",
          "changedBy": "2ko4lk2qe58f",
          "id": "on6d5a0sudo",
          "name": "INVENTORY.ORDERS",
          "applicationVersionId": "wlt3j4ze6t3",
          "brokerType": "kafka",
          "consumerType": "kafkaConsumer",
          "subscriptions": [
            {
              "id": "r36fbfzn9hx",
              "subscriptionType": "topic",
              "value": "ORDERS",
              "attractedEventVersionIds": []
            }
          ],
          "type": "consumer"
        }
      ],
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "applicationVersion"
    },
    {
      "createdTime": "2023-02-14T19:39:04.489Z",
      "updatedTime": "2023-02-15T12:56:12.420Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "xf6jcx2yt9i",
      "applicationId": "yzc86bkdlet",
      "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n",
      "version": "0.1.0",
      "displayName": "",
      "declaredProducedEventVersionIds": [
        "9x1omx11dt6"
      ],
      "declaredConsumedEventVersionIds": [
        "kj4gb2ha7ub"
      ],
      "declaredEventApiProductVersionIds": [],
      "stateId": "1",
      "eventMeshIds": [],
      "consumers": [
        {
          "createdTime": "2023-02-14T19:39:04.577Z",
          "updatedTime": "2023-02-15T12:56:12.389Z",
          "createdBy": "2ko4lk2qe58f",
          "changedBy": "2ko4lk2qe58f",
          "id": "33n0wul90t3",
          "name": "ORDERDETAILS.ORDERCREATED",
          "applicationVersionId": "xf6jcx2yt9i",
          "brokerType": "kafka",
          "consumerType": "kafkaConsumer",
          "subscriptions": [
            {
              "id": "us85d98hmfx",
              "subscriptionType": "topic",
              "value": "ORDERS",
              "attractedEventVersionIds": []
            }
          ],
          "type": "consumer"
        }
      ],
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "applicationVersion"
    }
  ],
  "events": [
    {
      "createdTime": "2023-02-14T20:27:43.733Z",
      "updatedTime": "2023-02-14T20:28:00.625Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "uih12hct73o",
      "name": "Basket",
      "shared": false,
      "applicationDomainId": "yd4nuq4m9lj",
      "numberOfVersions": 1,
      "customAttributes": [],
      "stats": {
        "versionCountByStateId": {
          "1": 1
        }
      },
      "type": "event"
    },
    {
      "createdTime": "2023-02-14T20:38:53.712Z",
      "updatedTime": "2023-02-14T20:40:14.665Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "zrnwfg7tsmq",
      "name": "Catalogue Updated",
      "shared": true,
      "applicationDomainId": "46jg3911lh2",
      "numberOfVersions": 1,
      "customAttributes": [],
      "stats": {
        "versionCountByStateId": {
          "1": 1
        }
      },
      "type": "event"
    },
    {
      "createdTime": "2023-02-14T20:32:16.148Z",
      "updatedTime": "2023-02-14T20:32:16.346Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "l53361br33r",
      "name": "Customer Updated",
      "shared": true,
      "applicationDomainId": "yd4nuq4m9lj",
      "numberOfVersions": 1,
      "customAttributes": [],
      "stats": {
        "versionCountByStateId": {
          "1": 1
        }
      },
      "type": "event"
    },
    {
      "createdTime": "2023-02-14T17:42:29.239Z",
      "updatedTime": "2023-02-14T17:42:29.433Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "aa7sdb9dwxq",
      "name": "Customers",
      "shared": false,
      "applicationDomainId": "mb8idaqw0d7",
      "numberOfVersions": 1,
      "customAttributes": [],
      "stats": {
        "versionCountByStateId": {
          "1": 1
        }
      },
      "type": "event"
    },
    {
      "createdTime": "2023-02-14T19:59:08.389Z",
      "updatedTime": "2023-02-14T20:02:33.629Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "2np7ic8vvj6",
      "name": "Order Created",
      "shared": true,
      "applicationDomainId": "yd4nuq4m9lj",
      "numberOfVersions": 1,
      "customAttributes": [],
      "stats": {
        "versionCountByStateId": {
          "1": 1
        }
      },
      "type": "event"
    },
    {
      "createdTime": "2023-02-14T20:02:20.263Z",
      "updatedTime": "2023-02-14T20:03:06.370Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "14pqav374c5",
      "name": "Order Updated",
      "shared": true,
      "applicationDomainId": "yd4nuq4m9lj",
      "numberOfVersions": 1,
      "customAttributes": [],
      "stats": {
        "versionCountByStateId": {
          "1": 1
        }
      },
      "type": "event"
    },
    {
      "createdTime": "2023-02-14T20:00:31.324Z",
      "updatedTime": "2023-02-14T20:01:27.429Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "o23wow4vg7x",
      "name": "Order Validated",
      "shared": false,
      "applicationDomainId": "yd4nuq4m9lj",
      "numberOfVersions": 1,
      "customAttributes": [],
      "stats": {
        "versionCountByStateId": {
          "1": 1
        }
      },
      "type": "event"
    },
    {
      "createdTime": "2023-02-14T20:22:12.068Z",
      "updatedTime": "2023-02-14T20:22:40.681Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "bz6b3t9hv44",
      "name": "Payment Processed",
      "shared": true,
      "applicationDomainId": "yd4nuq4m9lj",
      "numberOfVersions": 1,
      "customAttributes": [],
      "stats": {
        "versionCountByStateId": {
          "1": 1
        }
      },
      "type": "event"
    },
    {
      "createdTime": "2023-02-14T20:46:42.341Z",
      "updatedTime": "2023-02-14T20:46:56.099Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "7xjk6d6dsd8",
      "name": "Shipping Updated",
      "shared": false,
      "applicationDomainId": "ijhzqyvihpr",
      "numberOfVersions": 1,
      "customAttributes": [],
      "stats": {
        "versionCountByStateId": {
          "1": 1
        }
      },
      "type": "event"
    },
    {
      "createdTime": "2023-02-14T18:08:48.710Z",
      "updatedTime": "2023-02-14T20:42:31.344Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "qmxyepo1gc0",
      "name": "Warehouse Inventory",
      "shared": true,
      "applicationDomainId": "mb8idaqw0d7",
      "numberOfVersions": 1,
      "customAttributes": [],
      "stats": {
        "versionCountByStateId": {
          "1": 1
        }
      },
      "type": "event"
    }
  ],
  "eventVersions": [
    {
      "createdTime": "2023-02-14T20:32:16.346Z",
      "updatedTime": "2023-02-14T20:32:16.346Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "5dbogvbsgr8",
      "eventId": "l53361br33r",
      "description": "",
      "version": "0.1.0",
      "displayName": "",
      "attractingApplicationVersionIds": [],
      "schemaVersionId": null,
      "schemaPrimitiveType": null,
      "deliveryDescriptor": {
        "brokerType": "kafka",
        "address": {
          "addressLevels": [
            {
              "name": "CUSTOMERS",
              "addressLevelType": "literal"
            }
          ],
          "addressType": "topic"
        },
        "keySchemaVersionId": null,
        "keySchemaPrimitiveType": null
      },
      "stateId": "1",
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "eventVersion"
    },
    {
      "createdTime": "2023-02-14T20:46:42.491Z",
      "updatedTime": "2023-02-14T20:46:56.099Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "63ce096c7t8",
      "eventId": "7xjk6d6dsd8",
      "description": "",
      "version": "0.1.0",
      "displayName": "",
      "attractingApplicationVersionIds": [],
      "schemaVersionId": null,
      "schemaPrimitiveType": null,
      "deliveryDescriptor": {
        "brokerType": "kafka",
        "address": {
          "addressLevels": [
            {
              "name": "SHIPPING",
              "addressLevelType": "literal"
            }
          ],
          "addressType": "topic"
        },
        "keySchemaVersionId": null,
        "keySchemaPrimitiveType": null
      },
      "stateId": "1",
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "eventVersion"
    },
    {
      "createdTime": "2023-02-14T17:42:29.433Z",
      "updatedTime": "2023-02-14T17:42:29.433Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "99c1u3ide95",
      "eventId": "aa7sdb9dwxq",
      "description": "",
      "version": "0.1.0",
      "displayName": "",
      "attractingApplicationVersionIds": [],
      "schemaVersionId": null,
      "schemaPrimitiveType": null,
      "deliveryDescriptor": {
        "brokerType": "kafka",
        "address": {
          "addressLevels": [
            {
              "name": "CUSTOMERS",
              "addressLevelType": "literal"
            }
          ],
          "addressType": "topic"
        },
        "keySchemaVersionId": null,
        "keySchemaPrimitiveType": null
      },
      "stateId": "1",
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "eventVersion"
    },
    {
      "createdTime": "2023-02-14T20:02:20.464Z",
      "updatedTime": "2023-02-14T20:02:20.464Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "9x1omx11dt6",
      "eventId": "14pqav374c5",
      "description": "",
      "version": "0.1.0",
      "displayName": "",
      "attractingApplicationVersionIds": [],
      "schemaVersionId": null,
      "schemaPrimitiveType": null,
      "deliveryDescriptor": {
        "brokerType": "kafka",
        "address": {
          "addressLevels": [
            {
              "name": "ORDER_VALIDATIONS",
              "addressLevelType": "literal"
            }
          ],
          "addressType": "topic"
        },
        "keySchemaVersionId": null,
        "keySchemaPrimitiveType": null
      },
      "stateId": "1",
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "eventVersion"
    },
    {
      "createdTime": "2023-02-14T18:08:48.955Z",
      "updatedTime": "2023-02-14T19:24:25.901Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "co8nd40ssga",
      "eventId": "qmxyepo1gc0",
      "description": "    //Create a store to reserve inventory whilst the order is processed.\n    //This will be prepopulated from Kafka before the service starts processing",
      "version": "0.1.0",
      "displayName": "",
      "attractingApplicationVersionIds": [],
      "schemaVersionId": null,
      "schemaPrimitiveType": null,
      "deliveryDescriptor": {
        "brokerType": "kafka",
        "address": {
          "addressLevels": [
            {
              "name": "WAREHOUSE_INVENTORY",
              "addressLevelType": "literal"
            }
          ],
          "addressType": "topic"
        },
        "keySchemaVersionId": null,
        "keySchemaPrimitiveType": null
      },
      "stateId": "1",
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "eventVersion"
    },
    {
      "createdTime": "2023-02-14T20:38:53.922Z",
      "updatedTime": "2023-02-14T20:38:53.922Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "d9a7v9lc08j",
      "eventId": "zrnwfg7tsmq",
      "description": "",
      "version": "0.1.0",
      "displayName": "",
      "attractingApplicationVersionIds": [],
      "schemaVersionId": null,
      "schemaPrimitiveType": null,
      "deliveryDescriptor": {
        "brokerType": "kafka",
        "address": {
          "addressLevels": [
            {
              "name": "CATALOGUE",
              "addressLevelType": "literal"
            }
          ],
          "addressType": "topic"
        },
        "keySchemaVersionId": null,
        "keySchemaPrimitiveType": null
      },
      "stateId": "1",
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "eventVersion"
    },
    {
      "createdTime": "2023-02-14T19:59:08.540Z",
      "updatedTime": "2023-02-14T19:59:29.793Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "kj4gb2ha7ub",
      "eventId": "2np7ic8vvj6",
      "description": "",
      "version": "0.1.0",
      "displayName": "",
      "attractingApplicationVersionIds": [],
      "schemaVersionId": null,
      "schemaPrimitiveType": null,
      "deliveryDescriptor": {
        "brokerType": "kafka",
        "address": {
          "addressLevels": [
            {
              "name": "ORDERS",
              "addressLevelType": "literal"
            }
          ],
          "addressType": "topic"
        },
        "keySchemaVersionId": null,
        "keySchemaPrimitiveType": null
      },
      "stateId": "1",
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "eventVersion"
    },
    {
      "createdTime": "2023-02-14T20:00:31.544Z",
      "updatedTime": "2023-02-14T20:01:27.429Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "opjw5oon5d7",
      "eventId": "o23wow4vg7x",
      "description": "",
      "version": "0.1.0",
      "displayName": "",
      "attractingApplicationVersionIds": [],
      "schemaVersionId": null,
      "schemaPrimitiveType": null,
      "deliveryDescriptor": {
        "brokerType": "kafka",
        "address": {
          "addressLevels": [
            {
              "name": "ORDERS",
              "addressLevelType": "literal"
            }
          ],
          "addressType": "topic"
        },
        "keySchemaVersionId": null,
        "keySchemaPrimitiveType": null
      },
      "stateId": "1",
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "eventVersion"
    },
    {
      "createdTime": "2023-02-14T20:27:43.912Z",
      "updatedTime": "2023-02-14T20:28:00.625Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "ouw4vy276uo",
      "eventId": "uih12hct73o",
      "description": "",
      "version": "0.1.0",
      "displayName": "",
      "attractingApplicationVersionIds": [],
      "schemaVersionId": null,
      "schemaPrimitiveType": null,
      "deliveryDescriptor": {
        "brokerType": "kafka",
        "address": {
          "addressLevels": [
            {
              "name": "BASKET",
              "addressLevelType": "literal"
            }
          ],
          "addressType": "topic"
        },
        "keySchemaVersionId": null,
        "keySchemaPrimitiveType": null
      },
      "stateId": "1",
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "eventVersion"
    },
    {
      "createdTime": "2023-02-14T20:22:12.352Z",
      "updatedTime": "2023-02-14T20:22:12.352Z",
      "createdBy": "2ko4lk2qe58f",
      "changedBy": "2ko4lk2qe58f",
      "id": "pyodcxkisd8",
      "eventId": "bz6b3t9hv44",
      "description": "",
      "version": "0.1.0",
      "displayName": "",
      "attractingApplicationVersionIds": [],
      "schemaVersionId": null,
      "schemaPrimitiveType": null,
      "deliveryDescriptor": {
        "brokerType": "kafka",
        "address": {
          "addressLevels": [
            {
              "name": "PAYMENTS",
              "addressLevelType": "literal"
            }
          ],
          "addressType": "topic"
        },
        "keySchemaVersionId": null,
        "keySchemaPrimitiveType": null
      },
      "stateId": "1",
      "customAttributes": [],
      "messagingServiceIds": [],
      "type": "eventVersion"
    }
  ],
  "schemas": [],
  "schemaVersions": [],
  "enums": [],
  "enumVersions": [],
  "eventApis": [],
  "eventApiVersions": [],
  "eventApiProducts": [],
  "eventApiProductVersions": [],
  "addressSpaces": [
    {
      "createdTime": "2022-08-04T17:30:05.672Z",
      "updatedTime": "2022-08-04T17:30:05.672Z",
      "createdBy": "67tr8tku41",
      "changedBy": "67tr8tku41",
      "id": "4864guly114",
      "brokerType": "kafka",
      "delimiter": ".",
      "type": "addressSpace"
    }
  ],
  "customAttributeDefinitions": []
}
