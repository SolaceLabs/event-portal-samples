{
    "formatVersion": "2.0.0",
    "applicationDomains": [{
            "createdTime": "2023-05-17T13:10:43.930Z",
            "updatedTime": "2023-05-17T13:10:43.930Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "u9ijat9sq54",
            "name": "Fulfillment",
            "description": "Event Hubs",
            "uniqueTopicAddressEnforcementEnabled": false,
            "topicDomainEnforcementEnabled": false,
            "customAttributes": [],
            "type": "applicationDomain"
        }, {
            "createdTime": "2023-05-17T13:10:43.930Z",
            "updatedTime": "2023-05-17T13:10:43.930Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "8ehea540f18",
            "name": "Merchandising",
            "description": "Event Hubs",
            "uniqueTopicAddressEnforcementEnabled": false,
            "topicDomainEnforcementEnabled": false,
            "customAttributes": [],
            "type": "applicationDomain"
        }, {
            "createdTime": "2023-05-17T13:10:43.930Z",
            "updatedTime": "2023-05-17T13:10:43.930Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "wkc8286f133",
            "name": "OnlineServices",
            "description": "Event Hubs",
            "uniqueTopicAddressEnforcementEnabled": false,
            "topicDomainEnforcementEnabled": false,
            "customAttributes": [],
            "type": "applicationDomain"
        }, {
            "createdTime": "2023-05-17T13:10:43.929Z",
            "updatedTime": "2023-05-17T13:10:43.929Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "nc6ga85by8s",
            "name": "Shipping",
            "description": "Event Hubs",
            "uniqueTopicAddressEnforcementEnabled": false,
            "topicDomainEnforcementEnabled": false,
            "customAttributes": [],
            "type": "applicationDomain"
        }
    ],
    "topicDomains": [],
    "applications": [{
            "createdTime": "2023-05-17T13:10:44.188Z",
            "updatedTime": "2023-05-19T14:29:33.291Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "32s5q96dcgg",
            "name": "Basket Service - Basket View (kSQL)",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "wkc8286f133",
            "numberOfVersions": 7,
            "customAttributes": [],
            "type": "application"
        }, {
            "createdTime": "2023-05-17T13:10:44.207Z",
            "updatedTime": "2023-05-19T14:29:54.901Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "v6cu57w46ym",
            "name": "Basket Service - Basket Writer (REST proxy)",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "wkc8286f133",
            "numberOfVersions": 6,
            "customAttributes": [],
            "type": "application"
        }, {
            "createdTime": "2023-05-17T13:10:44.227Z",
            "updatedTime": "2023-05-19T14:30:18.338Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ne5ew8miy3g",
            "name": "Catalogue Filter View (kSQL)",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "wkc8286f133",
            "numberOfVersions": 6,
            "customAttributes": [],
            "type": "application"
        }, {
            "createdTime": "2023-05-17T13:10:44.248Z",
            "updatedTime": "2023-05-19T14:30:35.405Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "rgahglblgff",
            "name": "Catalogue Search (Kafka Connect -> Elasticsearch)",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "wkc8286f133",
            "numberOfVersions": 6,
            "customAttributes": [],
            "type": "application"
        }, {
            "createdTime": "2023-05-17T13:10:44.274Z",
            "updatedTime": "2023-05-19T14:28:53.954Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "lqpdgcna3z1",
            "name": "Catalogue Services",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "8ehea540f18",
            "numberOfVersions": 4,
            "customAttributes": [],
            "type": "application"
        }, {
            "createdTime": "2023-05-17T13:10:44.358Z",
            "updatedTime": "2023-05-19T14:43:04.728Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "xb624jrx6gb",
            "name": "Email Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "u9ijat9sq54",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "d4knt7uzgkv",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-17T13:10:44.378Z",
            "updatedTime": "2023-05-19T14:19:50.920Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "vbmx5dw5ygs",
            "name": "Fraud Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "u9ijat9sq54",
            "numberOfVersions": 4,
            "customAttributes": [],
            "type": "application"
        }, {
            "createdTime": "2023-05-17T13:10:44.397Z",
            "updatedTime": "2023-05-19T14:20:18.338Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "qwqj4nujhrq",
            "name": "Inventory Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "u9ijat9sq54",
            "numberOfVersions": 5,
            "customAttributes": [],
            "type": "application"
        }, {
            "createdTime": "2023-05-17T13:10:44.417Z",
            "updatedTime": "2023-05-19T14:20:44.069Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "xecac7y09sk",
            "name": "Order Details Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "u9ijat9sq54",
            "numberOfVersions": 5,
            "customAttributes": [],
            "type": "application"
        }, {
            "createdTime": "2023-05-17T13:10:44.296Z",
            "updatedTime": "2023-05-19T14:30:58.767Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "iasaldzfjdq",
            "name": "Orders Service  - Order Writer",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "wkc8286f133",
            "numberOfVersions": 4,
            "customAttributes": [],
            "type": "application"
        }, {
            "createdTime": "2023-05-17T13:10:44.317Z",
            "updatedTime": "2023-05-19T14:31:11.565Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "22st8817q1h",
            "name": "Orders Service - Orders View",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "wkc8286f133",
            "numberOfVersions": 4,
            "customAttributes": [],
            "type": "application"
        }, {
            "createdTime": "2023-05-17T13:10:44.337Z",
            "updatedTime": "2023-05-19T14:31:29.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "oani0caggdk",
            "name": "Orders Service - Validations Aggregator",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "wkc8286f133",
            "numberOfVersions": 7,
            "customAttributes": [],
            "type": "application"
        }, {
            "createdTime": "2023-05-17T13:10:44.168Z",
            "updatedTime": "2023-05-19T14:31:59.393Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "on6dadre2s3",
            "name": "Shipping Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "nc6ga85by8s",
            "numberOfVersions": 2,
            "customAttributes": [],
            "type": "application"
        }
    ],
    "applicationVersions": [{
            "createdTime": "2023-05-19T13:40:56.275Z",
            "updatedTime": "2023-05-19T14:31:11.565Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "m4c0akouwh3",
            "applicationId": "22st8817q1h",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nGET returns requested order, blocking for timeout if no id present.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.2",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["42egsebargr"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:40:56.460Z",
                    "updatedTime": "2023-05-19T14:31:11.515Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "cd539iu36p1",
                    "name": "ORDERSVIEW.ORDERVALIDATED",
                    "applicationVersionId": "m4c0akouwh3",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "qpd3jkmulnl",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:40:40.812Z",
            "updatedTime": "2023-05-19T14:25:11.157Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "h9ruz9fhjyu",
            "applicationId": "22st8817q1h",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nGET returns requested order, blocking for timeout if no id present.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["euuzdh913a5"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:40:40.984Z",
                    "updatedTime": "2023-05-19T13:40:40.984Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "xb5mbh6dd19",
                    "name": "ORDERSVIEW.ORDERVALIDATED",
                    "applicationVersionId": "h9ruz9fhjyu",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "nakdlwcruy7",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:40:31.494Z",
            "updatedTime": "2023-05-19T14:25:04.671Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "x2lai654bhy",
            "applicationId": "22st8817q1h",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nGET returns requested order, blocking for timeout if no id present.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["euuzdh913a5"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:40:31.645Z",
                    "updatedTime": "2023-05-19T13:40:31.645Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "4dldfmlji44",
                    "name": "ORDERSVIEW.ORDERVALIDATED",
                    "applicationVersionId": "x2lai654bhy",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "943zdjrxllw",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-17T13:10:47.949Z",
            "updatedTime": "2023-05-19T14:24:59.841Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "e2j4kke5j9l",
            "applicationId": "22st8817q1h",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nGET returns requested order, blocking for timeout if no id present.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["euuzdh913a5"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-17T13:10:48.107Z",
                    "updatedTime": "2023-05-19T13:08:18.794Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "9liy31kbg99",
                    "name": "ORDERSVIEW.ORDERVALIDATED",
                    "applicationVersionId": "e2j4kke5j9l",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "dz4mujqc88f",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:28:38.115Z",
            "updatedTime": "2023-05-19T14:29:33.291Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "icuz5l8ifhe",
            "applicationId": "32s5q96dcgg",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["bybpnt47wb3", "em33qujs6h2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:28:38.321Z",
                    "updatedTime": "2023-05-19T14:29:33.063Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "7eh5kb3bx5y",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "icuz5l8ifhe",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "4330ufdei5z",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T13:28:38.528Z",
                    "updatedTime": "2023-05-19T14:29:33.251Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "7z8gbtv1juc",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "icuz5l8ifhe",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "4ifabjcanbz",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:28:31.805Z",
            "updatedTime": "2023-05-19T14:21:54.854Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "4jee73ew8bz",
            "applicationId": "32s5q96dcgg",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["28928jhjgxa", "xp7onuwsqx1"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:28:32.019Z",
                    "updatedTime": "2023-05-19T13:28:32.019Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "hhqq1oejk4r",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "4jee73ew8bz",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "gjhl178yi6a",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T13:28:32.229Z",
                    "updatedTime": "2023-05-19T13:28:32.229Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "gz0we0s844f",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "4jee73ew8bz",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "t2zmwa01la6",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:28:21.523Z",
            "updatedTime": "2023-05-19T14:21:45.013Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "v1fe3hkq600",
            "applicationId": "32s5q96dcgg",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["28928jhjgxa", "xp7onuwsqx1"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:28:21.714Z",
                    "updatedTime": "2023-05-19T13:28:21.714Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "j9b7w7aum4l",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "v1fe3hkq600",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "vbyb3uhibl9",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T13:28:21.912Z",
                    "updatedTime": "2023-05-19T13:28:21.912Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "6osd3ne3wd6",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "v1fe3hkq600",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "6z5srf7bl70",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:28:03.478Z",
            "updatedTime": "2023-05-19T14:21:49.036Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "xzw999p5myp",
            "applicationId": "32s5q96dcgg",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["28928jhjgxa", "xp7onuwsqx1"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:28:03.669Z",
                    "updatedTime": "2023-05-19T13:28:03.669Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "vch5ln6pcop",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "xzw999p5myp",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "wy5w3e7urbj",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T13:28:03.867Z",
                    "updatedTime": "2023-05-19T13:28:03.867Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "12e50ocego8",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "xzw999p5myp",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "i5w3b8gg2x6",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:27:54.484Z",
            "updatedTime": "2023-05-19T14:21:38.625Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "a94pa87js4c",
            "applicationId": "32s5q96dcgg",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.2",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["28928jhjgxa", "xp7onuwsqx1"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:27:54.698Z",
                    "updatedTime": "2023-05-19T13:27:54.698Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "3xtj95j2f3t",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "a94pa87js4c",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "o39dvi2rowh",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T13:27:54.919Z",
                    "updatedTime": "2023-05-19T13:27:54.919Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "3h6av7r0cmp",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "a94pa87js4c",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "bgjalci8ieg",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:27:46.832Z",
            "updatedTime": "2023-05-19T14:21:34.215Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "8u01k5mh377",
            "applicationId": "32s5q96dcgg",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["28928jhjgxa", "xp7onuwsqx1"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:27:47.058Z",
                    "updatedTime": "2023-05-19T13:27:47.058Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "vw80b6qzeya",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "8u01k5mh377",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "3umfcgg654e",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T13:27:47.272Z",
                    "updatedTime": "2023-05-19T13:27:47.272Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "6gkzt74yfao",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "8u01k5mh377",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "e0zchlrfe78",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-17T13:10:47.063Z",
            "updatedTime": "2023-05-19T14:21:29.461Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ve94xqmc13z",
            "applicationId": "32s5q96dcgg",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["28928jhjgxa", "xp7onuwsqx1"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-17T13:10:47.185Z",
                    "updatedTime": "2023-05-19T13:05:25.581Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "sgxc9pju783",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "ve94xqmc13z",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "i5f6g52bh6t",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-17T13:10:47.357Z",
                    "updatedTime": "2023-05-19T13:05:25.732Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "4d5l8k4713m",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "ve94xqmc13z",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "hba4gibwgh7",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:40:14.186Z",
            "updatedTime": "2023-05-19T14:30:58.767Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jeibwqdt5a4",
            "applicationId": "iasaldzfjdq",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nPOST  adds Order, Payment and Customer information to the system returning when Kafka sends the appropriate acknowledgement.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["0r549e38ki8", "bybpnt47wb3", "gnseh2m4zzu"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:40:09.257Z",
            "updatedTime": "2023-05-19T14:24:41.032Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "j369z1je9hu",
            "applicationId": "iasaldzfjdq",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nPOST  adds Order, Payment and Customer information to the system returning when Kafka sends the appropriate acknowledgement.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["28928jhjgxa", "43rgrcusww3", "wg3ivn8dmsv"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:39:59.754Z",
            "updatedTime": "2023-05-19T14:24:36.194Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "dv272gjq5rh",
            "applicationId": "iasaldzfjdq",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nPOST  adds Order, Payment and Customer information to the system returning when Kafka sends the appropriate acknowledgement.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["28928jhjgxa", "43rgrcusww3", "wg3ivn8dmsv"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-17T13:10:48.339Z",
            "updatedTime": "2023-05-19T14:24:31.322Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "e0oqho3xnaa",
            "applicationId": "iasaldzfjdq",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nPOST  adds Order, Payment and Customer information to the system returning when Kafka sends the appropriate acknowledgement.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["28928jhjgxa", "43rgrcusww3", "wg3ivn8dmsv"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:27:15.273Z",
            "updatedTime": "2023-05-19T14:28:53.954Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ak3yugb3by6",
            "applicationId": "lqpdgcna3z1",
            "description": "A legacy codebase that manages changes made to the product catalog, initiated from an internal UI. This has comparatively fewer users, and an existing codebase. Events are picked up from the legacy Postgres database using a CDC connector to push them into Kafka. The single-message transforms feature reformats the messages before they are made public. Images are saved to a distributed filesystem for access by the web tier.\n\n[GitHub source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "1.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["yeapcuz2ep2"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:27:02.859Z",
            "updatedTime": "2023-05-19T14:21:15.368Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "c8sco4azc7t",
            "applicationId": "lqpdgcna3z1",
            "description": "A legacy codebase that manages changes made to the product catalog, initiated from an internal UI. This has comparatively fewer users, and an existing codebase. Events are picked up from the legacy Postgres database using a CDC connector to push them into Kafka. The single-message transforms feature reformats the messages before they are made public. Images are saved to a distributed filesystem for access by the web tier.\n\n[GitHub source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["ey4susl1zag"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:26:51.977Z",
            "updatedTime": "2023-05-19T14:21:10.102Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "70djgq8zibf",
            "applicationId": "lqpdgcna3z1",
            "description": "A legacy codebase that manages changes made to the product catalog, initiated from an internal UI. This has comparatively fewer users, and an existing codebase. Events are picked up from the legacy Postgres database using a CDC connector to push them into Kafka. The single-message transforms feature reformats the messages before they are made public. Images are saved to a distributed filesystem for access by the web tier.\n\n[GitHub source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["ey4susl1zag"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "3",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-17T13:10:49.335Z",
            "updatedTime": "2023-05-19T14:21:03.006Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gvyhjbs61us",
            "applicationId": "lqpdgcna3z1",
            "description": "A legacy codebase that manages changes made to the product catalog, initiated from an internal UI. This has comparatively fewer users, and an existing codebase. Events are picked up from the legacy Postgres database using a CDC connector to push them into Kafka. The single-message transforms feature reformats the messages before they are made public. Images are saved to a distributed filesystem for access by the web tier.\n\n[GitHub source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["ey4susl1zag"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T14:23:24.863Z",
            "updatedTime": "2023-05-19T14:30:18.338Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "tmhh6xd0m0w",
            "applicationId": "ne5ew8miy3g",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["hmo7ylj9iit", "yeapcuz2ep2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T14:23:25.040Z",
                    "updatedTime": "2023-05-19T14:30:18.137Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "udwb3gdh7hn",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "tmhh6xd0m0w",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "s8tjur4cq24",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T14:23:25.248Z",
                    "updatedTime": "2023-05-19T14:30:18.299Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "hk50bub5tkb",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "tmhh6xd0m0w",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "fd0wr4hvnpx",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:38:54.083Z",
            "updatedTime": "2023-05-19T14:23:20.534Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5rab2j76jrr",
            "applicationId": "ne5ew8miy3g",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["7wcniblpcpa", "ey4susl1zag"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:38:54.275Z",
                    "updatedTime": "2023-05-19T13:38:54.275Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "6cki1w8kyi4",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "5rab2j76jrr",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "04t3ffsdwfs",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T13:38:54.472Z",
                    "updatedTime": "2023-05-19T13:38:54.472Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "3plalm8paii",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "5rab2j76jrr",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "704n7yd0d77",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:38:34.603Z",
            "updatedTime": "2023-05-19T14:23:08.055Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "h5wte5fp8vq",
            "applicationId": "ne5ew8miy3g",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["7wcniblpcpa", "ey4susl1zag"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:38:34.763Z",
                    "updatedTime": "2023-05-19T13:38:34.763Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "j1esmw8ztoi",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "h5wte5fp8vq",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ih6iy2dbb5i",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T13:38:34.937Z",
                    "updatedTime": "2023-05-19T13:38:34.937Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "g3c3ggpz9v3",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "h5wte5fp8vq",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "qw7c4a6q200",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:38:26.316Z",
            "updatedTime": "2023-05-19T14:23:02.109Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "w3grcfkb85a",
            "applicationId": "ne5ew8miy3g",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.2",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["7wcniblpcpa", "ey4susl1zag"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:38:26.510Z",
                    "updatedTime": "2023-05-19T13:38:26.510Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "j447t9h5l9j",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "w3grcfkb85a",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "8socbsm3s7y",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T13:38:26.714Z",
                    "updatedTime": "2023-05-19T13:38:26.714Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "zv1ij3qeq7y",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "w3grcfkb85a",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "8r7pmhjh6eo",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:38:20.178Z",
            "updatedTime": "2023-05-19T14:22:41.953Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "49h34lhtv1t",
            "applicationId": "ne5ew8miy3g",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["7wcniblpcpa", "ey4susl1zag"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:38:20.340Z",
                    "updatedTime": "2023-05-19T13:38:20.340Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "i66lz3aqtlf",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "49h34lhtv1t",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "zae49aqmlt4",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T13:38:20.518Z",
                    "updatedTime": "2023-05-19T13:38:20.518Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "j6ifq7f7yg9",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "49h34lhtv1t",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ia6vxbfyyle",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-17T13:10:48.460Z",
            "updatedTime": "2023-05-19T14:22:36.911Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gniq5epfh7d",
            "applicationId": "ne5ew8miy3g",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["7wcniblpcpa", "ey4susl1zag"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-17T13:10:48.611Z",
                    "updatedTime": "2023-05-19T13:05:46.076Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "ooja04pgf11",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "gniq5epfh7d",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "gdeu0hqiqyv",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-17T13:10:48.787Z",
                    "updatedTime": "2023-05-19T13:05:46.270Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "qfmjyx6125m",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "gniq5epfh7d",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "d48nsprxr3f",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T14:25:51.601Z",
            "updatedTime": "2023-05-19T14:31:29.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "1hxhgn02bb7",
            "applicationId": "oani0caggdk",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.2",
            "displayName": "",
            "declaredProducedEventVersionIds": ["42egsebargr"],
            "declaredConsumedEventVersionIds": ["8cidab4096y"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T14:25:51.797Z",
                    "updatedTime": "2023-05-19T14:31:29.596Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "3qctajjyt2m",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "1hxhgn02bb7",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "aozffql2yxa",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T14:25:46.990Z",
            "updatedTime": "2023-05-19T14:26:04.684Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gxffplhfl76",
            "applicationId": "oani0caggdk",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["euuzdh913a5"],
            "declaredConsumedEventVersionIds": ["ejay9hdgtz0"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T14:25:47.185Z",
                    "updatedTime": "2023-05-19T14:25:47.185Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "rjjxmdnei3f",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "gxffplhfl76",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "4479tzegy5c",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:41:29.859Z",
            "updatedTime": "2023-05-19T14:25:58.841Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "xn02g9cphd0",
            "applicationId": "oani0caggdk",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["euuzdh913a5"],
            "declaredConsumedEventVersionIds": ["ejay9hdgtz0"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "3",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:41:30.114Z",
                    "updatedTime": "2023-05-19T13:41:30.114Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "mvaggzxp9ki",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "xn02g9cphd0",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ikic3wuj6bx",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:41:20.311Z",
            "updatedTime": "2023-05-19T14:25:38.285Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "arjpejlshck",
            "applicationId": "oani0caggdk",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.3",
            "displayName": "",
            "declaredProducedEventVersionIds": ["euuzdh913a5"],
            "declaredConsumedEventVersionIds": ["ejay9hdgtz0"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:41:20.492Z",
                    "updatedTime": "2023-05-19T13:41:20.492Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "x021hjdsj0u",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "arjpejlshck",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "h1e7ig4cc7k",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:41:16.264Z",
            "updatedTime": "2023-05-19T14:25:32.428Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "b2u3a5e8a3a",
            "applicationId": "oani0caggdk",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.2",
            "displayName": "",
            "declaredProducedEventVersionIds": ["euuzdh913a5"],
            "declaredConsumedEventVersionIds": ["ejay9hdgtz0"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:41:16.454Z",
                    "updatedTime": "2023-05-19T13:41:16.454Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "e04qqd5tbz7",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "b2u3a5e8a3a",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "6b01dnb62if",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:41:10.850Z",
            "updatedTime": "2023-05-19T14:25:27.762Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "vjfu370xx8v",
            "applicationId": "oani0caggdk",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["euuzdh913a5"],
            "declaredConsumedEventVersionIds": ["ejay9hdgtz0"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:41:11.066Z",
                    "updatedTime": "2023-05-19T13:41:11.066Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "31fhtk0ogbf",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "vjfu370xx8v",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "iqexlkgyxah",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-17T13:10:47.581Z",
            "updatedTime": "2023-05-19T14:25:23.616Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "fspecsk1jni",
            "applicationId": "oani0caggdk",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["euuzdh913a5"],
            "declaredConsumedEventVersionIds": ["ejay9hdgtz0"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-17T13:10:47.761Z",
                    "updatedTime": "2023-05-19T13:08:37.040Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "vaundwrnd06",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "fspecsk1jni",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "7dh3oz118ut",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-17T13:10:45.982Z",
            "updatedTime": "2023-05-19T14:31:59.393Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7b0hcbkakew",
            "applicationId": "on6dadre2s3",
            "description": "A streaming service leveraging the Kafka Streams API. This service reacts to orders as they are created, updating the Shipping topic as notifications are received from the delivery company.\n\n[GitHub Source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["ppkff9j15yg"],
            "declaredConsumedEventVersionIds": ["bybpnt47wb3", "yeapcuz2ep2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-17T13:10:46.104Z",
                    "updatedTime": "2023-05-19T14:31:59.187Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "vb2a49sthjd",
                    "name": "SHIPPING.CATALOGUE",
                    "applicationVersionId": "7b0hcbkakew",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "jedj5rc2cno",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-17T13:10:46.271Z",
                    "updatedTime": "2023-05-19T14:31:59.351Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "x1r26em59qp",
                    "name": "SHIPPING.CUSTOMERS",
                    "applicationVersionId": "7b0hcbkakew",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "s2zxoa2dyj4",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-17T13:10:46.480Z",
            "updatedTime": "2023-05-19T14:26:29.164Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "vwyrre5efz0",
            "applicationId": "on6dadre2s3",
            "description": "A streaming service leveraging the Kafka Streams API. This service reacts to orders as they are created, updating the Shipping topic as notifications are received from the delivery company.",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["er730mn25ad"],
            "declaredConsumedEventVersionIds": ["28928jhjgxa", "ey4susl1zag"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-17T13:10:46.662Z",
                    "updatedTime": "2023-05-17T13:10:46.662Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "7m1r24eo2jc",
                    "name": "SHIPPING.CATALOGUE",
                    "applicationVersionId": "vwyrre5efz0",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "4knw5rojwud",
                            "subscriptionType": "topic",
                            "value": "CATALOGUE",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-17T13:10:46.875Z",
                    "updatedTime": "2023-05-17T13:10:46.875Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "2dcc905rbci",
                    "name": "SHIPPING.CUSTOMERS",
                    "applicationVersionId": "vwyrre5efz0",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "7tn8lm6gj5j",
                            "subscriptionType": "topic",
                            "value": "CUSTOMERS",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:25:18.755Z",
            "updatedTime": "2023-05-19T13:25:19.210Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "diqmf1an4o3",
            "applicationId": "qwqj4nujhrq",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "1.0.2",
            "displayName": "",
            "declaredProducedEventVersionIds": ["7wcniblpcpa", "ejay9hdgtz0"],
            "declaredConsumedEventVersionIds": ["7wcniblpcpa", "wg3ivn8dmsv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:25:18.927Z",
                    "updatedTime": "2023-05-19T13:25:18.927Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "20u0abmy5to",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "diqmf1an4o3",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "024k81oq9fa",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T13:25:19.102Z",
                    "updatedTime": "2023-05-19T13:25:19.102Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "5fhzm7kh9td",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "diqmf1an4o3",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "gxj7q2ezedd",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:25:09.371Z",
            "updatedTime": "2023-05-19T14:20:18.338Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7x8f3q8b9zp",
            "applicationId": "qwqj4nujhrq",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["7wcniblpcpa", "ejay9hdgtz0"],
            "declaredConsumedEventVersionIds": ["7wcniblpcpa", "wg3ivn8dmsv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:25:09.574Z",
                    "updatedTime": "2023-05-19T13:25:09.574Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "l9405d5zlio",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "7x8f3q8b9zp",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "q97i10xzadk",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T13:25:09.775Z",
                    "updatedTime": "2023-05-19T13:25:09.775Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "a0f5otn2ag3",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "7x8f3q8b9zp",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ycz45n92txh",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:24:57.415Z",
            "updatedTime": "2023-05-19T14:20:12.220Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "xheoe1la1hu",
            "applicationId": "qwqj4nujhrq",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["7wcniblpcpa", "ejay9hdgtz0"],
            "declaredConsumedEventVersionIds": ["7wcniblpcpa", "wg3ivn8dmsv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "3",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:24:57.619Z",
                    "updatedTime": "2023-05-19T13:24:57.619Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "3k6kaf769cl",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "xheoe1la1hu",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ffd1emxtcqa",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T13:24:57.817Z",
                    "updatedTime": "2023-05-19T13:24:57.817Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "pw0apfuxf0t",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "xheoe1la1hu",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "50atmx0xoad",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:24:47.638Z",
            "updatedTime": "2023-05-19T14:20:05.588Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "j27341ecc26",
            "applicationId": "qwqj4nujhrq",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["7wcniblpcpa", "ejay9hdgtz0"],
            "declaredConsumedEventVersionIds": ["7wcniblpcpa", "wg3ivn8dmsv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:24:47.882Z",
                    "updatedTime": "2023-05-19T13:24:47.882Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "6q2z88h7gta",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "j27341ecc26",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "o1mzj4eg5g9",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T13:24:48.109Z",
                    "updatedTime": "2023-05-19T13:24:48.109Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "6u2en5kdlyr",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "j27341ecc26",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ktqbb2sc31w",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-17T13:10:50.069Z",
            "updatedTime": "2023-05-19T14:20:01.378Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7oboyucv3y3",
            "applicationId": "qwqj4nujhrq",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["7wcniblpcpa", "ejay9hdgtz0"],
            "declaredConsumedEventVersionIds": ["7wcniblpcpa", "wg3ivn8dmsv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-17T13:10:50.201Z",
                    "updatedTime": "2023-05-17T13:10:50.201Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "s59o7scqcb5",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "7oboyucv3y3",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "9yrxwll8njh",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-17T13:10:50.397Z",
                    "updatedTime": "2023-05-17T13:10:50.397Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "3hu20s9ao2r",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "7oboyucv3y3",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "eaxd77uae2f",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T14:24:07.649Z",
            "updatedTime": "2023-05-19T14:30:35.405Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "14xpgqqle76",
            "applicationId": "rgahglblgff",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "3.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["yeapcuz2ep2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T14:24:07.867Z",
                    "updatedTime": "2023-05-19T14:30:35.366Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "efz5gxq2dd2",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "14xpgqqle76",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "gc52bo82xs0",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:39:27.461Z",
            "updatedTime": "2023-05-19T14:24:15.658Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7ktcsgd08y5",
            "applicationId": "rgahglblgff",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "3.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["ey4susl1zag"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:39:27.603Z",
                    "updatedTime": "2023-05-19T13:39:27.603Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "w9ngdxurohg",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "7ktcsgd08y5",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "m64nxhs7w8u",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:39:19.207Z",
            "updatedTime": "2023-05-19T14:23:55.921Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ab8hbaot451",
            "applicationId": "rgahglblgff",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["ey4susl1zag"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:39:19.380Z",
                    "updatedTime": "2023-05-19T13:39:19.380Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "hz34l661b4t",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "ab8hbaot451",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "svlzhystpxl",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:39:11.830Z",
            "updatedTime": "2023-05-19T14:23:52.012Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ng5w22l0loo",
            "applicationId": "rgahglblgff",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["ey4susl1zag"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:39:11.986Z",
                    "updatedTime": "2023-05-19T13:39:11.986Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "xalh62b3tv5",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "ng5w22l0loo",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "zci47bud9uy",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:39:00.894Z",
            "updatedTime": "2023-05-19T14:23:45.308Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7b84hpjcfsv",
            "applicationId": "rgahglblgff",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["ey4susl1zag"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:39:01.064Z",
                    "updatedTime": "2023-05-19T13:39:01.064Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "3ej747uu9yd",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "7b84hpjcfsv",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "7gvn315wx9s",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-17T13:10:49.008Z",
            "updatedTime": "2023-05-19T14:23:41.044Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "bw0zpwa53m9",
            "applicationId": "rgahglblgff",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["ey4susl1zag"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-17T13:10:49.144Z",
                    "updatedTime": "2023-05-19T13:05:58.780Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "nr5h4hfb2m4",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "bw0zpwa53m9",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "fb2cdzoh81b",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:37:45.420Z",
            "updatedTime": "2023-05-19T14:29:54.901Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "n5ro2b9mdpb",
            "applicationId": "v6cu57w46ym",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["em33qujs6h2"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:36:08.159Z",
            "updatedTime": "2023-05-19T14:22:23.792Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "wtrhg8f59kb",
            "applicationId": "v6cu57w46ym",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["xp7onuwsqx1"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:29:02.703Z",
            "updatedTime": "2023-05-19T14:22:18.511Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "mmfgf89p6xg",
            "applicationId": "v6cu57w46ym",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["xp7onuwsqx1"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:28:53.552Z",
            "updatedTime": "2023-05-19T14:22:14.552Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7v2b79x62sm",
            "applicationId": "v6cu57w46ym",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.2",
            "displayName": "",
            "declaredProducedEventVersionIds": ["xp7onuwsqx1"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:28:48.379Z",
            "updatedTime": "2023-05-19T14:22:10.222Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ty5fowfmd4n",
            "applicationId": "v6cu57w46ym",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["xp7onuwsqx1"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-17T13:10:49.511Z",
            "updatedTime": "2023-05-19T14:22:06.014Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "59sgddsf6xw",
            "applicationId": "v6cu57w46ym",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["xp7onuwsqx1"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:24:34.656Z",
            "updatedTime": "2023-05-19T13:24:35.167Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "dzy2zm0pf6g",
            "applicationId": "vbmx5dw5ygs",
            "description": "This service searches for potentially fraudulent transactions by calculating the total value of orders for a customer within a time period, then checks to see if this is over a configured limit. \n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/FraudService.java)",
            "version": "1.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["ejay9hdgtz0"],
            "declaredConsumedEventVersionIds": ["wg3ivn8dmsv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:24:35.054Z",
                    "updatedTime": "2023-05-19T13:24:35.054Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "g8jg81zsnwh",
                    "name": "FRAUD.ORDERCREATED",
                    "applicationVersionId": "dzy2zm0pf6g",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "3zfcoglble5",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:24:20.583Z",
            "updatedTime": "2023-05-19T14:19:50.920Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "j6d398hkros",
            "applicationId": "vbmx5dw5ygs",
            "description": "This service searches for potentially fraudulent transactions by calculating the total value of orders for a customer within a time period, then checks to see if this is over a configured limit. \n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/FraudService.java)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["ejay9hdgtz0"],
            "declaredConsumedEventVersionIds": ["wg3ivn8dmsv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:24:20.738Z",
                    "updatedTime": "2023-05-19T13:24:20.738Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "lcx0x9444q8",
                    "name": "FRAUD.ORDERCREATED",
                    "applicationVersionId": "j6d398hkros",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "jhb46a7u82m",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:24:05.497Z",
            "updatedTime": "2023-05-19T14:19:40.865Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "32vjckk7c0s",
            "applicationId": "vbmx5dw5ygs",
            "description": "This service searches for potentially fraudulent transactions by calculating the total value of orders for a customer within a time period, then checks to see if this is over a configured limit. \n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/FraudService.java)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["ejay9hdgtz0"],
            "declaredConsumedEventVersionIds": ["wg3ivn8dmsv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:24:05.721Z",
                    "updatedTime": "2023-05-19T13:24:05.721Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "2brjpszic51",
                    "name": "FRAUD.ORDERCREATED",
                    "applicationVersionId": "32vjckk7c0s",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ysj7kcf5n76",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-17T13:10:49.717Z",
            "updatedTime": "2023-05-19T14:19:45.344Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "d3sggkd3qqi",
            "applicationId": "vbmx5dw5ygs",
            "description": "This service searches for potentially fraudulent transactions by calculating the total value of orders for a customer within a time period, then checks to see if this is over a configured limit. \n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/FraudService.java)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["ejay9hdgtz0"],
            "declaredConsumedEventVersionIds": ["wg3ivn8dmsv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-17T13:10:49.861Z",
                    "updatedTime": "2023-05-17T13:10:49.861Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "7wpi1o7fexf",
                    "name": "FRAUD.ORDERCREATED",
                    "applicationVersionId": "d3sggkd3qqi",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "xdl6vbfcnwu",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:23:50.247Z",
            "updatedTime": "2023-05-19T14:28:18.225Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "2rs578mqkpk",
            "applicationId": "xb624jrx6gb",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "1.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["0r549e38ki8", "bybpnt47wb3", "gnseh2m4zzu"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:23:50.733Z",
                    "updatedTime": "2023-05-19T14:28:17.899Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "f212j3f25fz",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "2rs578mqkpk",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "xp3qzgg931h",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T13:23:51.076Z",
                    "updatedTime": "2023-05-19T14:28:18.045Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "2lef4nod6dt",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "2rs578mqkpk",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "kzzoy4e1u4y",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T13:23:51.481Z",
                    "updatedTime": "2023-05-19T14:28:18.191Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "zk1o5aehoy7",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "2rs578mqkpk",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "69fb0w2sk52",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:23:27.302Z",
            "updatedTime": "2023-05-19T14:19:29.766Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "afz5ji5hohu",
            "applicationId": "xb624jrx6gb",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["28928jhjgxa", "43rgrcusww3", "wg3ivn8dmsv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:23:27.473Z",
                    "updatedTime": "2023-05-19T13:23:27.473Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "182f4kjr1bo",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "afz5ji5hohu",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "revp5hk5kx3",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T13:23:27.654Z",
                    "updatedTime": "2023-05-19T13:23:27.654Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "19ai5owy1zq",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "afz5ji5hohu",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "li7cc0a0fe3",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T13:23:27.899Z",
                    "updatedTime": "2023-05-19T13:23:27.899Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "ly3b85j2x94",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "afz5ji5hohu",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "0b112ibtvxg",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:22:19.738Z",
            "updatedTime": "2023-05-19T14:19:17.851Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "qr4293ha18b",
            "applicationId": "xb624jrx6gb",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["28928jhjgxa", "43rgrcusww3", "wg3ivn8dmsv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:22:19.931Z",
                    "updatedTime": "2023-05-19T13:22:19.931Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "1b3uulk6la6",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "qr4293ha18b",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "pj3jnyz8p9g",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T13:22:20.138Z",
                    "updatedTime": "2023-05-19T13:22:20.138Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "842od5lufgb",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "qr4293ha18b",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "9wjfy6ng5he",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T13:22:20.407Z",
                    "updatedTime": "2023-05-19T13:22:20.407Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "q1713mcbo0b",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "qr4293ha18b",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "8h58j07d9d0",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:21:31.237Z",
            "updatedTime": "2023-05-19T14:19:08.006Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "by3j3idyich",
            "applicationId": "xb624jrx6gb",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["28928jhjgxa", "43rgrcusww3", "wg3ivn8dmsv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:21:31.534Z",
                    "updatedTime": "2023-05-19T13:21:31.534Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "sug2wgvq4o8",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "by3j3idyich",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "yohysyk6pkj",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T13:21:31.821Z",
                    "updatedTime": "2023-05-19T13:21:31.821Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "hjpohgxa1c5",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "by3j3idyich",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ofjd3c304c9",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T13:21:32.092Z",
                    "updatedTime": "2023-05-19T13:21:32.092Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "7uj0izklb9b",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "by3j3idyich",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "wn0t4g4sgew",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-17T13:10:50.728Z",
            "updatedTime": "2023-05-19T14:18:58.508Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "yndv0ctn4l0",
            "applicationId": "xb624jrx6gb",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["28928jhjgxa", "43rgrcusww3", "wg3ivn8dmsv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-17T13:10:50.910Z",
                    "updatedTime": "2023-05-17T13:10:50.910Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "rawg1gz97qi",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "yndv0ctn4l0",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "4c6yv6ad530",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-17T13:10:51.150Z",
                    "updatedTime": "2023-05-17T13:10:51.150Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "4fcre87o5k9",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "yndv0ctn4l0",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "0safayt3iwr",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-17T13:10:51.406Z",
                    "updatedTime": "2023-05-17T13:10:51.406Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "4m6eh7xa2i1",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "yndv0ctn4l0",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "1lkke483vis",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:26:13.785Z",
            "updatedTime": "2023-05-19T13:26:14.057Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5w8z5f4b0ma",
            "applicationId": "xecac7y09sk",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "1.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["ejay9hdgtz0"],
            "declaredConsumedEventVersionIds": ["wg3ivn8dmsv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:26:13.997Z",
                    "updatedTime": "2023-05-19T13:26:13.997Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "yef7hgre5o8",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "5w8z5f4b0ma",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "k3rywapbve0",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:26:00.316Z",
            "updatedTime": "2023-05-19T14:20:44.069Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jwq4t9lo77b",
            "applicationId": "xecac7y09sk",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["ejay9hdgtz0"],
            "declaredConsumedEventVersionIds": ["wg3ivn8dmsv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:26:00.501Z",
                    "updatedTime": "2023-05-19T13:26:00.501Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "11tra9iztq4",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "jwq4t9lo77b",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "j692f7glr3w",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:25:48.638Z",
            "updatedTime": "2023-05-19T14:20:39.619Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "8ugf6iceyg1",
            "applicationId": "xecac7y09sk",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "0.2.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["ejay9hdgtz0"],
            "declaredConsumedEventVersionIds": ["wg3ivn8dmsv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:25:48.817Z",
                    "updatedTime": "2023-05-19T13:25:48.817Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "a7vnd8tfu5f",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "8ugf6iceyg1",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "gjyrtfey8q0",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T13:25:43.379Z",
            "updatedTime": "2023-05-19T14:20:35.485Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "9d2tnkupetl",
            "applicationId": "xecac7y09sk",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["ejay9hdgtz0"],
            "declaredConsumedEventVersionIds": ["wg3ivn8dmsv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T13:25:43.535Z",
                    "updatedTime": "2023-05-19T13:25:43.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "6jbary5yj59",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "9d2tnkupetl",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "09yk1a2jugs",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-17T13:10:51.704Z",
            "updatedTime": "2023-05-19T14:20:31.415Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jvvmoccgiw1",
            "applicationId": "xecac7y09sk",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["ejay9hdgtz0"],
            "declaredConsumedEventVersionIds": ["wg3ivn8dmsv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-17T13:10:51.845Z",
                    "updatedTime": "2023-05-19T13:09:58.634Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "3s97e2g7iiy",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "jvvmoccgiw1",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "mp440m57223",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }
    ],
    "events": [{
            "createdTime": "2023-05-17T13:10:44.137Z",
            "updatedTime": "2023-05-19T14:46:19.048Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "s71nrp69hu4",
            "name": "Basket",
            "shared": false,
            "applicationDomainId": "wkc8286f133",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "d4knt7uzgkv",
                    "customAttributeDefinitionName": "confidential",
                    "value": "false"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 2,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-17T13:10:44.137Z",
            "updatedTime": "2023-05-19T14:45:25.863Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "kbxdm3up5bk",
            "name": "Catalogue",
            "shared": true,
            "applicationDomainId": "8ehea540f18",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "d4knt7uzgkv",
                    "customAttributeDefinitionName": "confidential",
                    "value": "false"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-17T13:10:44.137Z",
            "updatedTime": "2023-05-19T14:46:32.820Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "h86133vrh6i",
            "name": "Customer",
            "shared": true,
            "applicationDomainId": "wkc8286f133",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "d4knt7uzgkv",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 4
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-17T13:10:44.137Z",
            "updatedTime": "2023-05-19T14:46:47.422Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "vbg507vytdd",
            "name": "Order Created",
            "shared": true,
            "applicationDomainId": "wkc8286f133",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "d4knt7uzgkv",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-17T13:10:44.137Z",
            "updatedTime": "2023-05-19T14:47:13.500Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "swqoz90cvs0",
            "name": "Order Updated",
            "shared": true,
            "applicationDomainId": "wkc8286f133",
            "numberOfVersions": 4,
            "customAttributes": [{
                    "customAttributeDefinitionId": "d4knt7uzgkv",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 2
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-17T13:10:44.137Z",
            "updatedTime": "2023-05-19T14:47:37.038Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "06pb0b08kt9",
            "name": "Order Validated",
            "shared": false,
            "applicationDomainId": "wkc8286f133",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "d4knt7uzgkv",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-17T13:10:44.137Z",
            "updatedTime": "2023-05-19T14:47:51.758Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "8ajwhlhzh9a",
            "name": "Payment",
            "shared": true,
            "applicationDomainId": "wkc8286f133",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "d4knt7uzgkv",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 4
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-17T13:10:44.137Z",
            "updatedTime": "2023-05-19T14:48:54.243Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "lkb4q84000j",
            "name": "Shipping",
            "shared": false,
            "applicationDomainId": "nc6ga85by8s",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "d4knt7uzgkv",
                    "customAttributeDefinitionName": "confidential",
                    "value": "false"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-17T13:10:44.137Z",
            "updatedTime": "2023-05-19T14:44:42.042Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5e2hgq700ru",
            "name": "Warehouse Inventory",
            "shared": true,
            "applicationDomainId": "u9ijat9sq54",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "d4knt7uzgkv",
                    "customAttributeDefinitionName": "confidential",
                    "value": "false"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 3
                }
            },
            "type": "event"
        }
    ],
    "eventVersions": [{
            "createdTime": "2023-05-19T13:48:24.679Z",
            "updatedTime": "2023-05-19T14:35:03.568Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "42egsebargr",
            "eventId": "06pb0b08kt9",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "1.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "jc6cr8vnldh",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:48:06.965Z",
            "updatedTime": "2023-05-19T14:16:51.236Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "wgnciofqyxq",
            "eventId": "06pb0b08kt9",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "5shgc3fb2c1",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:48:01.737Z",
            "updatedTime": "2023-05-19T14:16:48.142Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "4agjevunkg5",
            "eventId": "06pb0b08kt9",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "5shgc3fb2c1",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:47:50.982Z",
            "updatedTime": "2023-05-19T14:16:42.612Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "zqtbktj6xao",
            "eventId": "06pb0b08kt9",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "0.2.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "5shgc3fb2c1",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-17T13:10:45.364Z",
            "updatedTime": "2023-05-19T14:16:37.299Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "euuzdh913a5",
            "eventId": "06pb0b08kt9",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "5shgc3fb2c1",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:43:15.907Z",
            "updatedTime": "2023-05-19T14:32:37.941Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "hmo7ylj9iit",
            "eventId": "5e2hgq700ru",
            "description": "Current stock levels for items in the warehouse",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "a5wnne07y1f",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:42:27.889Z",
            "updatedTime": "2023-05-19T14:04:44.471Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "o9g8vv720qb",
            "eventId": "5e2hgq700ru",
            "description": "Current stock levels for items in the warehouse",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "b98eo7geup5",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:42:18.407Z",
            "updatedTime": "2023-05-19T14:04:38.904Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ylvf28xz728",
            "eventId": "5e2hgq700ru",
            "description": "Current stock levels for items in the warehouse",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "b98eo7geup5",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:42:12.374Z",
            "updatedTime": "2023-05-19T14:04:34.086Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gdhcj2ahdgb",
            "eventId": "5e2hgq700ru",
            "description": "Current stock levels for items in the warehouse",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "b98eo7geup5",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-17T13:10:45.364Z",
            "updatedTime": "2023-05-19T14:04:28.688Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7wcniblpcpa",
            "eventId": "5e2hgq700ru",
            "description": "Current stock levels for items in the warehouse",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "b98eo7geup5",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T14:17:12.372Z",
            "updatedTime": "2023-05-19T14:35:24.360Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gnseh2m4zzu",
            "eventId": "8ajwhlhzh9a",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "1.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "3s25ulk3oe8",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:49:02.324Z",
            "updatedTime": "2023-05-19T14:17:41.598Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "hstr3shl8p1",
            "eventId": "8ajwhlhzh9a",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "y0yqije6k18",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:48:45.609Z",
            "updatedTime": "2023-05-19T14:17:32.443Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "my0wp57wfhz",
            "eventId": "8ajwhlhzh9a",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "0.1.3",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "y0yqije6k18",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:48:39.763Z",
            "updatedTime": "2023-05-19T14:17:28.297Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "wr9vs0e3fhe",
            "eventId": "8ajwhlhzh9a",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "y0yqije6k18",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:48:36.075Z",
            "updatedTime": "2023-05-19T14:17:24.386Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "9hh57fz5lgw",
            "eventId": "8ajwhlhzh9a",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "y0yqije6k18",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-17T13:10:45.364Z",
            "updatedTime": "2023-05-19T14:17:19.863Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "43rgrcusww3",
            "eventId": "8ajwhlhzh9a",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "y0yqije6k18",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T14:15:17.558Z",
            "updatedTime": "2023-05-19T14:34:08.006Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "bybpnt47wb3",
            "eventId": "h86133vrh6i",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "2.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "jz35bkpsat3",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:46:32.500Z",
            "updatedTime": "2023-05-19T14:15:22.300Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "fl2bjwa870x",
            "eventId": "h86133vrh6i",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "2.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "zogbif4o02z",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:46:23.341Z",
            "updatedTime": "2023-05-19T14:15:06.741Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "nw22893l1m4",
            "eventId": "h86133vrh6i",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "0.2.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "zogbif4o02z",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:46:04.831Z",
            "updatedTime": "2023-05-19T14:15:02.557Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ipdiqr083p6",
            "eventId": "h86133vrh6i",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "zogbif4o02z",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:45:41.931Z",
            "updatedTime": "2023-05-19T14:14:57.494Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "cmiwg0b8xdx",
            "eventId": "h86133vrh6i",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "zogbif4o02z",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-17T13:10:45.364Z",
            "updatedTime": "2023-05-19T14:14:51.540Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "28928jhjgxa",
            "eventId": "h86133vrh6i",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "zogbif4o02z",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:43:59.621Z",
            "updatedTime": "2023-05-19T14:32:56.946Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "yeapcuz2ep2",
            "eventId": "kbxdm3up5bk",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "9jm98s4b882",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:43:45.165Z",
            "updatedTime": "2023-05-19T14:13:46.145Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "bza5kd92ixe",
            "eventId": "kbxdm3up5bk",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "g0ogd0b4256",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:43:37.209Z",
            "updatedTime": "2023-05-19T14:13:31.410Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "fsaho932for",
            "eventId": "kbxdm3up5bk",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "g0ogd0b4256",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:43:33.458Z",
            "updatedTime": "2023-05-19T14:13:27.172Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0u8lggm4nj6",
            "eventId": "kbxdm3up5bk",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "g0ogd0b4256",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-17T13:10:45.364Z",
            "updatedTime": "2023-05-19T14:13:22.435Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ey4susl1zag",
            "eventId": "kbxdm3up5bk",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "g0ogd0b4256",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T14:18:03.041Z",
            "updatedTime": "2023-05-19T14:35:52.454Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ppkff9j15yg",
            "eventId": "lkb4q84000j",
            "description": "Changes in the shipping status of ordered items as they move out of the warehouse to home delivery.",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "f80o0y5v9hg",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "shipping",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:49:29.193Z",
            "updatedTime": "2023-05-19T14:18:07.255Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "z40a7cz8j8p",
            "eventId": "lkb4q84000j",
            "description": "Changes in the shipping status of ordered items as they move out of the warehouse to home delivery.",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "yt2qz68y620",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "shipping",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:49:20.029Z",
            "updatedTime": "2023-05-19T14:18:44.975Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0odz7ul9m0i",
            "eventId": "lkb4q84000j",
            "description": "Changes in the shipping status of ordered items as they move out of the warehouse to home delivery.",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "yt2qz68y620",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "shipping",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-17T13:10:45.364Z",
            "updatedTime": "2023-05-19T14:18:40.266Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "qg56tj0dxd9",
            "eventId": "lkb4q84000j",
            "description": "Changes in the shipping status of ordered items as they move out of the warehouse to home delivery.",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "yt2qz68y620",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "shipping",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-17T13:10:45.364Z",
            "updatedTime": "2023-05-19T14:18:35.272Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "er730mn25ad",
            "eventId": "lkb4q84000j",
            "description": "Changes in the shipping status of ordered items.",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "yt2qz68y620",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "SHIPPING",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:44:58.009Z",
            "updatedTime": "2023-05-19T14:33:31.775Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "em33qujs6h2",
            "eventId": "s71nrp69hu4",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "1.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "94jykowsv8z",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:44:48.770Z",
            "updatedTime": "2023-05-19T14:14:36.471Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "z6s5od4mskh",
            "eventId": "s71nrp69hu4",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "40mee0tuxb5",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:44:34.446Z",
            "updatedTime": "2023-05-19T14:14:25.541Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "6e3mtfg9ta2",
            "eventId": "s71nrp69hu4",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "40mee0tuxb5",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:44:25.688Z",
            "updatedTime": "2023-05-19T14:14:17.178Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "loqex32gagk",
            "eventId": "s71nrp69hu4",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "40mee0tuxb5",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:44:21.264Z",
            "updatedTime": "2023-05-19T14:14:12.519Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "qoqdbfsfmpi",
            "eventId": "s71nrp69hu4",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "40mee0tuxb5",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-17T13:10:45.364Z",
            "updatedTime": "2023-05-19T14:14:05.718Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "xp7onuwsqx1",
            "eventId": "s71nrp69hu4",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "40mee0tuxb5",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T14:16:20.838Z",
            "updatedTime": "2023-05-19T14:34:40.528Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "8cidab4096y",
            "eventId": "swqoz90cvs0",
            "description": "As the order moves through the fulfillment process, each service add to this topic to show current state.",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "6zzail86ypk",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "order-validations",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:47:39.874Z",
            "updatedTime": "2023-05-19T14:16:26.334Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ijlehgt5156",
            "eventId": "swqoz90cvs0",
            "description": "As the order moves through the fulfillment process, each service add to this topic to show current state.",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "smyxqwo7fny",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "order-validations",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:47:31.496Z",
            "updatedTime": "2023-05-19T14:16:08.552Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "77sqd5amcwp",
            "eventId": "swqoz90cvs0",
            "description": "As the order moves through the fulfillment process, each service add to this topic to show current state.",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "smyxqwo7fny",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "order-validations",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-17T13:10:45.364Z",
            "updatedTime": "2023-05-19T14:16:00.423Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ejay9hdgtz0",
            "eventId": "swqoz90cvs0",
            "description": "As the order moves through the fulfillment process, each service add to this topic to show current state.",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "smyxqwo7fny",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "order-validations",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:47:22.314Z",
            "updatedTime": "2023-05-19T14:34:25.293Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0r549e38ki8",
            "eventId": "vbg507vytdd",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "2.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "ahf0w8w2je2",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:47:11.479Z",
            "updatedTime": "2023-05-19T14:15:49.502Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "np10boc990s",
            "eventId": "vbg507vytdd",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "2.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "jvdc7y776gf",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:46:55.802Z",
            "updatedTime": "2023-05-19T14:15:44.854Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "2siqi7ng7yg",
            "eventId": "vbg507vytdd",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "0.2.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "jvdc7y776gf",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T13:46:48.167Z",
            "updatedTime": "2023-05-19T14:15:40.081Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "geg9n5xqnyi",
            "eventId": "vbg507vytdd",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "0.2.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "jvdc7y776gf",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-17T13:10:45.364Z",
            "updatedTime": "2023-05-19T14:15:35.043Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "wg3ivn8dmsv",
            "eventId": "vbg507vytdd",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "jvdc7y776gf",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }
    ],
    "schemas": [{
            "createdTime": "2023-05-17T13:10:43.967Z",
            "updatedTime": "2023-05-19T14:07:39.861Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "tk9c714d7yg",
            "applicationDomainId": "wkc8286f133",
            "name": "Basket",
            "shared": false,
            "schemaType": "avro",
            "numberOfVersions": 7,
            "eventVersionRefCount": 6,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 2,
                    "3": 4
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-17T13:10:43.986Z",
            "updatedTime": "2023-05-19T14:06:41.032Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ivetwbt9ixk",
            "applicationDomainId": "8ehea540f18",
            "name": "Catalog",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 8,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "3": 7
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-17T13:10:44.007Z",
            "updatedTime": "2023-05-19T14:08:31.030Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "m3m4c212n4e",
            "applicationDomainId": "wkc8286f133",
            "name": "Customer",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 8,
            "eventVersionRefCount": 6,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 6
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-17T13:10:44.027Z",
            "updatedTime": "2023-05-19T14:09:16.547Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "z8gdehoacf8",
            "applicationDomainId": "wkc8286f133",
            "name": "Enriched Order",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 6,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 4
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-17T13:10:44.116Z",
            "updatedTime": "2023-05-19T14:04:08.109Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "1u83okgcy1k",
            "applicationDomainId": "u9ijat9sq54",
            "name": "Inventory",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 6,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 4
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-17T13:10:44.050Z",
            "updatedTime": "2023-05-19T14:10:15.348Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ck1hs5sjh7l",
            "applicationDomainId": "wkc8286f133",
            "name": "Order",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 8,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 6
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-17T13:10:44.073Z",
            "updatedTime": "2023-05-19T14:11:10.618Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "x3rrb1xauja",
            "applicationDomainId": "wkc8286f133",
            "name": "Order Validation",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 7,
            "eventVersionRefCount": 4,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 5
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-17T13:10:44.094Z",
            "updatedTime": "2023-05-19T14:11:42.330Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "90hsa4iq8fe",
            "applicationDomainId": "wkc8286f133",
            "name": "Payment",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 5,
            "eventVersionRefCount": 6,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 3
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-17T13:10:43.947Z",
            "updatedTime": "2023-05-19T14:12:51.316Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0avkvhmho22",
            "applicationDomainId": "nc6ga85by8s",
            "name": "Shipping",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 5,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 1,
                    "4": 2
                }
            },
            "customAttributes": [],
            "type": "schema"
        }
    ],
    "schemaVersions": [{
            "createdTime": "2023-05-19T13:56:20.996Z",
            "updatedTime": "2023-05-19T13:56:20.996Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "6zzail86ypk",
            "schemaId": "x3rrb1xauja",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "3.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:56:16.142Z",
            "updatedTime": "2023-05-19T14:11:10.618Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "45dfbovscqv",
            "schemaId": "x3rrb1xauja",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "3.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:53:30.986Z",
            "updatedTime": "2023-05-19T13:53:30.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jz35bkpsat3",
            "schemaId": "m3m4c212n4e",
            "description": "Represents a customer of the store ",
            "version": "2.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:56:03.562Z",
            "updatedTime": "2023-05-19T14:11:04.543Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "6hg4eeigc9a",
            "schemaId": "x3rrb1xauja",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "2.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:53:26.756Z",
            "updatedTime": "2023-05-19T14:08:31.030Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "sbgtbg7brtr",
            "schemaId": "m3m4c212n4e",
            "description": "Represents a customer of the store ",
            "version": "2.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:52:23.375Z",
            "updatedTime": "2023-05-19T13:52:23.375Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "94jykowsv8z",
            "schemaId": "tk9c714d7yg",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "1.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T14:03:52.996Z",
            "updatedTime": "2023-05-19T14:03:52.996Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "a5wnne07y1f",
            "schemaId": "1u83okgcy1k",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "1.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:57:12.842Z",
            "updatedTime": "2023-05-19T13:57:12.842Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "3s25ulk3oe8",
            "schemaId": "90hsa4iq8fe",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "1.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:58:43.028Z",
            "updatedTime": "2023-05-19T14:03:45.091Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "93p1wozcu95",
            "schemaId": "1u83okgcy1k",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "1.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:52:12.041Z",
            "updatedTime": "2023-05-19T14:07:39.861Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "9vnu0xf0y23",
            "schemaId": "tk9c714d7yg",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "1.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:53:18.643Z",
            "updatedTime": "2023-05-19T14:08:24.462Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5i7hojdeg21",
            "schemaId": "m3m4c212n4e",
            "description": "Represents a customer of the store ",
            "version": "1.0.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T14:06:41.032Z",
            "updatedTime": "2023-05-19T14:06:41.032Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "9jm98s4b882",
            "schemaId": "ivetwbt9ixk",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "1.0.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:54:12.444Z",
            "updatedTime": "2023-05-19T13:54:12.444Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jc6cr8vnldh",
            "schemaId": "z8gdehoacf8",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "1.0.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:54:08.539Z",
            "updatedTime": "2023-05-19T14:09:16.547Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0xnh2pi5ba1",
            "schemaId": "z8gdehoacf8",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "1.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:55:16.482Z",
            "updatedTime": "2023-05-19T13:55:16.482Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ahf0w8w2je2",
            "schemaId": "ck1hs5sjh7l",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "1.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:50:04.614Z",
            "updatedTime": "2023-05-19T13:50:04.614Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "f80o0y5v9hg",
            "schemaId": "0avkvhmho22",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "1.0.1",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:53:14.757Z",
            "updatedTime": "2023-05-19T14:08:19.289Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "is02td8hz8t",
            "schemaId": "m3m4c212n4e",
            "description": "Represents a customer of the store ",
            "version": "1.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T14:06:11.026Z",
            "updatedTime": "2023-05-19T14:06:30.399Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "t6x3vatxwpy",
            "schemaId": "ivetwbt9ixk",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "1.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:55:11.661Z",
            "updatedTime": "2023-05-19T14:10:15.348Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "3318285464c",
            "schemaId": "ck1hs5sjh7l",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:49:59.531Z",
            "updatedTime": "2023-05-19T14:12:51.316Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "46f8vwzbvdq",
            "schemaId": "0avkvhmho22",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:54:04.816Z",
            "updatedTime": "2023-05-19T14:09:11.095Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "a66mef37ylj",
            "schemaId": "z8gdehoacf8",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:52:04.582Z",
            "updatedTime": "2023-05-19T14:07:35.397Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "fo54grujjlv",
            "schemaId": "tk9c714d7yg",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:58:33.777Z",
            "updatedTime": "2023-05-19T14:04:08.109Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gierx3xsv8e",
            "schemaId": "1u83okgcy1k",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:53:11.309Z",
            "updatedTime": "2023-05-19T14:08:14.327Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gmoek7dkko5",
            "schemaId": "m3m4c212n4e",
            "description": "Represents a customer of the store ",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:55:51.815Z",
            "updatedTime": "2023-05-19T14:10:58.926Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gufjxeipugs",
            "schemaId": "x3rrb1xauja",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:57:02.460Z",
            "updatedTime": "2023-05-19T14:11:42.330Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "mn2h9b1ajxb",
            "schemaId": "90hsa4iq8fe",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:58:00.327Z",
            "updatedTime": "2023-05-19T14:06:37.252Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "o613k29g7hh",
            "schemaId": "ivetwbt9ixk",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:55:01.477Z",
            "updatedTime": "2023-05-19T14:10:06.135Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "vbiwwkb767v",
            "schemaId": "ck1hs5sjh7l",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.3.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:57:53.511Z",
            "updatedTime": "2023-05-19T14:05:59.523Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "l66myssy6k7",
            "schemaId": "ivetwbt9ixk",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.3.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:54:52.994Z",
            "updatedTime": "2023-05-19T14:09:59.285Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ma5f80b22sa",
            "schemaId": "ck1hs5sjh7l",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.3.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:53:56.212Z",
            "updatedTime": "2023-05-19T14:09:03.114Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "e8wp1elaegq",
            "schemaId": "z8gdehoacf8",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "0.2.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:53:03.393Z",
            "updatedTime": "2023-05-19T14:08:06.388Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "hltz4vamhip",
            "schemaId": "m3m4c212n4e",
            "description": "Represents a customer of the store ",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:51:50.618Z",
            "updatedTime": "2023-05-19T14:07:28.065Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ida5f9vomig",
            "schemaId": "tk9c714d7yg",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:54:45.067Z",
            "updatedTime": "2023-05-19T14:09:52.333Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "r9aatbnf44i",
            "schemaId": "ck1hs5sjh7l",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:57:45.774Z",
            "updatedTime": "2023-05-19T14:05:52.850Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "u8cp60lkyfg",
            "schemaId": "ivetwbt9ixk",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:53:52.612Z",
            "updatedTime": "2023-05-19T14:08:54.306Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "x1nm9ilkvdo",
            "schemaId": "z8gdehoacf8",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:51:40.123Z",
            "updatedTime": "2023-05-19T14:07:22.284Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "4ikrhvt9flw",
            "schemaId": "tk9c714d7yg",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:49:51.731Z",
            "updatedTime": "2023-05-19T13:50:27.380Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "6ooiwvoin2d",
            "schemaId": "0avkvhmho22",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "4",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:55:44.018Z",
            "updatedTime": "2023-05-19T14:10:52.389Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "70ghfqqa3ej",
            "schemaId": "x3rrb1xauja",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:56:52.927Z",
            "updatedTime": "2023-05-19T14:11:34.808Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "fcdipd0ig07",
            "schemaId": "90hsa4iq8fe",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:54:29.668Z",
            "updatedTime": "2023-05-19T14:09:46.133Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "qr4ebq2wc0f",
            "schemaId": "ck1hs5sjh7l",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:57:37.258Z",
            "updatedTime": "2023-05-19T14:05:48.839Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "seek3vfs1h2",
            "schemaId": "ivetwbt9ixk",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:58:26.356Z",
            "updatedTime": "2023-05-19T14:01:04.002Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "zg85kycro5v",
            "schemaId": "1u83okgcy1k",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:54:23.828Z",
            "updatedTime": "2023-05-19T14:09:40.751Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "05olz9qmqug",
            "schemaId": "ck1hs5sjh7l",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:56:49.501Z",
            "updatedTime": "2023-05-19T14:11:30.467Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "2hcz3ul7ago",
            "schemaId": "90hsa4iq8fe",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:55:38.631Z",
            "updatedTime": "2023-05-19T14:10:47.423Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5vbe5wi3hvb",
            "schemaId": "x3rrb1xauja",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:58:19.506Z",
            "updatedTime": "2023-05-19T14:00:57.926Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "a41r0h8kmgv",
            "schemaId": "1u83okgcy1k",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:51:34.918Z",
            "updatedTime": "2023-05-19T14:07:18.073Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "a81x22arn90",
            "schemaId": "tk9c714d7yg",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:57:34.327Z",
            "updatedTime": "2023-05-19T14:05:44.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "j45xmxygr0z",
            "schemaId": "ivetwbt9ixk",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:52:52.368Z",
            "updatedTime": "2023-05-19T14:08:00.718Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jpfwks4khbj",
            "schemaId": "m3m4c212n4e",
            "description": "Represents a customer of the store ",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T13:49:46.562Z",
            "updatedTime": "2023-05-19T13:50:33.840Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "xwla96m9j2x",
            "schemaId": "0avkvhmho22",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "4",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-17T13:10:44.507Z",
            "updatedTime": "2023-05-19T14:07:04.729Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "40mee0tuxb5",
            "schemaId": "tk9c714d7yg",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-17T13:10:44.634Z",
            "updatedTime": "2023-05-19T14:08:46.780Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5shgc3fb2c1",
            "schemaId": "z8gdehoacf8",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-17T13:10:45.018Z",
            "updatedTime": "2023-05-19T14:00:43.085Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "b98eo7geup5",
            "schemaId": "1u83okgcy1k",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-17T13:10:44.844Z",
            "updatedTime": "2023-05-19T14:05:35.373Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "g0ogd0b4256",
            "schemaId": "ivetwbt9ixk",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-17T13:10:44.701Z",
            "updatedTime": "2023-05-19T14:09:33.381Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jvdc7y776gf",
            "schemaId": "ck1hs5sjh7l",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-17T13:10:44.926Z",
            "updatedTime": "2023-05-19T14:10:41.502Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "smyxqwo7fny",
            "schemaId": "x3rrb1xauja",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-17T13:10:44.568Z",
            "updatedTime": "2023-05-19T14:11:25.773Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "y0yqije6k18",
            "schemaId": "90hsa4iq8fe",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-17T13:10:44.448Z",
            "updatedTime": "2023-05-19T14:12:45.591Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "yt2qz68y620",
            "schemaId": "0avkvhmho22",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-17T13:10:44.771Z",
            "updatedTime": "2023-05-19T14:07:55.544Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "zogbif4o02z",
            "schemaId": "m3m4c212n4e",
            "description": "Represents a customer of the store ",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }
    ],
    "enums": [],
    "enumVersions": [],
    "eventApis": [],
    "eventApiVersions": [],
    "eventApiProducts": [],
    "eventApiProductVersions": [],
    "addressSpaces": [{
            "createdTime": "2023-05-17T13:10:42.137Z",
            "updatedTime": "2023-05-17T13:10:42.137Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "2hxbdiyvlge",
            "brokerType": "kafka",
            "delimiter": ".",
            "type": "addressSpace"
        }
    ],
    "customAttributeDefinitions": [{
            "createdTime": "2023-05-19T14:42:42.343Z",
            "updatedTime": "2023-05-19T14:44:24.241Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "d4knt7uzgkv",
            "name": "confidential",
            "valueType": "STRING",
            "scope": "applicationDomain",
            "associatedEntityTypes": ["application", "event"],
            "associatedEntities": [{
                    "entityType": "application",
                    "applicationDomainIds": ["u9ijat9sq54"]
                }, {
                    "entityType": "event",
                    "applicationDomainIds": ["8ehea540f18", "nc6ga85by8s", "u9ijat9sq54", "wkc8286f133"]
                }
            ],
            "type": "customAttributeDefinition"
        }
    ]
}
