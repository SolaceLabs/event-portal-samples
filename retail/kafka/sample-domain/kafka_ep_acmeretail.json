{
    "formatVersion": "2.0.0",
    "applicationDomains": [{
            "createdTime": "2023-05-19T15:05:13.734Z",
            "updatedTime": "2023-05-19T15:05:13.734Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "9fn6ms2bb6b",
            "name": "Fulfillment",
            "description": "Event Hubs",
            "uniqueTopicAddressEnforcementEnabled": false,
            "topicDomainEnforcementEnabled": false,
            "customAttributes": [],
            "type": "applicationDomain"
        }, {
            "createdTime": "2023-05-19T15:05:13.734Z",
            "updatedTime": "2023-05-19T15:05:13.734Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "91y7rbzxgbb",
            "name": "Merchandising",
            "description": "Event Hubs",
            "uniqueTopicAddressEnforcementEnabled": false,
            "topicDomainEnforcementEnabled": false,
            "customAttributes": [],
            "type": "applicationDomain"
        }, {
            "createdTime": "2023-05-19T15:05:13.734Z",
            "updatedTime": "2023-05-19T15:05:13.734Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5bfgxcppt6z",
            "name": "OnlineServices",
            "description": "Event Hubs",
            "uniqueTopicAddressEnforcementEnabled": false,
            "topicDomainEnforcementEnabled": false,
            "customAttributes": [],
            "type": "applicationDomain"
        }, {
            "createdTime": "2023-05-19T15:05:13.734Z",
            "updatedTime": "2023-05-19T15:05:13.734Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jhcmohnqxns",
            "name": "Shipping",
            "description": "Event Hubs",
            "uniqueTopicAddressEnforcementEnabled": false,
            "topicDomainEnforcementEnabled": false,
            "customAttributes": [],
            "type": "applicationDomain"
        }
    ],
    "topicDomains": [],
    "applications": [{
            "createdTime": "2023-05-19T15:05:14.227Z",
            "updatedTime": "2023-05-19T15:18:35.959Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "i39okjaslib",
            "name": "Basket Service - Basket View (kSQL)",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "5bfgxcppt6z",
            "numberOfVersions": 7,
            "customAttributes": [{
                    "customAttributeDefinitionId": "h9dtui71whl",
                    "customAttributeDefinitionName": "application-type",
                    "value": "ksql"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-19T15:05:14.247Z",
            "updatedTime": "2023-05-19T15:18:52.915Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "hsl0adfe9rj",
            "name": "Basket Service - Basket Writer (REST proxy)",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "5bfgxcppt6z",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "h9dtui71whl",
                    "customAttributeDefinitionName": "application-type",
                    "value": "rest-proxy"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-19T15:05:14.267Z",
            "updatedTime": "2023-05-19T15:19:02.864Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "6vlyfcnt7g3",
            "name": "Catalogue Filter View (kSQL)",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "5bfgxcppt6z",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "h9dtui71whl",
                    "customAttributeDefinitionName": "application-type",
                    "value": "ksql"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-19T15:05:14.287Z",
            "updatedTime": "2023-05-19T15:19:17.738Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "6ffhsub737g",
            "name": "Catalogue Search (Kafka Connect -> Elasticsearch)",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "5bfgxcppt6z",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "h9dtui71whl",
                    "customAttributeDefinitionName": "application-type",
                    "value": "kafka-connect"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-19T15:05:14.308Z",
            "updatedTime": "2023-05-19T15:18:12.712Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "q04eaauw9y2",
            "name": "Catalogue Services",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "91y7rbzxgbb",
            "numberOfVersions": 4,
            "customAttributes": [{
                    "customAttributeDefinitionId": "h9dtui71whl",
                    "customAttributeDefinitionName": "application-type",
                    "value": "cobol"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-19T15:05:14.330Z",
            "updatedTime": "2023-05-19T15:17:21.127Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "82q83afk1b6",
            "name": "Email Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "9fn6ms2bb6b",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "h9dtui71whl",
                    "customAttributeDefinitionName": "application-type",
                    "value": "java"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-19T15:05:14.363Z",
            "updatedTime": "2023-05-19T15:17:34.152Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gpkybjt0yx4",
            "name": "Fraud Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "9fn6ms2bb6b",
            "numberOfVersions": 4,
            "customAttributes": [{
                    "customAttributeDefinitionId": "h9dtui71whl",
                    "customAttributeDefinitionName": "application-type",
                    "value": "java"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-19T15:05:14.384Z",
            "updatedTime": "2023-05-19T15:16:59.004Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "v93ao6pjhdn",
            "name": "Inventory Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "9fn6ms2bb6b",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "h9dtui71whl",
                    "customAttributeDefinitionName": "application-type",
                    "value": "java"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-19T15:05:14.404Z",
            "updatedTime": "2023-05-19T15:17:43.414Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "a0f57ap60wy",
            "name": "Order Details Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "9fn6ms2bb6b",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "h9dtui71whl",
                    "customAttributeDefinitionName": "application-type",
                    "value": "ksql"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-19T15:05:14.425Z",
            "updatedTime": "2023-05-19T15:19:35.806Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "f5i33iw9ps1",
            "name": "Orders Service  - Order Writer",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "5bfgxcppt6z",
            "numberOfVersions": 4,
            "customAttributes": [{
                    "customAttributeDefinitionId": "h9dtui71whl",
                    "customAttributeDefinitionName": "application-type",
                    "value": "rest-proxy"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-19T15:05:14.449Z",
            "updatedTime": "2023-05-19T15:19:49.204Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "2t8e46iqc9c",
            "name": "Orders Service - Orders View",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "5bfgxcppt6z",
            "numberOfVersions": 4,
            "customAttributes": [{
                    "customAttributeDefinitionId": "h9dtui71whl",
                    "customAttributeDefinitionName": "application-type",
                    "value": "rest-proxy"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-19T15:05:14.472Z",
            "updatedTime": "2023-05-19T15:20:02.969Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "579is5n2glh",
            "name": "Orders Service - Validations Aggregator",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "5bfgxcppt6z",
            "numberOfVersions": 7,
            "customAttributes": [{
                    "customAttributeDefinitionId": "h9dtui71whl",
                    "customAttributeDefinitionName": "application-type",
                    "value": "java"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-19T15:05:14.496Z",
            "updatedTime": "2023-05-19T15:20:29.408Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "9tenjmi6c0h",
            "name": "Shipping Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "jhcmohnqxns",
            "numberOfVersions": 2,
            "customAttributes": [{
                    "customAttributeDefinitionId": "h9dtui71whl",
                    "customAttributeDefinitionName": "application-type",
                    "value": "kafka-streams"
                }
            ],
            "type": "application"
        }
    ],
    "applicationVersions": [{
            "createdTime": "2023-05-19T15:05:22.852Z",
            "updatedTime": "2023-05-19T15:06:25.798Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "1gudsppyk5e",
            "applicationId": "2t8e46iqc9c",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nGET returns requested order, blocking for timeout if no id present.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.2",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["a7py403hpn0"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:23.012Z",
                    "updatedTime": "2023-05-19T15:05:23.012Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "6qjl26lakbt",
                    "name": "ORDERSVIEW.ORDERVALIDATED",
                    "applicationVersionId": "1gudsppyk5e",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "5chioa99dnq",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:23.193Z",
            "updatedTime": "2023-05-19T15:05:23.409Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "r26vehxe82w",
            "applicationId": "2t8e46iqc9c",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nGET returns requested order, blocking for timeout if no id present.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["hlb42a4ho0a"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:23.353Z",
                    "updatedTime": "2023-05-19T15:05:23.353Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "rj9rx9g5gs2",
                    "name": "ORDERSVIEW.ORDERVALIDATED",
                    "applicationVersionId": "r26vehxe82w",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "t807eb5k19x",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:23.524Z",
            "updatedTime": "2023-05-19T15:05:23.776Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "hnjl294adka",
            "applicationId": "2t8e46iqc9c",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nGET returns requested order, blocking for timeout if no id present.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["hlb42a4ho0a"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:23.685Z",
                    "updatedTime": "2023-05-19T15:05:23.685Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "xaumc71u9tg",
                    "name": "ORDERSVIEW.ORDERVALIDATED",
                    "applicationVersionId": "hnjl294adka",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "u0hhbb6scyy",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:23.904Z",
            "updatedTime": "2023-05-19T15:05:24.126Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "i4nym74mdc9",
            "applicationId": "2t8e46iqc9c",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nGET returns requested order, blocking for timeout if no id present.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["hlb42a4ho0a"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:24.067Z",
                    "updatedTime": "2023-05-19T15:05:24.067Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "beglp2exdu0",
                    "name": "ORDERSVIEW.ORDERVALIDATED",
                    "applicationVersionId": "i4nym74mdc9",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "nwdduf4z87i",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:33.652Z",
            "updatedTime": "2023-05-19T15:06:26.142Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "n8kye8ryu3y",
            "applicationId": "579is5n2glh",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.2",
            "displayName": "",
            "declaredProducedEventVersionIds": ["a7py403hpn0"],
            "declaredConsumedEventVersionIds": ["g61dnwt93wb"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:33.845Z",
                    "updatedTime": "2023-05-19T15:05:33.845Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "f2kfuv4k40b",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "n8kye8ryu3y",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "jfc9101a3er",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:34.031Z",
            "updatedTime": "2023-05-19T15:05:34.281Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7zlitx7k6nj",
            "applicationId": "579is5n2glh",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["hlb42a4ho0a"],
            "declaredConsumedEventVersionIds": ["oymvwehaswj"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:34.226Z",
                    "updatedTime": "2023-05-19T15:05:34.226Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "xgk5gpueh0f",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "7zlitx7k6nj",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "peyc71r0t8x",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:34.425Z",
            "updatedTime": "2023-05-19T15:05:34.683Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "22y6aekxknf",
            "applicationId": "579is5n2glh",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["hlb42a4ho0a"],
            "declaredConsumedEventVersionIds": ["oymvwehaswj"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "3",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:34.624Z",
                    "updatedTime": "2023-05-19T15:05:34.624Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "d1w5v8xlsqx",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "22y6aekxknf",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "sgornqxvnwa",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:34.829Z",
            "updatedTime": "2023-05-19T15:05:35.086Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "vru2lm5yh7b",
            "applicationId": "579is5n2glh",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.3",
            "displayName": "",
            "declaredProducedEventVersionIds": ["hlb42a4ho0a"],
            "declaredConsumedEventVersionIds": ["oymvwehaswj"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:35.030Z",
                    "updatedTime": "2023-05-19T15:05:35.030Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "pjw7oi2equ0",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "vru2lm5yh7b",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "tnyjgk1hbma",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:35.223Z",
            "updatedTime": "2023-05-19T15:05:35.474Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "pr7jrxy0b9f",
            "applicationId": "579is5n2glh",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.2",
            "displayName": "",
            "declaredProducedEventVersionIds": ["hlb42a4ho0a"],
            "declaredConsumedEventVersionIds": ["oymvwehaswj"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:35.418Z",
                    "updatedTime": "2023-05-19T15:05:35.418Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "7ev0inb4wtx",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "pr7jrxy0b9f",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ifjbmh3yl8d",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:35.602Z",
            "updatedTime": "2023-05-19T15:05:35.873Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "rqjgi96abbc",
            "applicationId": "579is5n2glh",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["hlb42a4ho0a"],
            "declaredConsumedEventVersionIds": ["oymvwehaswj"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:35.798Z",
                    "updatedTime": "2023-05-19T15:05:35.798Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "2nqhmxjj91p",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "rqjgi96abbc",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "dymozkrta8k",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:36.002Z",
            "updatedTime": "2023-05-19T15:05:36.260Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0le532gqas2",
            "applicationId": "579is5n2glh",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["hlb42a4ho0a"],
            "declaredConsumedEventVersionIds": ["oymvwehaswj"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:36.203Z",
                    "updatedTime": "2023-05-19T15:05:36.203Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "eyhu55m0b6f",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "0le532gqas2",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "g1z042gv3y1",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:41.223Z",
            "updatedTime": "2023-05-19T15:06:25.100Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "xs2aihqw8jx",
            "applicationId": "6ffhsub737g",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "3.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["dg337d6d323"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:41.395Z",
                    "updatedTime": "2023-05-19T15:05:41.395Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "jydsef35z5l",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "xs2aihqw8jx",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "6cy5xdsdsgc",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:41.611Z",
            "updatedTime": "2023-05-19T15:05:41.859Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "wwhsgnjb8md",
            "applicationId": "6ffhsub737g",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "3.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["3xj3i1juc6g"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:41.796Z",
                    "updatedTime": "2023-05-19T15:05:41.796Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "h9cr5cdz69j",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "wwhsgnjb8md",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "0xhxxys8thu",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:42.039Z",
            "updatedTime": "2023-05-19T15:05:42.329Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "4o3uxkmowwo",
            "applicationId": "6ffhsub737g",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["3xj3i1juc6g"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:42.260Z",
                    "updatedTime": "2023-05-19T15:05:42.260Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "j7mxdlvdj1v",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "4o3uxkmowwo",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "wki6sczksju",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:42.485Z",
            "updatedTime": "2023-05-19T15:05:42.727Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "k4ep6p53cgx",
            "applicationId": "6ffhsub737g",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["3xj3i1juc6g"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:42.663Z",
                    "updatedTime": "2023-05-19T15:05:42.663Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "rt97e7cwnff",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "k4ep6p53cgx",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "tmm72j4qf70",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:42.880Z",
            "updatedTime": "2023-05-19T15:05:43.120Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "whngjjl6sha",
            "applicationId": "6ffhsub737g",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["3xj3i1juc6g"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:43.055Z",
                    "updatedTime": "2023-05-19T15:05:43.055Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "f2la3icapf5",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "whngjjl6sha",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "hfba4ailu4w",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:43.296Z",
            "updatedTime": "2023-05-19T15:05:43.610Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "xgdisz5o350",
            "applicationId": "6ffhsub737g",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["3xj3i1juc6g"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:43.511Z",
                    "updatedTime": "2023-05-19T15:05:43.511Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "25xlly6gara",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "xgdisz5o350",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "bfeaqpgi1c5",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:29.856Z",
            "updatedTime": "2023-05-19T15:06:24.679Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "v1p1kk82pq1",
            "applicationId": "6vlyfcnt7g3",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["b71fjbmc3qg", "dg337d6d323"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:30.037Z",
                    "updatedTime": "2023-05-19T15:05:30.037Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "jz5pxsq3asm",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "v1p1kk82pq1",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "c5zgcth65b6",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:30.232Z",
                    "updatedTime": "2023-05-19T15:05:30.232Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "vo9r4twj54n",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "v1p1kk82pq1",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "i2qedk8ywuq",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:30.472Z",
            "updatedTime": "2023-05-19T15:05:30.933Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "87hjfrqopou",
            "applicationId": "6vlyfcnt7g3",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["3xj3i1juc6g", "f2yek6q4jdv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:30.646Z",
                    "updatedTime": "2023-05-19T15:05:30.646Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "hc2ekccwwcc",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "87hjfrqopou",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "c3p0ew4fgfk",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:30.822Z",
                    "updatedTime": "2023-05-19T15:05:30.822Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "40usqp47cmr",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "87hjfrqopou",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "0zj087lir37",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:31.088Z",
            "updatedTime": "2023-05-19T15:05:31.584Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "d11iyfmlmat",
            "applicationId": "6vlyfcnt7g3",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["3xj3i1juc6g", "f2yek6q4jdv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:31.292Z",
                    "updatedTime": "2023-05-19T15:05:31.292Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "fc4oa0aryv6",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "d11iyfmlmat",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "p1nvtqh5k1a",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:31.477Z",
                    "updatedTime": "2023-05-19T15:05:31.477Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "04xh78mdlnd",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "d11iyfmlmat",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "7dyguiga32b",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:31.759Z",
            "updatedTime": "2023-05-19T15:05:32.282Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gg9mmr86nub",
            "applicationId": "6vlyfcnt7g3",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.2",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["3xj3i1juc6g", "f2yek6q4jdv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:31.988Z",
                    "updatedTime": "2023-05-19T15:05:31.988Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "88u356nn63r",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "gg9mmr86nub",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ib9y2rmd7hb",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:32.176Z",
                    "updatedTime": "2023-05-19T15:05:32.176Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "s8xvu16oa9j",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "gg9mmr86nub",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "fe19pkxgvu5",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:32.426Z",
            "updatedTime": "2023-05-19T15:05:32.881Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "xrgiqqfhd21",
            "applicationId": "6vlyfcnt7g3",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["3xj3i1juc6g", "f2yek6q4jdv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:32.596Z",
                    "updatedTime": "2023-05-19T15:05:32.596Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "ozgqw5okncj",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "xrgiqqfhd21",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "nasswk62acx",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:32.775Z",
                    "updatedTime": "2023-05-19T15:05:32.775Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "r2r88z6e0my",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "xrgiqqfhd21",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "f76vp14kod2",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:33.021Z",
            "updatedTime": "2023-05-19T15:05:33.512Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ndy2yigfiww",
            "applicationId": "6vlyfcnt7g3",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["3xj3i1juc6g", "f2yek6q4jdv"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:33.225Z",
                    "updatedTime": "2023-05-19T15:05:33.225Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "fhoqlvt9n01",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "ndy2yigfiww",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ac34k6houdq",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:33.413Z",
                    "updatedTime": "2023-05-19T15:05:33.413Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "6swg5oshdx7",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "ndy2yigfiww",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "32f61kvxlfz",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:46.882Z",
            "updatedTime": "2023-05-19T15:16:30.759Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "f4l19taswwf",
            "applicationId": "82q83afk1b6",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "1.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["rsuzdddf9z6", "wcx4x6s2yho", "x0ut0nk7dcx"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:47.130Z",
                    "updatedTime": "2023-05-19T15:16:30.383Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "fk69fjekht4",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "f4l19taswwf",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ih2d7443jdr",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:47.374Z",
                    "updatedTime": "2023-05-19T15:16:30.553Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "br5z9pyk3pt",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "f4l19taswwf",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "7gplpo0fd50",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:47.666Z",
                    "updatedTime": "2023-05-19T15:16:30.724Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "o28g4zhoh2e",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "f4l19taswwf",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "3ubms01hzdd",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:47.993Z",
            "updatedTime": "2023-05-19T15:05:48.903Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "j2echdgrf9z",
            "applicationId": "82q83afk1b6",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["0faoj6wr7ki", "u3c79a7erjp", "xwkf45ko94a"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:48.257Z",
                    "updatedTime": "2023-05-19T15:05:48.257Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "chj9hbdt4rp",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "j2echdgrf9z",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "9paxwoxtbib",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:48.499Z",
                    "updatedTime": "2023-05-19T15:05:48.499Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "endbs2nc094",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "j2echdgrf9z",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "xefilm5fegq",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:48.786Z",
                    "updatedTime": "2023-05-19T15:05:48.786Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "p5h5hyvfzt2",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "j2echdgrf9z",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "4g46zby74ca",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:49.114Z",
            "updatedTime": "2023-05-19T15:05:50.035Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "katk894ba2t",
            "applicationId": "82q83afk1b6",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["0faoj6wr7ki", "u3c79a7erjp", "xwkf45ko94a"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:49.366Z",
                    "updatedTime": "2023-05-19T15:05:49.366Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "y9g8nmq8icp",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "katk894ba2t",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "5sozhba2bfy",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:49.609Z",
                    "updatedTime": "2023-05-19T15:05:49.609Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "u7nkc82l6ee",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "katk894ba2t",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "lvhnoew85we",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:49.911Z",
                    "updatedTime": "2023-05-19T15:05:49.911Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "xj2aeu6en7b",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "katk894ba2t",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "4j1u37q79qp",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:50.250Z",
            "updatedTime": "2023-05-19T15:05:51.245Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "9g4x9k9b336",
            "applicationId": "82q83afk1b6",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["0faoj6wr7ki", "u3c79a7erjp", "xwkf45ko94a"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:50.577Z",
                    "updatedTime": "2023-05-19T15:05:50.577Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "5hnjzc70e51",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "9g4x9k9b336",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "26rvvgv4v08",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:50.832Z",
                    "updatedTime": "2023-05-19T15:05:50.832Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "w629v36lcf6",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "9g4x9k9b336",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "lpeyp3e68ei",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:51.125Z",
                    "updatedTime": "2023-05-19T15:05:51.125Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "kropre91z2k",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "9g4x9k9b336",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "v58brxty6jb",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:51.438Z",
            "updatedTime": "2023-05-19T15:05:52.355Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "56fmjv2ovb4",
            "applicationId": "82q83afk1b6",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["0faoj6wr7ki", "u3c79a7erjp", "xwkf45ko94a"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:51.699Z",
                    "updatedTime": "2023-05-19T15:05:51.699Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "bvz5h0rx135",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "56fmjv2ovb4",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "sedk6764igi",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:51.941Z",
                    "updatedTime": "2023-05-19T15:05:51.941Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "152j6yolr72",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "56fmjv2ovb4",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "fnxwfz3knna",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:52.232Z",
                    "updatedTime": "2023-05-19T15:05:52.232Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "4o5j7szpq46",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "56fmjv2ovb4",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "uu5eb0xc63s",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:36.395Z",
            "updatedTime": "2023-05-19T15:06:26.479Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "u6fkpy29cfe",
            "applicationId": "9tenjmi6c0h",
            "description": "A streaming service leveraging the Kafka Streams API. This service reacts to orders as they are created, updating the Shipping topic as notifications are received from the delivery company.\n\n[GitHub Source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["0s9bixdd9vh"],
            "declaredConsumedEventVersionIds": ["dg337d6d323", "wcx4x6s2yho"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:36.599Z",
                    "updatedTime": "2023-05-19T15:05:36.599Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "bdj8md4rerx",
                    "name": "SHIPPING.CATALOGUE",
                    "applicationVersionId": "u6fkpy29cfe",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "28ip5ssxb7j",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:36.811Z",
                    "updatedTime": "2023-05-19T15:05:36.811Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "5ugaau3eb7m",
                    "name": "SHIPPING.CUSTOMERS",
                    "applicationVersionId": "u6fkpy29cfe",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "p5bd7zjh2d4",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:37.087Z",
            "updatedTime": "2023-05-19T15:05:37.571Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "u4d3jjghx5f",
            "applicationId": "9tenjmi6c0h",
            "description": "A streaming service leveraging the Kafka Streams API. This service reacts to orders as they are created, updating the Shipping topic as notifications are received from the delivery company.",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["zlkvg47tv7y"],
            "declaredConsumedEventVersionIds": ["0faoj6wr7ki", "3xj3i1juc6g"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:37.355Z",
                    "updatedTime": "2023-05-19T15:05:37.355Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "z7cfitg270a",
                    "name": "SHIPPING.CATALOGUE",
                    "applicationVersionId": "u4d3jjghx5f",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "pk826dnjyqd",
                            "subscriptionType": "topic",
                            "value": "CATALOGUE",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:37.507Z",
                    "updatedTime": "2023-05-19T15:05:37.507Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "fqqx72s6d3y",
                    "name": "SHIPPING.CUSTOMERS",
                    "applicationVersionId": "u4d3jjghx5f",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "72tt00i5p57",
                            "subscriptionType": "topic",
                            "value": "CUSTOMERS",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:52.535Z",
            "updatedTime": "2023-05-19T15:14:26.841Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "wo8rfhzajmt",
            "applicationId": "a0f57ap60wy",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "1.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["g61dnwt93wb"],
            "declaredConsumedEventVersionIds": ["rsuzdddf9z6"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:52.747Z",
                    "updatedTime": "2023-05-19T15:14:26.806Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "6wlen35yx97",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "wo8rfhzajmt",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "t4fmwhvgwjz",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:52.980Z",
            "updatedTime": "2023-05-19T15:05:53.277Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "zlks2kdu03b",
            "applicationId": "a0f57ap60wy",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["oymvwehaswj"],
            "declaredConsumedEventVersionIds": ["u3c79a7erjp"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:53.213Z",
                    "updatedTime": "2023-05-19T15:05:53.213Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "wi16ai03b2t",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "zlks2kdu03b",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "a5a5annaxhu",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:53.448Z",
            "updatedTime": "2023-05-19T15:05:53.714Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "9e2c3l0wwx1",
            "applicationId": "a0f57ap60wy",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "0.2.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["oymvwehaswj"],
            "declaredConsumedEventVersionIds": ["u3c79a7erjp"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:53.647Z",
                    "updatedTime": "2023-05-19T15:05:53.647Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "q5yni1uv44l",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "9e2c3l0wwx1",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "rcrsnwcbq58",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:53.887Z",
            "updatedTime": "2023-05-19T15:05:54.155Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "9g3kn0qe0f0",
            "applicationId": "a0f57ap60wy",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["oymvwehaswj"],
            "declaredConsumedEventVersionIds": ["u3c79a7erjp"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:54.090Z",
                    "updatedTime": "2023-05-19T15:05:54.090Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "p3bn3bga0d6",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "9g3kn0qe0f0",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "y94j511sfdh",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:54.321Z",
            "updatedTime": "2023-05-19T15:05:54.592Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "a9wz6tb70d4",
            "applicationId": "a0f57ap60wy",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["oymvwehaswj"],
            "declaredConsumedEventVersionIds": ["u3c79a7erjp"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:54.528Z",
                    "updatedTime": "2023-05-19T15:05:54.528Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "zdr7kc3ez5m",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "a9wz6tb70d4",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "tof02kz1jkg",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:28.523Z",
            "updatedTime": "2023-05-19T15:06:25.428Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "uik9rzeh4x4",
            "applicationId": "f5i33iw9ps1",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nPOST  adds Order, Payment and Customer information to the system returning when Kafka sends the appropriate acknowledgement.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["rsuzdddf9z6", "wcx4x6s2yho", "x0ut0nk7dcx"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:28.691Z",
            "updatedTime": "2023-05-19T15:05:28.691Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "dlkjm7krh3f",
            "applicationId": "f5i33iw9ps1",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nPOST  adds Order, Payment and Customer information to the system returning when Kafka sends the appropriate acknowledgement.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["0faoj6wr7ki", "u3c79a7erjp", "xwkf45ko94a"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:28.863Z",
            "updatedTime": "2023-05-19T15:05:28.863Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jks21g72kps",
            "applicationId": "f5i33iw9ps1",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nPOST  adds Order, Payment and Customer information to the system returning when Kafka sends the appropriate acknowledgement.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["0faoj6wr7ki", "u3c79a7erjp", "xwkf45ko94a"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:29.033Z",
            "updatedTime": "2023-05-19T15:05:29.033Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "eep1a9gj9tk",
            "applicationId": "f5i33iw9ps1",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nPOST  adds Order, Payment and Customer information to the system returning when Kafka sends the appropriate acknowledgement.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["0faoj6wr7ki", "u3c79a7erjp", "xwkf45ko94a"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:45.101Z",
            "updatedTime": "2023-05-19T15:14:44.852Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0fdcy9hcnof",
            "applicationId": "gpkybjt0yx4",
            "description": "This service searches for potentially fraudulent transactions by calculating the total value of orders for a customer within a time period, then checks to see if this is over a configured limit. \n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/FraudService.java)",
            "version": "1.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["g61dnwt93wb"],
            "declaredConsumedEventVersionIds": ["rsuzdddf9z6"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:45.343Z",
                    "updatedTime": "2023-05-19T15:14:44.788Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "1xkrey0wqgp",
                    "name": "FRAUD.ORDERCREATED",
                    "applicationVersionId": "0fdcy9hcnof",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "82mc765t650",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:45.586Z",
            "updatedTime": "2023-05-19T15:05:45.855Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "wfnw88c13dg",
            "applicationId": "gpkybjt0yx4",
            "description": "This service searches for potentially fraudulent transactions by calculating the total value of orders for a customer within a time period, then checks to see if this is over a configured limit. \n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/FraudService.java)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["oymvwehaswj"],
            "declaredConsumedEventVersionIds": ["u3c79a7erjp"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:45.791Z",
                    "updatedTime": "2023-05-19T15:05:45.791Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "qf2ay27l28f",
                    "name": "FRAUD.ORDERCREATED",
                    "applicationVersionId": "wfnw88c13dg",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "asfn9eh0j5h",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:46.029Z",
            "updatedTime": "2023-05-19T15:05:46.298Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "yg1tfli36qg",
            "applicationId": "gpkybjt0yx4",
            "description": "This service searches for potentially fraudulent transactions by calculating the total value of orders for a customer within a time period, then checks to see if this is over a configured limit. \n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/FraudService.java)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["oymvwehaswj"],
            "declaredConsumedEventVersionIds": ["u3c79a7erjp"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:46.233Z",
                    "updatedTime": "2023-05-19T15:05:46.233Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "h2u5mk4snqr",
                    "name": "FRAUD.ORDERCREATED",
                    "applicationVersionId": "yg1tfli36qg",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ndmqzanl75e",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:46.460Z",
            "updatedTime": "2023-05-19T15:05:46.720Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "wu8aljqbufj",
            "applicationId": "gpkybjt0yx4",
            "description": "This service searches for potentially fraudulent transactions by calculating the total value of orders for a customer within a time period, then checks to see if this is over a configured limit. \n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/FraudService.java)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["oymvwehaswj"],
            "declaredConsumedEventVersionIds": ["u3c79a7erjp"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:46.657Z",
                    "updatedTime": "2023-05-19T15:05:46.657Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "eh27ivqha15",
                    "name": "FRAUD.ORDERCREATED",
                    "applicationVersionId": "wu8aljqbufj",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "rf37gcnb57u",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:43.828Z",
            "updatedTime": "2023-05-19T15:06:24.354Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "9blcahkekyg",
            "applicationId": "hsl0adfe9rj",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["b8impyj76n1"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:44.090Z",
            "updatedTime": "2023-05-19T15:05:44.090Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "sdfxn78vpko",
            "applicationId": "hsl0adfe9rj",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["4gach9yb3dc"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:44.299Z",
            "updatedTime": "2023-05-19T15:05:44.299Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "og0zjy03fmk",
            "applicationId": "hsl0adfe9rj",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["4gach9yb3dc"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:44.494Z",
            "updatedTime": "2023-05-19T15:05:44.494Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "rxxo3h4ocf6",
            "applicationId": "hsl0adfe9rj",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.2",
            "displayName": "",
            "declaredProducedEventVersionIds": ["4gach9yb3dc"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:44.691Z",
            "updatedTime": "2023-05-19T15:05:44.691Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gkwlcn7ym2j",
            "applicationId": "hsl0adfe9rj",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["4gach9yb3dc"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:44.883Z",
            "updatedTime": "2023-05-19T15:05:44.883Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "h5n8k33bztx",
            "applicationId": "hsl0adfe9rj",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["4gach9yb3dc"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:24.257Z",
            "updatedTime": "2023-05-19T15:06:24.051Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "nka3g7lj709",
            "applicationId": "i39okjaslib",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["b8impyj76n1", "wcx4x6s2yho"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:24.446Z",
                    "updatedTime": "2023-05-19T15:05:24.446Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "8iaddrnrn3y",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "nka3g7lj709",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "be62oln95j6",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:24.613Z",
                    "updatedTime": "2023-05-19T15:05:24.613Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "g5f5oidagpj",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "nka3g7lj709",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "08rg5wpe37m",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:24.829Z",
            "updatedTime": "2023-05-19T15:05:25.545Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "xd204506gzn",
            "applicationId": "i39okjaslib",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["0faoj6wr7ki", "4gach9yb3dc"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:25.028Z",
                    "updatedTime": "2023-05-19T15:05:25.028Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "ox58gnfyezq",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "xd204506gzn",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "wksfa5md1rm",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:25.447Z",
                    "updatedTime": "2023-05-19T15:05:25.447Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "btufmjkdhif",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "xd204506gzn",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "hnnnfmaho07",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:25.676Z",
            "updatedTime": "2023-05-19T15:05:26.122Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "iwxpcbyd0c8",
            "applicationId": "i39okjaslib",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["0faoj6wr7ki", "4gach9yb3dc"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:25.847Z",
                    "updatedTime": "2023-05-19T15:05:25.847Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "59xex8manox",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "iwxpcbyd0c8",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "gia0d9mekyt",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:26.018Z",
                    "updatedTime": "2023-05-19T15:05:26.018Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "6wrex54id2h",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "iwxpcbyd0c8",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "125oefe2jdl",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:26.243Z",
            "updatedTime": "2023-05-19T15:05:26.686Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "6k5mbglkk8h",
            "applicationId": "i39okjaslib",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["0faoj6wr7ki", "4gach9yb3dc"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:26.414Z",
                    "updatedTime": "2023-05-19T15:05:26.414Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "jytohgwgml1",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "6k5mbglkk8h",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "8ptxh2n4jo6",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:26.587Z",
                    "updatedTime": "2023-05-19T15:05:26.587Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "gj2st5h9ce3",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "6k5mbglkk8h",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "p7m8iu1hsza",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:26.811Z",
            "updatedTime": "2023-05-19T15:05:27.279Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "69eorzzmxm7",
            "applicationId": "i39okjaslib",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.2",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["0faoj6wr7ki", "4gach9yb3dc"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:26.986Z",
                    "updatedTime": "2023-05-19T15:05:26.986Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "x85ccfj14sl",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "69eorzzmxm7",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "edp1b575zzb",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:27.171Z",
                    "updatedTime": "2023-05-19T15:05:27.171Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "hlp9wpjup8n",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "69eorzzmxm7",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "bb859qjbmv6",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:27.405Z",
            "updatedTime": "2023-05-19T15:05:27.839Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "e677s9t56qr",
            "applicationId": "i39okjaslib",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["0faoj6wr7ki", "4gach9yb3dc"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:27.573Z",
                    "updatedTime": "2023-05-19T15:05:27.573Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "co36w80r836",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "e677s9t56qr",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "cinv7gorxla",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:27.743Z",
                    "updatedTime": "2023-05-19T15:05:27.743Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "igk7f9ofa3z",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "e677s9t56qr",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "t7ze88x2rf1",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:27.958Z",
            "updatedTime": "2023-05-19T15:05:28.407Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5m5og6t0zet",
            "applicationId": "i39okjaslib",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["0faoj6wr7ki", "4gach9yb3dc"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:28.137Z",
                    "updatedTime": "2023-05-19T15:05:28.137Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "81124h4nd7m",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "5m5og6t0zet",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "z4abtteeide",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:28.313Z",
                    "updatedTime": "2023-05-19T15:05:28.313Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "ijqs26bsrsi",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "5m5og6t0zet",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "hl3urnbi1cm",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:29.234Z",
            "updatedTime": "2023-05-19T15:06:23.717Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "fbtndcqwsuq",
            "applicationId": "q04eaauw9y2",
            "description": "A legacy codebase that manages changes made to the product catalog, initiated from an internal UI. This has comparatively fewer users, and an existing codebase. Events are picked up from the legacy Postgres database using a CDC connector to push them into Kafka. The single-message transforms feature reformats the messages before they are made public. Images are saved to a distributed filesystem for access by the web tier.\n\n[GitHub source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "1.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["dg337d6d323"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:29.393Z",
            "updatedTime": "2023-05-19T15:05:29.393Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "kqwn82b7j92",
            "applicationId": "q04eaauw9y2",
            "description": "A legacy codebase that manages changes made to the product catalog, initiated from an internal UI. This has comparatively fewer users, and an existing codebase. Events are picked up from the legacy Postgres database using a CDC connector to push them into Kafka. The single-message transforms feature reformats the messages before they are made public. Images are saved to a distributed filesystem for access by the web tier.\n\n[GitHub source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["3xj3i1juc6g"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:29.545Z",
            "updatedTime": "2023-05-19T15:05:29.545Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "nbwtndbcii4",
            "applicationId": "q04eaauw9y2",
            "description": "A legacy codebase that manages changes made to the product catalog, initiated from an internal UI. This has comparatively fewer users, and an existing codebase. Events are picked up from the legacy Postgres database using a CDC connector to push them into Kafka. The single-message transforms feature reformats the messages before they are made public. Images are saved to a distributed filesystem for access by the web tier.\n\n[GitHub source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["3xj3i1juc6g"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "3",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:29.703Z",
            "updatedTime": "2023-05-19T15:05:29.703Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "1h94otzskiq",
            "applicationId": "q04eaauw9y2",
            "description": "A legacy codebase that manages changes made to the product catalog, initiated from an internal UI. This has comparatively fewer users, and an existing codebase. Events are picked up from the legacy Postgres database using a CDC connector to push them into Kafka. The single-message transforms feature reformats the messages before they are made public. Images are saved to a distributed filesystem for access by the web tier.\n\n[GitHub source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["3xj3i1juc6g"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:37.691Z",
            "updatedTime": "2023-05-19T15:14:09.160Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "54gx46wblcy",
            "applicationId": "v93ao6pjhdn",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "1.0.2",
            "displayName": "",
            "declaredProducedEventVersionIds": ["b71fjbmc3qg", "g61dnwt93wb"],
            "declaredConsumedEventVersionIds": ["b71fjbmc3qg", "rsuzdddf9z6"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:37.983Z",
                    "updatedTime": "2023-05-19T15:14:08.959Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "inaw01g9cn1",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "54gx46wblcy",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "udnbczw0jtz",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:38.202Z",
                    "updatedTime": "2023-05-19T15:14:09.121Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "l7quek9gnja",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "54gx46wblcy",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ct4e6sfe69v",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:38.505Z",
            "updatedTime": "2023-05-19T15:05:39.046Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "y5cncn7ap24",
            "applicationId": "v93ao6pjhdn",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["f2yek6q4jdv", "oymvwehaswj"],
            "declaredConsumedEventVersionIds": ["f2yek6q4jdv", "u3c79a7erjp"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:38.728Z",
                    "updatedTime": "2023-05-19T15:05:38.728Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "1blkj4qb28l",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "y5cncn7ap24",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "qdhiqsa84m0",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:38.932Z",
                    "updatedTime": "2023-05-19T15:05:38.932Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "0ex9ao8f290",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "y5cncn7ap24",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "527pym3xc2v",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:39.198Z",
            "updatedTime": "2023-05-19T15:05:39.713Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "zrdlkzl00uv",
            "applicationId": "v93ao6pjhdn",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["f2yek6q4jdv", "oymvwehaswj"],
            "declaredConsumedEventVersionIds": ["f2yek6q4jdv", "u3c79a7erjp"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "3",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:39.397Z",
                    "updatedTime": "2023-05-19T15:05:39.397Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "0vgybkvojfh",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "zrdlkzl00uv",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "a72l2vsbszl",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:39.597Z",
                    "updatedTime": "2023-05-19T15:05:39.597Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "kaqp30gi9vn",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "zrdlkzl00uv",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "43zygslna5x",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:39.863Z",
            "updatedTime": "2023-05-19T15:05:40.387Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "hza5j80ebwm",
            "applicationId": "v93ao6pjhdn",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["f2yek6q4jdv", "oymvwehaswj"],
            "declaredConsumedEventVersionIds": ["f2yek6q4jdv", "u3c79a7erjp"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:40.066Z",
                    "updatedTime": "2023-05-19T15:05:40.066Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "28h8t2kuk9a",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "hza5j80ebwm",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "axr18m5ollc",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:40.273Z",
                    "updatedTime": "2023-05-19T15:05:40.273Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "bvgkql36wk7",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "hza5j80ebwm",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ewbkged80h0",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-19T15:05:40.543Z",
            "updatedTime": "2023-05-19T15:05:41.065Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5ywbtw7d2wc",
            "applicationId": "v93ao6pjhdn",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["f2yek6q4jdv", "oymvwehaswj"],
            "declaredConsumedEventVersionIds": ["f2yek6q4jdv", "u3c79a7erjp"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-19T15:05:40.742Z",
                    "updatedTime": "2023-05-19T15:05:40.742Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "9kz52qp09oh",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "5ywbtw7d2wc",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "njrm56w5ejf",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-19T15:05:40.948Z",
                    "updatedTime": "2023-05-19T15:05:40.948Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "pj6a1d60m3o",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "5ywbtw7d2wc",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "porjxrqzhj2",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }
    ],
    "events": [{
            "createdTime": "2023-05-19T15:05:14.188Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0j3v3jakzrj",
            "name": "Basket",
            "shared": false,
            "applicationDomainId": "5bfgxcppt6z",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "4i1h3j9f5x9",
                    "customAttributeDefinitionName": "confidential",
                    "value": "false"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 2,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-19T15:05:14.188Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gjnvktmn2c7",
            "name": "Catalogue",
            "shared": true,
            "applicationDomainId": "91y7rbzxgbb",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "4i1h3j9f5x9",
                    "customAttributeDefinitionName": "confidential",
                    "value": "false"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-19T15:05:14.188Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "6d5uxi2ojlr",
            "name": "Customer",
            "shared": true,
            "applicationDomainId": "5bfgxcppt6z",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "4i1h3j9f5x9",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 4
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-19T15:05:14.188Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "da4m7th4pin",
            "name": "Order Created",
            "shared": true,
            "applicationDomainId": "5bfgxcppt6z",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "4i1h3j9f5x9",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-19T15:05:14.188Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "vhea2853ksd",
            "name": "Order Updated",
            "shared": true,
            "applicationDomainId": "5bfgxcppt6z",
            "numberOfVersions": 4,
            "customAttributes": [{
                    "customAttributeDefinitionId": "4i1h3j9f5x9",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 2
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-19T15:05:14.188Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "230q0ygeyer",
            "name": "Order Validated",
            "shared": false,
            "applicationDomainId": "5bfgxcppt6z",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "4i1h3j9f5x9",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-19T15:05:14.188Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "14jv9qntrm9",
            "name": "Payment",
            "shared": true,
            "applicationDomainId": "5bfgxcppt6z",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "4i1h3j9f5x9",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 4
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-19T15:05:14.188Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "actrn8vnh7e",
            "name": "Shipping",
            "shared": false,
            "applicationDomainId": "jhcmohnqxns",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "4i1h3j9f5x9",
                    "customAttributeDefinitionName": "confidential",
                    "value": "false"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-19T15:05:14.188Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "f7ppq1w3aeh",
            "name": "Warehouse Inventory",
            "shared": true,
            "applicationDomainId": "9fn6ms2bb6b",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "4i1h3j9f5x9",
                    "customAttributeDefinitionName": "confidential",
                    "value": "false"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 3
                }
            },
            "type": "event"
        }
    ],
    "eventVersions": [{
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "b8impyj76n1",
            "eventId": "0j3v3jakzrj",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "1.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "pglgnbj09yn",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7gcozgwj94e",
            "eventId": "0j3v3jakzrj",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "k5f6011jtoq",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "rre84ley200",
            "eventId": "0j3v3jakzrj",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "k5f6011jtoq",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "aknezjjyj21",
            "eventId": "0j3v3jakzrj",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "k5f6011jtoq",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "uidy8ie9jgz",
            "eventId": "0j3v3jakzrj",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "k5f6011jtoq",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "4gach9yb3dc",
            "eventId": "0j3v3jakzrj",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "k5f6011jtoq",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "x0ut0nk7dcx",
            "eventId": "14jv9qntrm9",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "1.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "f3ydtbp2tqy",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "1jq1hbqez1f",
            "eventId": "14jv9qntrm9",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "5g62rbldm0f",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "tvzdeqsnja8",
            "eventId": "14jv9qntrm9",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "0.1.3",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "5g62rbldm0f",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ilv9yd6u3ne",
            "eventId": "14jv9qntrm9",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "5g62rbldm0f",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "kokiop3ndoe",
            "eventId": "14jv9qntrm9",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "5g62rbldm0f",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "xwkf45ko94a",
            "eventId": "14jv9qntrm9",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "5g62rbldm0f",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "a7py403hpn0",
            "eventId": "230q0ygeyer",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "1.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "u1mfvpx506s",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "wnegkkk3x88",
            "eventId": "230q0ygeyer",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "hg0b4yi0fxp",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "s9yh1m5ennu",
            "eventId": "230q0ygeyer",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "hg0b4yi0fxp",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "hfn0rf66olf",
            "eventId": "230q0ygeyer",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "0.2.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "hg0b4yi0fxp",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "hlb42a4ho0a",
            "eventId": "230q0ygeyer",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "hg0b4yi0fxp",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "wcx4x6s2yho",
            "eventId": "6d5uxi2ojlr",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "2.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "ogii36l1swl",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7uck5n813n1",
            "eventId": "6d5uxi2ojlr",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "2.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "5dr07nelf04",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ama2wz7nbn9",
            "eventId": "6d5uxi2ojlr",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "0.2.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "5dr07nelf04",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ce4kcd56o92",
            "eventId": "6d5uxi2ojlr",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "5dr07nelf04",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "8vviigzvlhg",
            "eventId": "6d5uxi2ojlr",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "5dr07nelf04",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0faoj6wr7ki",
            "eventId": "6d5uxi2ojlr",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "5dr07nelf04",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0s9bixdd9vh",
            "eventId": "actrn8vnh7e",
            "description": "Changes in the shipping status of ordered items as they move out of the warehouse to home delivery.",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "ahip3tvkw08",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "shipping",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "o6koc1svyak",
            "eventId": "actrn8vnh7e",
            "description": "Changes in the shipping status of ordered items as they move out of the warehouse to home delivery.",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "30lbb6ldd0g",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "shipping",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "uhe6cz0ps6h",
            "eventId": "actrn8vnh7e",
            "description": "Changes in the shipping status of ordered items as they move out of the warehouse to home delivery.",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "30lbb6ldd0g",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "shipping",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "chfe91okzup",
            "eventId": "actrn8vnh7e",
            "description": "Changes in the shipping status of ordered items as they move out of the warehouse to home delivery.",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "30lbb6ldd0g",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "shipping",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "zlkvg47tv7y",
            "eventId": "actrn8vnh7e",
            "description": "Changes in the shipping status of ordered items.",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "30lbb6ldd0g",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "SHIPPING",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "rsuzdddf9z6",
            "eventId": "da4m7th4pin",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "2.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "gqa5gjdj641",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "4xgua0cmgwz",
            "eventId": "da4m7th4pin",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "2.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "f4i5ea5cf9r",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "x40i2b6cb2i",
            "eventId": "da4m7th4pin",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "0.2.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "f4i5ea5cf9r",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "88762hc8pn3",
            "eventId": "da4m7th4pin",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "0.2.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "f4i5ea5cf9r",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "u3c79a7erjp",
            "eventId": "da4m7th4pin",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "f4i5ea5cf9r",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "b71fjbmc3qg",
            "eventId": "f7ppq1w3aeh",
            "description": "Current stock levels for items in the warehouse",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "qa43gcg2wvg",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "j84igdrhpm7",
            "eventId": "f7ppq1w3aeh",
            "description": "Current stock levels for items in the warehouse",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "t5laghavb2r",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7y8mbupltdj",
            "eventId": "f7ppq1w3aeh",
            "description": "Current stock levels for items in the warehouse",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "t5laghavb2r",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jtfi42z69m3",
            "eventId": "f7ppq1w3aeh",
            "description": "Current stock levels for items in the warehouse",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "t5laghavb2r",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "f2yek6q4jdv",
            "eventId": "f7ppq1w3aeh",
            "description": "Current stock levels for items in the warehouse",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "t5laghavb2r",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "dg337d6d323",
            "eventId": "gjnvktmn2c7",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "mrp1gt8aih7",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "w62b6oihe0y",
            "eventId": "gjnvktmn2c7",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "h6t85s54hob",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ix7hxmk3wbn",
            "eventId": "gjnvktmn2c7",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "h6t85s54hob",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "adlpzye8di4",
            "eventId": "gjnvktmn2c7",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "h6t85s54hob",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "3xj3i1juc6g",
            "eventId": "gjnvktmn2c7",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "h6t85s54hob",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "g61dnwt93wb",
            "eventId": "vhea2853ksd",
            "description": "As the order moves through the fulfillment process, each service add to this topic to show current state.",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "byrdl5kj3zw",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "order-validations",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "fs57q1nxnws",
            "eventId": "vhea2853ksd",
            "description": "As the order moves through the fulfillment process, each service add to this topic to show current state.",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "6n573n8qfzm",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "order-validations",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "6cuvqjnsl58",
            "eventId": "vhea2853ksd",
            "description": "As the order moves through the fulfillment process, each service add to this topic to show current state.",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "6n573n8qfzm",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "order-validations",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-19T15:05:20.641Z",
            "updatedTime": "2023-05-19T15:05:20.641Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "oymvwehaswj",
            "eventId": "vhea2853ksd",
            "description": "As the order moves through the fulfillment process, each service add to this topic to show current state.",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "6n573n8qfzm",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "order-validations",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }
    ],
    "schemas": [{
            "createdTime": "2023-05-19T15:05:13.830Z",
            "updatedTime": "2023-05-19T15:05:18.781Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ioahlyovvos",
            "applicationDomainId": "5bfgxcppt6z",
            "name": "Basket",
            "shared": false,
            "schemaType": "avro",
            "numberOfVersions": 7,
            "eventVersionRefCount": 6,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 2,
                    "3": 4
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-19T15:05:13.927Z",
            "updatedTime": "2023-05-19T15:05:19.089Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "i32lqdrt7rx",
            "applicationDomainId": "91y7rbzxgbb",
            "name": "Catalog",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 8,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "3": 7
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-19T15:05:14.029Z",
            "updatedTime": "2023-05-19T15:05:19.500Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gvi50of0b03",
            "applicationDomainId": "5bfgxcppt6z",
            "name": "Customer",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 8,
            "eventVersionRefCount": 6,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 6
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-19T15:05:14.053Z",
            "updatedTime": "2023-05-19T15:05:18.879Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0q8wd2y58b8",
            "applicationDomainId": "5bfgxcppt6z",
            "name": "Enriched Order",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 6,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 4
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-19T15:05:14.075Z",
            "updatedTime": "2023-05-19T15:05:18.983Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "agbibabsf5z",
            "applicationDomainId": "9fn6ms2bb6b",
            "name": "Inventory",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 6,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 4
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-19T15:05:14.098Z",
            "updatedTime": "2023-05-19T15:05:19.178Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "yk9m0gj4ktk",
            "applicationDomainId": "5bfgxcppt6z",
            "name": "Order",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 8,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 6
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-19T15:05:14.119Z",
            "updatedTime": "2023-05-19T15:05:19.255Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "skjvpsbeq6o",
            "applicationDomainId": "5bfgxcppt6z",
            "name": "Order Validation",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 7,
            "eventVersionRefCount": 4,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 5
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-19T15:05:14.139Z",
            "updatedTime": "2023-05-19T15:05:19.339Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "rcpyype72b0",
            "applicationDomainId": "5bfgxcppt6z",
            "name": "Payment",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 5,
            "eventVersionRefCount": 6,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 3
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-19T15:05:14.162Z",
            "updatedTime": "2023-05-19T15:05:19.423Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "l2ahtdm1r4l",
            "applicationDomainId": "jhcmohnqxns",
            "name": "Shipping",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 5,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 1,
                    "4": 2
                }
            },
            "customAttributes": [],
            "type": "schema"
        }
    ],
    "schemaVersions": [{
            "createdTime": "2023-05-19T15:05:14.537Z",
            "updatedTime": "2023-05-19T15:05:14.537Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "byrdl5kj3zw",
            "schemaId": "skjvpsbeq6o",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "3.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:14.605Z",
            "updatedTime": "2023-05-19T15:05:14.605Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ips90705imd",
            "schemaId": "skjvpsbeq6o",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "3.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:14.675Z",
            "updatedTime": "2023-05-19T15:05:14.675Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ogii36l1swl",
            "schemaId": "gvi50of0b03",
            "description": "Represents a customer of the store ",
            "version": "2.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:14.753Z",
            "updatedTime": "2023-05-19T15:05:14.753Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "279afr7tv83",
            "schemaId": "skjvpsbeq6o",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "2.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:14.830Z",
            "updatedTime": "2023-05-19T15:05:14.830Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "p32cbdt9ne2",
            "schemaId": "gvi50of0b03",
            "description": "Represents a customer of the store ",
            "version": "2.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:14.901Z",
            "updatedTime": "2023-05-19T15:05:14.901Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "pglgnbj09yn",
            "schemaId": "ioahlyovvos",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "1.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:14.998Z",
            "updatedTime": "2023-05-19T15:05:14.998Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "qa43gcg2wvg",
            "schemaId": "agbibabsf5z",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "1.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:15.079Z",
            "updatedTime": "2023-05-19T15:05:15.079Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "f3ydtbp2tqy",
            "schemaId": "rcpyype72b0",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "1.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:15.229Z",
            "updatedTime": "2023-05-19T15:05:15.229Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jfz8xafm7dx",
            "schemaId": "ioahlyovvos",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "1.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:15.153Z",
            "updatedTime": "2023-05-19T15:05:15.153Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "p33rms7pf1d",
            "schemaId": "agbibabsf5z",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "1.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:15.306Z",
            "updatedTime": "2023-05-19T15:05:15.306Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "lqmfxayd37h",
            "schemaId": "gvi50of0b03",
            "description": "Represents a customer of the store ",
            "version": "1.0.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:15.380Z",
            "updatedTime": "2023-05-19T15:05:15.380Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "mrp1gt8aih7",
            "schemaId": "i32lqdrt7rx",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "1.0.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:15.453Z",
            "updatedTime": "2023-05-19T15:05:15.453Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "u1mfvpx506s",
            "schemaId": "0q8wd2y58b8",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "1.0.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:15.530Z",
            "updatedTime": "2023-05-19T15:05:15.530Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "4b3m6gjnp2u",
            "schemaId": "0q8wd2y58b8",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "1.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:15.701Z",
            "updatedTime": "2023-05-19T15:05:15.701Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ahip3tvkw08",
            "schemaId": "l2ahtdm1r4l",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "1.0.1",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:15.864Z",
            "updatedTime": "2023-05-19T15:05:15.864Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "c8em3i2klhn",
            "schemaId": "i32lqdrt7rx",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "1.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:15.615Z",
            "updatedTime": "2023-05-19T15:05:15.615Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gqa5gjdj641",
            "schemaId": "yk9m0gj4ktk",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "1.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:15.780Z",
            "updatedTime": "2023-05-19T15:05:15.780Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "tae5jh9ja9b",
            "schemaId": "gvi50of0b03",
            "description": "Represents a customer of the store ",
            "version": "1.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:16.373Z",
            "updatedTime": "2023-05-19T15:05:16.373Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "1fp1ckd3ocl",
            "schemaId": "gvi50of0b03",
            "description": "Represents a customer of the store ",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:15.949Z",
            "updatedTime": "2023-05-19T15:05:15.949Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "8wpy12uxd00",
            "schemaId": "yk9m0gj4ktk",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:16.454Z",
            "updatedTime": "2023-05-19T15:05:16.454Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "aown5hnfopx",
            "schemaId": "skjvpsbeq6o",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:16.128Z",
            "updatedTime": "2023-05-19T15:05:16.128Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "cmfu9f1arkr",
            "schemaId": "0q8wd2y58b8",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:16.216Z",
            "updatedTime": "2023-05-19T15:05:16.216Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "dquv382raj5",
            "schemaId": "ioahlyovvos",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:16.615Z",
            "updatedTime": "2023-05-19T15:05:16.615Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "qncjwvijy0m",
            "schemaId": "i32lqdrt7rx",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:16.531Z",
            "updatedTime": "2023-05-19T15:05:16.531Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "u998kv35ah2",
            "schemaId": "rcpyype72b0",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:16.029Z",
            "updatedTime": "2023-05-19T15:05:16.029Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "v9f78ticphb",
            "schemaId": "l2ahtdm1r4l",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:16.296Z",
            "updatedTime": "2023-05-19T15:05:16.296Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "y200ok3o0gg",
            "schemaId": "agbibabsf5z",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:16.693Z",
            "updatedTime": "2023-05-19T15:05:16.693Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "hg8up70jo0d",
            "schemaId": "yk9m0gj4ktk",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.3.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:16.865Z",
            "updatedTime": "2023-05-19T15:05:16.865Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "g6vcgb1hi44",
            "schemaId": "yk9m0gj4ktk",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.3.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:16.787Z",
            "updatedTime": "2023-05-19T15:05:16.787Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "y4q9w8b98f4",
            "schemaId": "i32lqdrt7rx",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.3.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:16.945Z",
            "updatedTime": "2023-05-19T15:05:16.945Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "qqvnkgu2s02",
            "schemaId": "0q8wd2y58b8",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "0.2.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:17.382Z",
            "updatedTime": "2023-05-19T15:05:17.382Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "73su95k6mql",
            "schemaId": "i32lqdrt7rx",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:17.275Z",
            "updatedTime": "2023-05-19T15:05:17.275Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "81hjqm7ltsr",
            "schemaId": "yk9m0gj4ktk",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:17.468Z",
            "updatedTime": "2023-05-19T15:05:17.468Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "l5dbljlcnl1",
            "schemaId": "0q8wd2y58b8",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:17.024Z",
            "updatedTime": "2023-05-19T15:05:17.024Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "s6g9m72pc1a",
            "schemaId": "gvi50of0b03",
            "description": "Represents a customer of the store ",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:17.107Z",
            "updatedTime": "2023-05-19T15:05:17.107Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "z2hdmwzjb2s",
            "schemaId": "ioahlyovvos",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:17.946Z",
            "updatedTime": "2023-05-19T15:05:17.946Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "d09q0ky282x",
            "schemaId": "i32lqdrt7rx",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:17.869Z",
            "updatedTime": "2023-05-19T15:05:17.869Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "mh5n6fkkejc",
            "schemaId": "yk9m0gj4ktk",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:17.545Z",
            "updatedTime": "2023-05-19T15:05:17.545Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "mq99444bg60",
            "schemaId": "ioahlyovvos",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:17.629Z",
            "updatedTime": "2023-05-19T15:05:17.629Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "pcc9grp1e3i",
            "schemaId": "l2ahtdm1r4l",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "4",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:17.713Z",
            "updatedTime": "2023-05-19T15:05:17.713Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "pzzli46hrah",
            "schemaId": "skjvpsbeq6o",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:18.025Z",
            "updatedTime": "2023-05-19T15:05:18.025Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "s4lc3b34w32",
            "schemaId": "agbibabsf5z",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:17.792Z",
            "updatedTime": "2023-05-19T15:05:17.792Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "vv89tiump06",
            "schemaId": "rcpyype72b0",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:18.516Z",
            "updatedTime": "2023-05-19T15:05:18.516Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "71ln8pna5rf",
            "schemaId": "i32lqdrt7rx",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:18.593Z",
            "updatedTime": "2023-05-19T15:05:18.593Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "8k1dd7u4ei0",
            "schemaId": "gvi50of0b03",
            "description": "Represents a customer of the store ",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:18.422Z",
            "updatedTime": "2023-05-19T15:05:18.422Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "b249h99en1v",
            "schemaId": "ioahlyovvos",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:18.183Z",
            "updatedTime": "2023-05-19T15:05:18.183Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ed9hbgkl9m7",
            "schemaId": "rcpyype72b0",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:18.690Z",
            "updatedTime": "2023-05-19T15:05:18.690Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "hxo9ydr36st",
            "schemaId": "l2ahtdm1r4l",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "4",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:18.265Z",
            "updatedTime": "2023-05-19T15:05:18.265Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "j1oodlf6trb",
            "schemaId": "skjvpsbeq6o",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:18.346Z",
            "updatedTime": "2023-05-19T15:05:18.346Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "moll6l9hana",
            "schemaId": "agbibabsf5z",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:18.102Z",
            "updatedTime": "2023-05-19T15:05:18.102Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "tpqzayzxr2p",
            "schemaId": "yk9m0gj4ktk",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:19.423Z",
            "updatedTime": "2023-05-19T15:05:19.423Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "30lbb6ldd0g",
            "schemaId": "l2ahtdm1r4l",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:19.500Z",
            "updatedTime": "2023-05-19T15:05:19.500Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5dr07nelf04",
            "schemaId": "gvi50of0b03",
            "description": "Represents a customer of the store ",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:19.339Z",
            "updatedTime": "2023-05-19T15:05:19.339Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5g62rbldm0f",
            "schemaId": "rcpyype72b0",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:19.255Z",
            "updatedTime": "2023-05-19T15:05:19.255Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "6n573n8qfzm",
            "schemaId": "skjvpsbeq6o",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:19.178Z",
            "updatedTime": "2023-05-19T15:05:19.178Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "f4i5ea5cf9r",
            "schemaId": "yk9m0gj4ktk",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:19.089Z",
            "updatedTime": "2023-05-19T15:05:19.089Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "h6t85s54hob",
            "schemaId": "i32lqdrt7rx",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:18.879Z",
            "updatedTime": "2023-05-19T15:05:18.879Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "hg0b4yi0fxp",
            "schemaId": "0q8wd2y58b8",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:18.781Z",
            "updatedTime": "2023-05-19T15:05:18.781Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "k5f6011jtoq",
            "schemaId": "ioahlyovvos",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-19T15:05:18.983Z",
            "updatedTime": "2023-05-19T15:05:18.983Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "t5laghavb2r",
            "schemaId": "agbibabsf5z",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }
    ],
    "enums": [],
    "enumVersions": [],
    "eventApis": [],
    "eventApiVersions": [],
    "eventApiProducts": [],
    "eventApiProductVersions": [],
    "addressSpaces": [{
            "createdTime": "2023-03-21T09:12:43.485Z",
            "updatedTime": "2023-03-21T09:12:43.485Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ih4l2n1mwju",
            "brokerType": "kafka",
            "delimiter": ".",
            "type": "addressSpace"
        }
    ],
    "customAttributeDefinitions": [{
            "createdTime": "2023-05-19T15:16:13.025Z",
            "updatedTime": "2023-05-19T15:16:13.025Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "h9dtui71whl",
            "name": "application-type",
            "valueType": "STRING",
            "scope": "applicationDomain",
            "associatedEntityTypes": ["application"],
            "associatedEntities": [{
                    "entityType": "application",
                    "applicationDomainIds": ["5bfgxcppt6z", "91y7rbzxgbb", "9fn6ms2bb6b", "jhcmohnqxns"]
                }
            ],
            "type": "customAttributeDefinition"
        }, {
            "createdTime": "2023-05-19T15:05:13.738Z",
            "updatedTime": "2023-05-19T15:16:13.019Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "4i1h3j9f5x9",
            "name": "confidential",
            "valueType": "STRING",
            "scope": "applicationDomain",
            "associatedEntityTypes": ["event"],
            "associatedEntities": [{
                    "entityType": "event",
                    "applicationDomainIds": ["5bfgxcppt6z", "91y7rbzxgbb", "9fn6ms2bb6b", "jhcmohnqxns"]
                }
            ],
            "type": "customAttributeDefinition"
        }
    ]
}
