{
    "formatVersion": "2.0.0",
    "applicationDomains": [{
            "createdTime": "2023-07-11T13:05:08.761Z",
            "updatedTime": "2023-07-11T13:05:08.761Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ezxlo4q49gm",
            "name": "Fulfillment",
            "description": "Event Hubs",
            "uniqueTopicAddressEnforcementEnabled": false,
            "topicDomainEnforcementEnabled": false,
            "customAttributes": [],
            "type": "applicationDomain"
        }, {
            "createdTime": "2023-07-11T13:05:08.761Z",
            "updatedTime": "2023-07-11T13:05:08.761Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "j2qmrw1niws",
            "name": "Merchandising",
            "description": "Event Hubs",
            "uniqueTopicAddressEnforcementEnabled": false,
            "topicDomainEnforcementEnabled": false,
            "customAttributes": [],
            "type": "applicationDomain"
        }, {
            "createdTime": "2023-07-11T13:05:08.761Z",
            "updatedTime": "2023-07-11T13:05:08.761Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "l4un3rmfk9k",
            "name": "OnlineServices",
            "description": "Event Hubs",
            "uniqueTopicAddressEnforcementEnabled": false,
            "topicDomainEnforcementEnabled": false,
            "customAttributes": [],
            "type": "applicationDomain"
        }, {
            "createdTime": "2023-07-11T13:05:08.761Z",
            "updatedTime": "2023-07-11T13:05:08.761Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "2z0ko9we2h4",
            "name": "Shipping",
            "description": "Event Hubs",
            "uniqueTopicAddressEnforcementEnabled": false,
            "topicDomainEnforcementEnabled": false,
            "customAttributes": [],
            "type": "applicationDomain"
        }
    ],
    "topicDomains": [],
    "applications": [{
            "createdTime": "2023-07-11T13:05:08.883Z",
            "updatedTime": "2023-07-12T13:10:38.752Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "442h4kqbfy7",
            "name": "Basket Service - Basket View (kSQL)",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "l4un3rmfk9k",
            "numberOfVersions": 7,
            "customAttributes": [{
                    "customAttributeDefinitionId": "yzjklqq1fgt",
                    "customAttributeDefinitionName": "application-type",
                    "value": "ksql"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-11T13:05:08.884Z",
            "updatedTime": "2023-07-12T13:11:06.545Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "lrx8kkiqiag",
            "name": "Basket Service - Basket Writer (REST proxy)",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "l4un3rmfk9k",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "yzjklqq1fgt",
                    "customAttributeDefinitionName": "application-type",
                    "value": "rest-proxy"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-11T13:05:08.884Z",
            "updatedTime": "2023-07-12T13:10:53.177Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "g5r0th01dog",
            "name": "Catalogue Filter View (kSQL)",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "l4un3rmfk9k",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "yzjklqq1fgt",
                    "customAttributeDefinitionName": "application-type",
                    "value": "ksql"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-11T13:05:08.884Z",
            "updatedTime": "2023-07-12T13:11:44.534Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "dxyr263flp3",
            "name": "Catalogue Search (Kafka Connect -> Elasticsearch)",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "l4un3rmfk9k",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "yzjklqq1fgt",
                    "customAttributeDefinitionName": "application-type",
                    "value": "kafka-connect"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-11T13:05:08.884Z",
            "updatedTime": "2023-07-12T13:11:51.626Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "v9mcu765a77",
            "name": "Catalogue Services",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "j2qmrw1niws",
            "numberOfVersions": 4,
            "customAttributes": [{
                    "customAttributeDefinitionId": "yzjklqq1fgt",
                    "customAttributeDefinitionName": "application-type",
                    "value": "cobol"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-11T13:05:08.884Z",
            "updatedTime": "2023-07-12T13:12:02.711Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "1hdio3o2gaq",
            "name": "Email Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "ezxlo4q49gm",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "yzjklqq1fgt",
                    "customAttributeDefinitionName": "application-type",
                    "value": "java"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-11T13:05:08.884Z",
            "updatedTime": "2023-07-12T13:12:44.243Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "f7mk61f5lzl",
            "name": "Fraud Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "ezxlo4q49gm",
            "numberOfVersions": 4,
            "customAttributes": [{
                    "customAttributeDefinitionId": "yzjklqq1fgt",
                    "customAttributeDefinitionName": "application-type",
                    "value": "java"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-11T13:05:08.884Z",
            "updatedTime": "2023-07-12T13:12:51.312Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "byi2zeapha1",
            "name": "Inventory Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "ezxlo4q49gm",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "yzjklqq1fgt",
                    "customAttributeDefinitionName": "application-type",
                    "value": "java"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-11T13:05:08.884Z",
            "updatedTime": "2023-07-12T13:12:57.621Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "tkf1sw1fmit",
            "name": "Order Details Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "ezxlo4q49gm",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "yzjklqq1fgt",
                    "customAttributeDefinitionName": "application-type",
                    "value": "ksql"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-11T13:05:08.884Z",
            "updatedTime": "2023-07-12T13:13:05.190Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "2pokmubl606",
            "name": "Orders Service  - Order Writer",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "l4un3rmfk9k",
            "numberOfVersions": 4,
            "customAttributes": [{
                    "customAttributeDefinitionId": "yzjklqq1fgt",
                    "customAttributeDefinitionName": "application-type",
                    "value": "rest-proxy"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-11T13:05:08.884Z",
            "updatedTime": "2023-07-12T13:13:12.978Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "hxzkfhnpw5w",
            "name": "Orders Service - Orders View",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "l4un3rmfk9k",
            "numberOfVersions": 4,
            "customAttributes": [{
                    "customAttributeDefinitionId": "yzjklqq1fgt",
                    "customAttributeDefinitionName": "application-type",
                    "value": "rest-proxy"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-11T13:05:08.884Z",
            "updatedTime": "2023-07-12T13:13:21.479Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "mcarc8pxi8z",
            "name": "Orders Service - Validations Aggregator",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "l4un3rmfk9k",
            "numberOfVersions": 7,
            "customAttributes": [{
                    "customAttributeDefinitionId": "yzjklqq1fgt",
                    "customAttributeDefinitionName": "application-type",
                    "value": "java"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-11T13:05:08.884Z",
            "updatedTime": "2023-07-12T13:13:27.397Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "v3uwnj46h76",
            "name": "Shipping Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "2z0ko9we2h4",
            "numberOfVersions": 2,
            "customAttributes": [{
                    "customAttributeDefinitionId": "yzjklqq1fgt",
                    "customAttributeDefinitionName": "application-type",
                    "value": "kafka-streams"
                }
            ],
            "type": "application"
        }
    ],
    "applicationVersions": [{
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-12T13:12:02.711Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gmvn64pwgaz",
            "applicationId": "1hdio3o2gaq",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "1.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["2fpabbb3gdx", "bddqv0e6ou7", "p5bc3icg7c6"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "q78epayfeg4",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "gmvn64pwgaz",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "9iw5ducqjl2",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "ej1bvanw5to",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "gmvn64pwgaz",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "soyr9gw8gla",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "a8m64uvrie9",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "gmvn64pwgaz",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "2gizq2vcz29",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ljbb8uhxmyd",
            "applicationId": "1hdio3o2gaq",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["0145uoadfa7", "5un3ckj156i", "knh6cwfofxx"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "4n7y479fdnb",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "ljbb8uhxmyd",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "a5c8qn3ij8q",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "8b15uaegl7k",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "ljbb8uhxmyd",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "19kb64p639g",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "jxrkds5ljpy",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "ljbb8uhxmyd",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "59e6732l3ua",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ghasrjls6bv",
            "applicationId": "1hdio3o2gaq",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["0145uoadfa7", "5un3ckj156i", "knh6cwfofxx"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "1v295z558nf",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "ghasrjls6bv",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "401safdwv7g",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "ko8bywf4bd2",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "ghasrjls6bv",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "6v7nocku4r2",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "g7fhej0tzg6",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "ghasrjls6bv",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "war2ebeh10m",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "lo8uc02xu24",
            "applicationId": "1hdio3o2gaq",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["0145uoadfa7", "5un3ckj156i", "knh6cwfofxx"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "1fb3is06dfa",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "lo8uc02xu24",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "3suwnbovhkk",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "nieeqtakefx",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "lo8uc02xu24",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "keefeb2a0wd",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "4cvse7epgvw",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "lo8uc02xu24",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "6eaphnvsey4",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "c50wul4xfic",
            "applicationId": "1hdio3o2gaq",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["0145uoadfa7", "5un3ckj156i", "knh6cwfofxx"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "5ozmpqi2aa7",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "c50wul4xfic",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "km45yc4gli8",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "obr6yaybvtj",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "c50wul4xfic",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "h669qzuenj9",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "jjybxpst0fn",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "c50wul4xfic",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "av1tawu7xe5",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-12T13:13:05.190Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ofjwdzu30dl",
            "applicationId": "2pokmubl606",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nPOST  adds Order, Payment and Customer information to the system returning when Kafka sends the appropriate acknowledgement.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["2fpabbb3gdx", "bddqv0e6ou7", "p5bc3icg7c6"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:10.307Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "zk83so86g0x",
            "applicationId": "2pokmubl606",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nPOST  adds Order, Payment and Customer information to the system returning when Kafka sends the appropriate acknowledgement.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["0145uoadfa7", "5un3ckj156i", "knh6cwfofxx"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:10.307Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "67fn1apvmjt",
            "applicationId": "2pokmubl606",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nPOST  adds Order, Payment and Customer information to the system returning when Kafka sends the appropriate acknowledgement.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["0145uoadfa7", "5un3ckj156i", "knh6cwfofxx"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:10.307Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "3d0wf5mxi5g",
            "applicationId": "2pokmubl606",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nPOST  adds Order, Payment and Customer information to the system returning when Kafka sends the appropriate acknowledgement.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["0145uoadfa7", "5un3ckj156i", "knh6cwfofxx"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-12T13:10:38.752Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "g98im99atvs",
            "applicationId": "442h4kqbfy7",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["7g93it3vsvx", "bddqv0e6ou7"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "e7t4yattneh",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "g98im99atvs",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "l23f4d090cx",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "kmaed4mhz1k",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "g98im99atvs",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "o3aifbkdj3o",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ugzud8pjwee",
            "applicationId": "442h4kqbfy7",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["5un3ckj156i", "jd3akszzwng"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "qqsxfeq8gfs",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "ugzud8pjwee",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "r261g3fot4k",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "3en307czi7v",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "ugzud8pjwee",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "p6z1p2qd0jf",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "glzl115boz5",
            "applicationId": "442h4kqbfy7",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["5un3ckj156i", "jd3akszzwng"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "ro3dhtv3mtf",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "glzl115boz5",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "z0tr0zz8yl0",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "50bbe9o1g7p",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "glzl115boz5",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "1ts3xsosg7d",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "u0kbyotjbpw",
            "applicationId": "442h4kqbfy7",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["5un3ckj156i", "jd3akszzwng"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "cau6opjms93",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "u0kbyotjbpw",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "rf3pt5o3w2m",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "pliucyf2n01",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "u0kbyotjbpw",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "gzjca6j46ak",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7ufswnpa6ds",
            "applicationId": "442h4kqbfy7",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.2",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["5un3ckj156i", "jd3akszzwng"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "sfg73h48g5l",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "7ufswnpa6ds",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "a3oqjzws618",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "m6vw00rhg6i",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "7ufswnpa6ds",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "2c8tpukctgk",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "dgk2kp5324m",
            "applicationId": "442h4kqbfy7",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["5un3ckj156i", "jd3akszzwng"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "024tt2r8he6",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "dgk2kp5324m",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "fjhc9whw765",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "n6tnib4naad",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "dgk2kp5324m",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "pgicac1gcab",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "b28tigq5f53",
            "applicationId": "442h4kqbfy7",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["5un3ckj156i", "jd3akszzwng"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "39a07efy0r3",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "b28tigq5f53",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "pmy7usallke",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "2ay2qwlf3d1",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "b28tigq5f53",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "5b3lbxh55b4",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-12T13:12:51.312Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "8wjdlumag18",
            "applicationId": "byi2zeapha1",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "1.0.2",
            "displayName": "",
            "declaredProducedEventVersionIds": ["15ji3nrku9z", "do1wzbg9wo8"],
            "declaredConsumedEventVersionIds": ["15ji3nrku9z", "p5bc3icg7c6"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "bjy67uux5dw",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "8wjdlumag18",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "u9rameflfls",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "n9ts5z17ddp",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "8wjdlumag18",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "54mr6ydmc8n",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ydofm21kg4s",
            "applicationId": "byi2zeapha1",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["aodugpgwl7v", "w47eg18c8x0"],
            "declaredConsumedEventVersionIds": ["0145uoadfa7", "aodugpgwl7v"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "9qjxec33d53",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "ydofm21kg4s",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "5zjx0oc62yb",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "wawj0516oyh",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "ydofm21kg4s",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "4qtridjgqrk",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "khz6ko3v6f4",
            "applicationId": "byi2zeapha1",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["aodugpgwl7v", "w47eg18c8x0"],
            "declaredConsumedEventVersionIds": ["0145uoadfa7", "aodugpgwl7v"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "3",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "x3371gaeaph",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "khz6ko3v6f4",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "bd53hbvxfer",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "8j3l7nh7wi9",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "khz6ko3v6f4",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "tewfe29dm7k",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "pkdwbhc87il",
            "applicationId": "byi2zeapha1",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["aodugpgwl7v", "w47eg18c8x0"],
            "declaredConsumedEventVersionIds": ["0145uoadfa7", "aodugpgwl7v"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "r1kf5ek7m81",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "pkdwbhc87il",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "oigxdgfstmm",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "b3b7x4bih5g",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "pkdwbhc87il",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "0g4gdohwb30",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "n8m7xotr7kt",
            "applicationId": "byi2zeapha1",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["aodugpgwl7v", "w47eg18c8x0"],
            "declaredConsumedEventVersionIds": ["0145uoadfa7", "aodugpgwl7v"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "qcin3sn21rl",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "n8m7xotr7kt",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "t6n9anxmb4f",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "6e8work6q3y",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "n8m7xotr7kt",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "dbldytcvydu",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-12T13:11:44.534Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "k7cn9e99yn1",
            "applicationId": "dxyr263flp3",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "3.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["va429iya3m7"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "nho5007qgsn",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "k7cn9e99yn1",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "gf2u893b8xc",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "tqw6crimbdx",
            "applicationId": "dxyr263flp3",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "3.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["1g0hb8yyfh6"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "h3xdlgk7bb0",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "tqw6crimbdx",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "xe7qk173nlj",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "wbqlua8m0hy",
            "applicationId": "dxyr263flp3",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["1g0hb8yyfh6"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "a6c6xsz42a0",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "wbqlua8m0hy",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "v8y84y58o2a",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "zg4y4cibuat",
            "applicationId": "dxyr263flp3",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["1g0hb8yyfh6"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "3gv74iliigc",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "zg4y4cibuat",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ikd540ns38u",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "kdgl13cm386",
            "applicationId": "dxyr263flp3",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["1g0hb8yyfh6"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "hr1u8i0iwro",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "kdgl13cm386",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "qypyqyj5845",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "qifo0e6v91z",
            "applicationId": "dxyr263flp3",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["1g0hb8yyfh6"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "icc678o19ky",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "qifo0e6v91z",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "kf8nofe9qjv",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-12T13:12:44.243Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ffmpaeq9dhi",
            "applicationId": "f7mk61f5lzl",
            "description": "This service searches for potentially fraudulent transactions by calculating the total value of orders for a customer within a time period, then checks to see if this is over a configured limit. \n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/FraudService.java)",
            "version": "1.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["do1wzbg9wo8"],
            "declaredConsumedEventVersionIds": ["p5bc3icg7c6"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "18ian8tbohf",
                    "name": "FRAUD.ORDERCREATED",
                    "applicationVersionId": "ffmpaeq9dhi",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "0w34a1x9zb8",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "08pyhdtp886",
            "applicationId": "f7mk61f5lzl",
            "description": "This service searches for potentially fraudulent transactions by calculating the total value of orders for a customer within a time period, then checks to see if this is over a configured limit. \n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/FraudService.java)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["w47eg18c8x0"],
            "declaredConsumedEventVersionIds": ["0145uoadfa7"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "uu9zlhu7mq3",
                    "name": "FRAUD.ORDERCREATED",
                    "applicationVersionId": "08pyhdtp886",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "egnzwxt1zn1",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "b58x49d8shv",
            "applicationId": "f7mk61f5lzl",
            "description": "This service searches for potentially fraudulent transactions by calculating the total value of orders for a customer within a time period, then checks to see if this is over a configured limit. \n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/FraudService.java)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["w47eg18c8x0"],
            "declaredConsumedEventVersionIds": ["0145uoadfa7"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "owjj8kbpb5d",
                    "name": "FRAUD.ORDERCREATED",
                    "applicationVersionId": "b58x49d8shv",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "qvlqlzh2pxp",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "3r3rmgcono7",
            "applicationId": "f7mk61f5lzl",
            "description": "This service searches for potentially fraudulent transactions by calculating the total value of orders for a customer within a time period, then checks to see if this is over a configured limit. \n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/FraudService.java)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["w47eg18c8x0"],
            "declaredConsumedEventVersionIds": ["0145uoadfa7"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "y89enxbq6in",
                    "name": "FRAUD.ORDERCREATED",
                    "applicationVersionId": "3r3rmgcono7",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "vqf8ys9s4t8",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-12T13:10:53.177Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5b33s9jdb4v",
            "applicationId": "g5r0th01dog",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["15ji3nrku9z", "va429iya3m7"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "4i9v54rt892",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "5b33s9jdb4v",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "17di5mbp2mq",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "h3fc28ogjk7",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "5b33s9jdb4v",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "vg7gc16nkd8",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "d6e63rkmj2p",
            "applicationId": "g5r0th01dog",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["1g0hb8yyfh6", "aodugpgwl7v"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "s3bghn8p1kk",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "d6e63rkmj2p",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "arg6xc0u9se",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "d53at9x965b",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "d6e63rkmj2p",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "650rq6vl0a7",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jex1wgpbjnt",
            "applicationId": "g5r0th01dog",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["1g0hb8yyfh6", "aodugpgwl7v"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "efhk2ddmqg1",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "jex1wgpbjnt",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "mb26hg83o04",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "kw0hijgmf8j",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "jex1wgpbjnt",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "akzqbvhskwc",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "s51qhz75i4x",
            "applicationId": "g5r0th01dog",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.2",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["1g0hb8yyfh6", "aodugpgwl7v"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "tifzikd6565",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "s51qhz75i4x",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "8y4fkj4km1h",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "3c8z2wwqx8s",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "s51qhz75i4x",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "bp3gel3wrgn",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "8c31ob8wdsg",
            "applicationId": "g5r0th01dog",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["1g0hb8yyfh6", "aodugpgwl7v"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "y7eol2t1gza",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "8c31ob8wdsg",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "hau4qjfkfua",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "aj471uke81g",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "8c31ob8wdsg",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ioj04hgypkv",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "kkypp55f21h",
            "applicationId": "g5r0th01dog",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["1g0hb8yyfh6", "aodugpgwl7v"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "82eka4hl059",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "kkypp55f21h",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "nxee5e6tflj",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "x4f9alebz04",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "kkypp55f21h",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "gxwk2maigjn",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-12T13:13:12.978Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "cecb59qpyh4",
            "applicationId": "hxzkfhnpw5w",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nGET returns requested order, blocking for timeout if no id present.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.3",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["5e580c7jn19"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "g4h5dq3xkkj",
                    "name": "ORDERSVIEW.ORDERVALIDATED",
                    "applicationVersionId": "cecb59qpyh4",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "9lci79i4bhz",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "4po935163go",
            "applicationId": "hxzkfhnpw5w",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nGET returns requested order, blocking for timeout if no id present.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["oki73r45ceb"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "3",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "3fahuzv02up",
                    "name": "ORDERSVIEW.ORDERVALIDATED",
                    "applicationVersionId": "4po935163go",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "f27if28ceck",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "azwc66nm6cy",
            "applicationId": "hxzkfhnpw5w",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nGET returns requested order, blocking for timeout if no id present.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["oki73r45ceb"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "hnuucherjfz",
                    "name": "ORDERSVIEW.ORDERVALIDATED",
                    "applicationVersionId": "azwc66nm6cy",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "b5yeq9u8vnc",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ia8sl0kt3df",
            "applicationId": "hxzkfhnpw5w",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nGET returns requested order, blocking for timeout if no id present.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["oki73r45ceb"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "daqod1wzlay",
                    "name": "ORDERSVIEW.ORDERVALIDATED",
                    "applicationVersionId": "ia8sl0kt3df",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "yf507chtl0n",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-12T13:11:06.545Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "761e1l8eze3",
            "applicationId": "lrx8kkiqiag",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["7g93it3vsvx"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:10.307Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "lfyml2tsic0",
            "applicationId": "lrx8kkiqiag",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["jd3akszzwng"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:10.307Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "07wg9hkabdy",
            "applicationId": "lrx8kkiqiag",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["jd3akszzwng"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:10.307Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "tdgt1hr7dns",
            "applicationId": "lrx8kkiqiag",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.2",
            "displayName": "",
            "declaredProducedEventVersionIds": ["jd3akszzwng"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:10.307Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "azkwlwn9tx0",
            "applicationId": "lrx8kkiqiag",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["jd3akszzwng"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:10.307Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jk0hvcw9cyf",
            "applicationId": "lrx8kkiqiag",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["jd3akszzwng"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-12T13:13:21.479Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7ikzbkrx06x",
            "applicationId": "mcarc8pxi8z",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.2",
            "displayName": "",
            "declaredProducedEventVersionIds": ["5e580c7jn19"],
            "declaredConsumedEventVersionIds": ["do1wzbg9wo8"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "agbsl546o3t",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "7ikzbkrx06x",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "5q82l400vph",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "yqg906gid2a",
            "applicationId": "mcarc8pxi8z",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["oki73r45ceb"],
            "declaredConsumedEventVersionIds": ["w47eg18c8x0"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "3li2k9cjaf7",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "yqg906gid2a",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "grzv39bytda",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "45wm6eknd78",
            "applicationId": "mcarc8pxi8z",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["oki73r45ceb"],
            "declaredConsumedEventVersionIds": ["w47eg18c8x0"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "3",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "psdxe7w5e32",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "45wm6eknd78",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "e0vduye6xu5",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "2xl3im3sb0x",
            "applicationId": "mcarc8pxi8z",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.3",
            "displayName": "",
            "declaredProducedEventVersionIds": ["oki73r45ceb"],
            "declaredConsumedEventVersionIds": ["w47eg18c8x0"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "2zncw86qbei",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "2xl3im3sb0x",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "krn2vg28508",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "si5gh6tistq",
            "applicationId": "mcarc8pxi8z",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.2",
            "displayName": "",
            "declaredProducedEventVersionIds": ["oki73r45ceb"],
            "declaredConsumedEventVersionIds": ["w47eg18c8x0"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "44xtbkefcjd",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "si5gh6tistq",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "w4a80wu6h42",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "y8v7ge08b57",
            "applicationId": "mcarc8pxi8z",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["oki73r45ceb"],
            "declaredConsumedEventVersionIds": ["w47eg18c8x0"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "pl8ofw2y63m",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "y8v7ge08b57",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "gxew6qtjtdc",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0g88sv2xg47",
            "applicationId": "mcarc8pxi8z",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["oki73r45ceb"],
            "declaredConsumedEventVersionIds": ["w47eg18c8x0"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "yi0dmc8grxg",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "0g88sv2xg47",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "mdo2mq1i54p",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-12T13:12:57.621Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "pmgjb0vagmb",
            "applicationId": "tkf1sw1fmit",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "1.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["do1wzbg9wo8"],
            "declaredConsumedEventVersionIds": ["p5bc3icg7c6"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "spn43illgh6",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "pmgjb0vagmb",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "jnek3s80n6g",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "6v7igpcctng",
            "applicationId": "tkf1sw1fmit",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["w47eg18c8x0"],
            "declaredConsumedEventVersionIds": ["0145uoadfa7"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "k3857i89kcj",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "6v7igpcctng",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "0hqqnhe3ay5",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "a953f3kzw65",
            "applicationId": "tkf1sw1fmit",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "0.2.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["w47eg18c8x0"],
            "declaredConsumedEventVersionIds": ["0145uoadfa7"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "acmvse3eacl",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "a953f3kzw65",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "fh9f4xg1ohm",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "t1gfpq053wl",
            "applicationId": "tkf1sw1fmit",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["w47eg18c8x0"],
            "declaredConsumedEventVersionIds": ["0145uoadfa7"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "0wvkaa4jl49",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "t1gfpq053wl",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "jt5627jfscc",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "tde4vbccm4t",
            "applicationId": "tkf1sw1fmit",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["w47eg18c8x0"],
            "declaredConsumedEventVersionIds": ["0145uoadfa7"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "u27qn1ivoxp",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "tde4vbccm4t",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "tkugxwakyqh",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-12T13:13:27.397Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ej7cjr6xhfi",
            "applicationId": "v3uwnj46h76",
            "description": "A streaming service leveraging the Kafka Streams API. This service reacts to orders as they are created, updating the Shipping topic as notifications are received from the delivery company.\n\n[GitHub Source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["8tifujtzwt4"],
            "declaredConsumedEventVersionIds": ["bddqv0e6ou7", "va429iya3m7"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "omcizogev7l",
                    "name": "SHIPPING.CATALOGUE",
                    "applicationVersionId": "ej7cjr6xhfi",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "2e3s9t3vd6k",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "cgc1yp9ox38",
                    "name": "SHIPPING.CUSTOMERS",
                    "applicationVersionId": "ej7cjr6xhfi",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "b3jfcht1gr1",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:12.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "pdy4wwuy4tn",
            "applicationId": "v3uwnj46h76",
            "description": "A streaming service leveraging the Kafka Streams API. This service reacts to orders as they are created, updating the Shipping topic as notifications are received from the delivery company.",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["707xlsgf8n1"],
            "declaredConsumedEventVersionIds": ["1g0hb8yyfh6", "5un3ckj156i"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "qyee0oxbb77",
                    "name": "SHIPPING.CATALOGUE",
                    "applicationVersionId": "pdy4wwuy4tn",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "m5bsjkwcqx2",
                            "subscriptionType": "topic",
                            "value": "CATALOGUE",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-11T13:05:12.535Z",
                    "updatedTime": "2023-07-11T13:05:12.535Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "icfey992bib",
                    "name": "SHIPPING.CUSTOMERS",
                    "applicationVersionId": "pdy4wwuy4tn",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "6c8db7rj5nq",
                            "subscriptionType": "topic",
                            "value": "CUSTOMERS",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-12T13:11:51.626Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "o9h441cxktt",
            "applicationId": "v9mcu765a77",
            "description": "A legacy codebase that manages changes made to the product catalog, initiated from an internal UI. This has comparatively fewer users, and an existing codebase. Events are picked up from the legacy Postgres database using a CDC connector to push them into Kafka. The single-message transforms feature reformats the messages before they are made public. Images are saved to a distributed filesystem for access by the web tier.\n\n[GitHub source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "1.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["va429iya3m7"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:10.307Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "46c6o8u375b",
            "applicationId": "v9mcu765a77",
            "description": "A legacy codebase that manages changes made to the product catalog, initiated from an internal UI. This has comparatively fewer users, and an existing codebase. Events are picked up from the legacy Postgres database using a CDC connector to push them into Kafka. The single-message transforms feature reformats the messages before they are made public. Images are saved to a distributed filesystem for access by the web tier.\n\n[GitHub source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["1g0hb8yyfh6"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:10.307Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "b3uw64bp07o",
            "applicationId": "v9mcu765a77",
            "description": "A legacy codebase that manages changes made to the product catalog, initiated from an internal UI. This has comparatively fewer users, and an existing codebase. Events are picked up from the legacy Postgres database using a CDC connector to push them into Kafka. The single-message transforms feature reformats the messages before they are made public. Images are saved to a distributed filesystem for access by the web tier.\n\n[GitHub source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["1g0hb8yyfh6"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "3",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-11T13:05:10.307Z",
            "updatedTime": "2023-07-11T13:05:10.307Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "dfq82nyi1hc",
            "applicationId": "v9mcu765a77",
            "description": "A legacy codebase that manages changes made to the product catalog, initiated from an internal UI. This has comparatively fewer users, and an existing codebase. Events are picked up from the legacy Postgres database using a CDC connector to push them into Kafka. The single-message transforms feature reformats the messages before they are made public. Images are saved to a distributed filesystem for access by the web tier.\n\n[GitHub source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["1g0hb8yyfh6"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }
    ],
    "events": [{
            "createdTime": "2023-07-11T13:05:08.863Z",
            "updatedTime": "2023-07-11T13:18:07.449Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0j9cxh9ysti",
            "name": "Basket",
            "shared": false,
            "applicationDomainId": "l4un3rmfk9k",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "d9z0mgmqpgl",
                    "customAttributeDefinitionName": "confidential",
                    "value": "false"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 2,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-07-11T13:05:08.863Z",
            "updatedTime": "2023-07-11T13:17:56.621Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "agm9uzb16qm",
            "name": "Catalogue",
            "shared": true,
            "applicationDomainId": "j2qmrw1niws",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "d9z0mgmqpgl",
                    "customAttributeDefinitionName": "confidential",
                    "value": "false"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-07-11T13:05:08.863Z",
            "updatedTime": "2023-07-11T13:18:13.584Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "4cpvx3h4jhp",
            "name": "Customer",
            "shared": true,
            "applicationDomainId": "l4un3rmfk9k",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "d9z0mgmqpgl",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 4
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-07-11T13:05:08.863Z",
            "updatedTime": "2023-07-11T13:18:19.589Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "j3jv4zmic2m",
            "name": "Order Created",
            "shared": true,
            "applicationDomainId": "l4un3rmfk9k",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "d9z0mgmqpgl",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-07-11T13:05:08.863Z",
            "updatedTime": "2023-07-11T13:18:25.546Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "6c4nzt8gq9o",
            "name": "Order Updated",
            "shared": true,
            "applicationDomainId": "l4un3rmfk9k",
            "numberOfVersions": 4,
            "customAttributes": [{
                    "customAttributeDefinitionId": "d9z0mgmqpgl",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 2
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-07-11T13:05:08.863Z",
            "updatedTime": "2023-07-11T13:19:17.319Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0i0rleslsgw",
            "name": "Order Validated",
            "shared": false,
            "applicationDomainId": "l4un3rmfk9k",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "d9z0mgmqpgl",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-07-11T13:05:08.863Z",
            "updatedTime": "2023-07-11T13:19:23.873Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "oayihd61ui4",
            "name": "Payment",
            "shared": true,
            "applicationDomainId": "l4un3rmfk9k",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "d9z0mgmqpgl",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 4
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-07-11T13:05:08.863Z",
            "updatedTime": "2023-07-11T13:19:43.830Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "k7flrmjzc8g",
            "name": "Shipping",
            "shared": false,
            "applicationDomainId": "2z0ko9we2h4",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "d9z0mgmqpgl",
                    "customAttributeDefinitionName": "confidential",
                    "value": "false"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-07-11T13:05:08.863Z",
            "updatedTime": "2023-07-11T13:17:21.789Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "3zi3y4ui1xv",
            "name": "Warehouse Inventory",
            "shared": true,
            "applicationDomainId": "ezxlo4q49gm",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "d9z0mgmqpgl",
                    "customAttributeDefinitionName": "confidential",
                    "value": "false"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 3
                }
            },
            "type": "event"
        }
    ],
    "eventVersions": [{
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:19:17.319Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5e580c7jn19",
            "eventId": "0i0rleslsgw",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "1.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "dc8qq1jfn6q",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "f7e2ebxj8lc",
            "eventId": "0i0rleslsgw",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "6cb4di0c9ld",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "s0fb56zdt6p",
            "eventId": "0i0rleslsgw",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "6cb4di0c9ld",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "yr3pt490ece",
            "eventId": "0i0rleslsgw",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "0.2.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "6cb4di0c9ld",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "oki73r45ceb",
            "eventId": "0i0rleslsgw",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "6cb4di0c9ld",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:18:07.449Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7g93it3vsvx",
            "eventId": "0j9cxh9ysti",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "1.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "y5ne3pnha98",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "g3ahvs9k74h",
            "eventId": "0j9cxh9ysti",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "pbfobhwk9vh",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "i857id8zfxg",
            "eventId": "0j9cxh9ysti",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "pbfobhwk9vh",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ioe4iaud44e",
            "eventId": "0j9cxh9ysti",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "pbfobhwk9vh",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "1a6ddk19w7q",
            "eventId": "0j9cxh9ysti",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "pbfobhwk9vh",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jd3akszzwng",
            "eventId": "0j9cxh9ysti",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "pbfobhwk9vh",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:17:21.789Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "15ji3nrku9z",
            "eventId": "3zi3y4ui1xv",
            "description": "Current stock levels for items in the warehouse",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "rqpn9mb13g2",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "qz8i6w1sjfi",
            "eventId": "3zi3y4ui1xv",
            "description": "Current stock levels for items in the warehouse",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "nt01pg4g6b3",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.562Z",
            "updatedTime": "2023-07-11T13:05:09.562Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7a9v3vaakbl",
            "eventId": "3zi3y4ui1xv",
            "description": "Current stock levels for items in the warehouse",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "nt01pg4g6b3",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.562Z",
            "updatedTime": "2023-07-11T13:05:09.562Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "enoala95fgv",
            "eventId": "3zi3y4ui1xv",
            "description": "Current stock levels for items in the warehouse",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "nt01pg4g6b3",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.562Z",
            "updatedTime": "2023-07-11T13:05:09.562Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "aodugpgwl7v",
            "eventId": "3zi3y4ui1xv",
            "description": "Current stock levels for items in the warehouse",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "nt01pg4g6b3",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:18:13.584Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "bddqv0e6ou7",
            "eventId": "4cpvx3h4jhp",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "2.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "k0l24z9579e",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "lizdkqwzdea",
            "eventId": "4cpvx3h4jhp",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "2.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "muwvt1e7tnd",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "berfgc9h00m",
            "eventId": "4cpvx3h4jhp",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "0.2.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "muwvt1e7tnd",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "8ekmijizucg",
            "eventId": "4cpvx3h4jhp",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "muwvt1e7tnd",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "16uvqy9h0d0",
            "eventId": "4cpvx3h4jhp",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "muwvt1e7tnd",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5un3ckj156i",
            "eventId": "4cpvx3h4jhp",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "muwvt1e7tnd",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:18:25.546Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "do1wzbg9wo8",
            "eventId": "6c4nzt8gq9o",
            "description": "As the order moves through the fulfillment process, each service add to this topic to show current state.",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "gv7oa639a6c",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "order-validations",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "hp9d2mk5cv5",
            "eventId": "6c4nzt8gq9o",
            "description": "As the order moves through the fulfillment process, each service add to this topic to show current state.",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "chkjvmers35",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "order-validations",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5s5e2cr8c2r",
            "eventId": "6c4nzt8gq9o",
            "description": "As the order moves through the fulfillment process, each service add to this topic to show current state.",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "chkjvmers35",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "order-validations",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "w47eg18c8x0",
            "eventId": "6c4nzt8gq9o",
            "description": "As the order moves through the fulfillment process, each service add to this topic to show current state.",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "chkjvmers35",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "order-validations",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:17:56.621Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "va429iya3m7",
            "eventId": "agm9uzb16qm",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "mpvgl7771xw",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "eqhy82s7ou7",
            "eventId": "agm9uzb16qm",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "1tzxx3k7c2h",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "07gbse4732t",
            "eventId": "agm9uzb16qm",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "1tzxx3k7c2h",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ps4ghmd6b5a",
            "eventId": "agm9uzb16qm",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "1tzxx3k7c2h",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "1g0hb8yyfh6",
            "eventId": "agm9uzb16qm",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "1tzxx3k7c2h",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:18:19.589Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "p5bc3icg7c6",
            "eventId": "j3jv4zmic2m",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "2.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "5kr1437a3dc",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "w8c9evoq5cj",
            "eventId": "j3jv4zmic2m",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "2.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "mh2zp821qxd",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "tv5eah8t9og",
            "eventId": "j3jv4zmic2m",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "0.2.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "mh2zp821qxd",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ceehy63hkgo",
            "eventId": "j3jv4zmic2m",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "0.2.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "mh2zp821qxd",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0145uoadfa7",
            "eventId": "j3jv4zmic2m",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "mh2zp821qxd",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:19:43.830Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "8tifujtzwt4",
            "eventId": "k7flrmjzc8g",
            "description": "Changes in the shipping status of ordered items as they move out of the warehouse to home delivery.",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "6f07k878fwz",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "shipping",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "kmjgl8216gy",
            "eventId": "k7flrmjzc8g",
            "description": "Changes in the shipping status of ordered items as they move out of the warehouse to home delivery.",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "lnoepiji9is",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "shipping",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "i4peraks3hq",
            "eventId": "k7flrmjzc8g",
            "description": "Changes in the shipping status of ordered items as they move out of the warehouse to home delivery.",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "lnoepiji9is",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "shipping",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "b4wmnbzg1w9",
            "eventId": "k7flrmjzc8g",
            "description": "Changes in the shipping status of ordered items as they move out of the warehouse to home delivery.",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "lnoepiji9is",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "shipping",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "707xlsgf8n1",
            "eventId": "k7flrmjzc8g",
            "description": "Changes in the shipping status of ordered items.",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "lnoepiji9is",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "SHIPPING",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:19:23.873Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "2fpabbb3gdx",
            "eventId": "oayihd61ui4",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "1.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "nobq95h3ccv",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "1",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ci9k1wgiu8a",
            "eventId": "oayihd61ui4",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "b4ae69m1pfl",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5abo9gezl9b",
            "eventId": "oayihd61ui4",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "0.1.3",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "b4ae69m1pfl",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "hgjq1z59yc2",
            "eventId": "oayihd61ui4",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "b4ae69m1pfl",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gsuav421i6n",
            "eventId": "oayihd61ui4",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "b4ae69m1pfl",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-11T13:05:09.561Z",
            "updatedTime": "2023-07-11T13:05:09.561Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "knh6cwfofxx",
            "eventId": "oayihd61ui4",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "b4ae69m1pfl",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }
    ],
    "schemas": [{
            "createdTime": "2023-07-11T13:05:08.843Z",
            "updatedTime": "2023-07-12T13:06:02.008Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "o6r191b97f0",
            "applicationDomainId": "l4un3rmfk9k",
            "name": "Basket",
            "shared": false,
            "schemaType": "avro",
            "numberOfVersions": 7,
            "eventVersionRefCount": 6,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 2,
                    "3": 4
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-07-11T13:05:08.843Z",
            "updatedTime": "2023-07-12T13:03:51.978Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "r6mlgbg54kc",
            "applicationDomainId": "j2qmrw1niws",
            "name": "Catalog",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 8,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "3": 7
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-07-11T13:05:08.843Z",
            "updatedTime": "2023-07-12T13:06:18.734Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0apmuz0gf8g",
            "applicationDomainId": "l4un3rmfk9k",
            "name": "Customer",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 8,
            "eventVersionRefCount": 6,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 6
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-07-11T13:05:08.843Z",
            "updatedTime": "2023-07-12T13:14:31.462Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "kmsxc0jth31",
            "applicationDomainId": "l4un3rmfk9k",
            "name": "Enriched Order",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 6,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 4
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-07-11T13:05:08.843Z",
            "updatedTime": "2023-07-12T13:03:07.151Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "1a7udp04tnb",
            "applicationDomainId": "ezxlo4q49gm",
            "name": "Inventory",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 6,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 4
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-07-11T13:05:08.843Z",
            "updatedTime": "2023-07-12T13:07:15.104Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0h7g8k9bkb5",
            "applicationDomainId": "l4un3rmfk9k",
            "name": "Order",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 8,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 6
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-07-11T13:05:08.843Z",
            "updatedTime": "2023-07-12T13:08:46.912Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ovd7cj0n784",
            "applicationDomainId": "l4un3rmfk9k",
            "name": "Order Validation",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 7,
            "eventVersionRefCount": 4,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 5
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-07-11T13:05:08.843Z",
            "updatedTime": "2023-07-12T13:16:18.432Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "lef69twagu0",
            "applicationDomainId": "l4un3rmfk9k",
            "name": "Payment",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 5,
            "eventVersionRefCount": 6,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 3
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-07-11T13:05:08.843Z",
            "updatedTime": "2023-07-12T13:09:32.768Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7e6han9nj6v",
            "applicationDomainId": "2z0ko9we2h4",
            "name": "Shipping",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 5,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "1": 1,
                    "2": 1,
                    "3": 1,
                    "4": 2
                }
            },
            "customAttributes": [],
            "type": "schema"
        }
    ],
    "schemaVersions": [{
            "createdTime": "2023-07-11T13:05:08.943Z",
            "updatedTime": "2023-07-12T13:08:46.909Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gv7oa639a6c",
            "schemaId": "ovd7cj0n784",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "3.0.1",
            "displayName": "",
            "content": "{\n\t\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n\t\"type\": \"record\",\n\t\"name\": \"OrderValidation\",\n\t\"fields\": [{\n\t\t\t\"name\": \"orderId\",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t{\n\n\t\t\t\"type\": \"enum\",\n\t\t\t\"name\": \"OrderValidationType\",\n\t\t\t\"symbols\": [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"enum\",\n\t\t\t\"name\": \"OrderValidationResult\",\n\t\t\t\"symbols\": [\"PASS\", \"FAIL\", \"ERROR\"]\n\t\t}\n\t]\n}",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.944Z",
            "updatedTime": "2023-07-11T13:05:08.944Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "1snv7m4hxdq",
            "schemaId": "ovd7cj0n784",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "3.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.945Z",
            "updatedTime": "2023-07-12T13:06:18.731Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "k0l24z9579e",
            "schemaId": "0apmuz0gf8g",
            "description": "Represents a customer of the store ",
            "version": "2.0.1",
            "displayName": "",
            "content": "{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.945Z",
            "updatedTime": "2023-07-11T13:05:08.945Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "85eeh28f645",
            "schemaId": "ovd7cj0n784",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "2.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.946Z",
            "updatedTime": "2023-07-11T13:05:08.946Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "divbyiw8bcv",
            "schemaId": "0apmuz0gf8g",
            "description": "Represents a customer of the store ",
            "version": "2.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.947Z",
            "updatedTime": "2023-07-12T13:06:02.005Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "y5ne3pnha98",
            "schemaId": "o6r191b97f0",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "1.1.2",
            "displayName": "",
            "content": "{\n\t\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n\t\"type\": \"record\",\n\t\"name\": \"Basket\",\n\t\"fields\": [{\n\t\t\t\"name\": \"id\",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"customerId\",\n\t\t\t\"type\": \"long\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"state\",\n\t\t\t\"type\": \"OrderState\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"enum\",\n\t\t\t\"name\": \"product\",\n\t\t\t\"symbols\": [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"quantity\",\n\t\t\t\"type\": \"int\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"price\",\n\t\t\t\"type\": \"double\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"enum\",\n\t\t\t\"name\": \"OrderState\",\n\t\t\t\"symbols\": [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n\t\t}\n\t]\n}",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.948Z",
            "updatedTime": "2023-07-12T13:03:07.148Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "rqpn9mb13g2",
            "schemaId": "1a7udp04tnb",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "1.1.1",
            "displayName": "",
            "content": "{\n\t\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n\t\"type\": \"record\",\n\t\"name\": \"Inventory\",\n\t\"fields\": [{\n\t\t\"name\": \"id\",\n\t\t\"type\": \"string\"\n\t}, {\n\t\t\"type\": \"enum\",\n\t\t\"name\": \"product\",\n\t\t\"symbols\": [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n\t}, {\n\t\t\"name\": \"quantity\",\n\t\t\"type\": \"int\"\n\t}]\n}",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.950Z",
            "updatedTime": "2023-07-11T13:05:08.950Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5hb3k0yiwq7",
            "schemaId": "1a7udp04tnb",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "1.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.950Z",
            "updatedTime": "2023-07-11T13:05:08.950Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "dtkq1n30k6x",
            "schemaId": "o6r191b97f0",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "1.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.949Z",
            "updatedTime": "2023-07-12T13:16:18.429Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "nobq95h3ccv",
            "schemaId": "lef69twagu0",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "1.1.0",
            "displayName": "",
            "content": "\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.952Z",
            "updatedTime": "2023-07-11T13:05:08.952Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "40lh1s4me3p",
            "schemaId": "0apmuz0gf8g",
            "description": "Represents a customer of the store ",
            "version": "1.0.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.953Z",
            "updatedTime": "2023-07-12T13:14:31.459Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "dc8qq1jfn6q",
            "schemaId": "kmsxc0jth31",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "1.0.2",
            "displayName": "",
            "content": "{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.951Z",
            "updatedTime": "2023-07-12T13:03:51.976Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "mpvgl7771xw",
            "schemaId": "r6mlgbg54kc",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "1.0.2",
            "displayName": "",
            "content": "{\n\t\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n\t\"type\": \"record\",\n\t\"name\": \"Catalog\",\n\t\"fields\": [{\n\t\t\"name\": \"id\",\n\t\t\"type\": \"string\"\n\t}, {\n\t\t\"type\": \"enum\",\n\t\t\"name\": \"product\",\n\t\t\"symbols\": [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n\t}, {\n\t\t\"name\": \"quantity\",\n\t\t\"type\": \"int\"\n\t}]\n}",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.955Z",
            "updatedTime": "2023-07-12T13:07:15.101Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5kr1437a3dc",
            "schemaId": "0h7g8k9bkb5",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "1.0.1",
            "displayName": "",
            "content": "{\n\t\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n\t\"type\": \"record\",\n\t\"name\": \"Order\",\n\t\"fields\": [{\n\t\t\t\"name\": \"id\",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"customerId\",\n\t\t\t\"type\": \"long\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"state\",\n\t\t\t\"type\": \"OrderState\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"enum\",\n\t\t\t\"name\": \"product\",\n\t\t\t\"symbols\": [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"quantity\",\n\t\t\t\"type\": \"int\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"price\",\n\t\t\t\"type\": \"double\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"enum\",\n\t\t\t\"name\": \"OrderState\",\n\t\t\t\"symbols\": [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n\t\t}\n\t]\n}",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.954Z",
            "updatedTime": "2023-07-12T13:09:32.765Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "6f07k878fwz",
            "schemaId": "7e6han9nj6v",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "1.0.1",
            "displayName": "",
            "content": "{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "1",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.954Z",
            "updatedTime": "2023-07-11T13:05:08.954Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7vr3b7622ae",
            "schemaId": "kmsxc0jth31",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "1.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.956Z",
            "updatedTime": "2023-07-11T13:05:08.956Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "dbsu8ohi8jl",
            "schemaId": "0apmuz0gf8g",
            "description": "Represents a customer of the store ",
            "version": "1.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.957Z",
            "updatedTime": "2023-07-11T13:05:08.957Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "j97dxcii3a2",
            "schemaId": "r6mlgbg54kc",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "1.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.962Z",
            "updatedTime": "2023-07-11T13:05:08.962Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "1zg0c0acz7i",
            "schemaId": "kmsxc0jth31",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.958Z",
            "updatedTime": "2023-07-11T13:05:08.958Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "c6wbjjuxbkz",
            "schemaId": "r6mlgbg54kc",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.960Z",
            "updatedTime": "2023-07-11T13:05:08.960Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "cib4ktfv87p",
            "schemaId": "o6r191b97f0",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.962Z",
            "updatedTime": "2023-07-11T13:05:08.962Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "cy6ijsbx5cn",
            "schemaId": "lef69twagu0",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.963Z",
            "updatedTime": "2023-07-11T13:05:08.963Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ijsag8mzjia",
            "schemaId": "ovd7cj0n784",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.959Z",
            "updatedTime": "2023-07-11T13:05:08.959Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jlojc3l9o69",
            "schemaId": "0h7g8k9bkb5",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.961Z",
            "updatedTime": "2023-07-11T13:05:08.961Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jlxvb95i28q",
            "schemaId": "7e6han9nj6v",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.958Z",
            "updatedTime": "2023-07-11T13:05:08.958Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "qykkfos5d5g",
            "schemaId": "0apmuz0gf8g",
            "description": "Represents a customer of the store ",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.964Z",
            "updatedTime": "2023-07-11T13:05:08.964Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "rikoe9p7hpm",
            "schemaId": "1a7udp04tnb",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.965Z",
            "updatedTime": "2023-07-11T13:05:08.965Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5xp8a6nys60",
            "schemaId": "0h7g8k9bkb5",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.3.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.967Z",
            "updatedTime": "2023-07-11T13:05:08.967Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "29ytckgd5zh",
            "schemaId": "0h7g8k9bkb5",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.3.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.966Z",
            "updatedTime": "2023-07-11T13:05:08.966Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "k3q05jpr0vj",
            "schemaId": "r6mlgbg54kc",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.3.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.967Z",
            "updatedTime": "2023-07-11T13:05:08.967Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "kf15oxiaguu",
            "schemaId": "kmsxc0jth31",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "0.2.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.971Z",
            "updatedTime": "2023-07-11T13:05:08.971Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "be19qkyzcj1",
            "schemaId": "kmsxc0jth31",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.971Z",
            "updatedTime": "2023-07-11T13:05:08.971Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "fex6iijrdhh",
            "schemaId": "0h7g8k9bkb5",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.969Z",
            "updatedTime": "2023-07-11T13:05:08.969Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "i5qkhfxq1b0",
            "schemaId": "o6r191b97f0",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.970Z",
            "updatedTime": "2023-07-11T13:05:08.970Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "pcd3ivczjlg",
            "schemaId": "r6mlgbg54kc",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.968Z",
            "updatedTime": "2023-07-11T13:05:08.968Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ym4af656840",
            "schemaId": "0apmuz0gf8g",
            "description": "Represents a customer of the store ",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.977Z",
            "updatedTime": "2023-07-11T13:05:08.977Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "1ks6o0d5ws0",
            "schemaId": "0h7g8k9bkb5",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.975Z",
            "updatedTime": "2023-07-11T13:05:08.975Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "d7umb6di239",
            "schemaId": "o6r191b97f0",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.974Z",
            "updatedTime": "2023-07-11T13:05:08.974Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gfeqaj3g8c5",
            "schemaId": "ovd7cj0n784",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.976Z",
            "updatedTime": "2023-07-11T13:05:08.976Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "h3jz8i052fm",
            "schemaId": "1a7udp04tnb",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.976Z",
            "updatedTime": "2023-07-11T13:05:08.976Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "k049ji994fy",
            "schemaId": "7e6han9nj6v",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "4",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.972Z",
            "updatedTime": "2023-07-11T13:05:08.972Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "wybrt2ku9fn",
            "schemaId": "lef69twagu0",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.973Z",
            "updatedTime": "2023-07-11T13:05:08.973Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "zo67vo4ihf8",
            "schemaId": "r6mlgbg54kc",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.981Z",
            "updatedTime": "2023-07-11T13:05:08.981Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "cl9d9aqf6vh",
            "schemaId": "0apmuz0gf8g",
            "description": "Represents a customer of the store ",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.982Z",
            "updatedTime": "2023-07-11T13:05:08.982Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "dftkew4as03",
            "schemaId": "7e6han9nj6v",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "4",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.980Z",
            "updatedTime": "2023-07-11T13:05:08.980Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "fm8kjbyx54l",
            "schemaId": "o6r191b97f0",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.978Z",
            "updatedTime": "2023-07-11T13:05:08.978Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "i2k443ju0i6",
            "schemaId": "lef69twagu0",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.983Z",
            "updatedTime": "2023-07-11T13:05:08.983Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "qy9rhb9gzne",
            "schemaId": "1a7udp04tnb",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.984Z",
            "updatedTime": "2023-07-11T13:05:08.984Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "rwj2ge904co",
            "schemaId": "0h7g8k9bkb5",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.979Z",
            "updatedTime": "2023-07-11T13:05:08.979Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "sirkp9r7x8f",
            "schemaId": "ovd7cj0n784",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.981Z",
            "updatedTime": "2023-07-11T13:05:08.981Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "u6cwo37gtgc",
            "schemaId": "r6mlgbg54kc",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.991Z",
            "updatedTime": "2023-07-11T13:05:08.991Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "1tzxx3k7c2h",
            "schemaId": "r6mlgbg54kc",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.986Z",
            "updatedTime": "2023-07-11T13:05:08.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "6cb4di0c9ld",
            "schemaId": "kmsxc0jth31",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.988Z",
            "updatedTime": "2023-07-11T13:05:08.988Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "b4ae69m1pfl",
            "schemaId": "lef69twagu0",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.990Z",
            "updatedTime": "2023-07-11T13:05:08.990Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "chkjvmers35",
            "schemaId": "ovd7cj0n784",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.985Z",
            "updatedTime": "2023-07-11T13:05:08.985Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "lnoepiji9is",
            "schemaId": "7e6han9nj6v",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.987Z",
            "updatedTime": "2023-07-11T13:05:08.987Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "mh2zp821qxd",
            "schemaId": "0h7g8k9bkb5",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.989Z",
            "updatedTime": "2023-07-11T13:05:08.989Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "muwvt1e7tnd",
            "schemaId": "0apmuz0gf8g",
            "description": "Represents a customer of the store ",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.986Z",
            "updatedTime": "2023-07-11T13:05:08.986Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "nt01pg4g6b3",
            "schemaId": "1a7udp04tnb",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-11T13:05:08.989Z",
            "updatedTime": "2023-07-11T13:05:08.989Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "pbfobhwk9vh",
            "schemaId": "o6r191b97f0",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }
    ],
    "enums": [],
    "enumVersions": [],
    "eventApis": [],
    "eventApiVersions": [],
    "eventApiProducts": [],
    "eventApiProductVersions": [],
    "addressSpaces": [{
            "createdTime": "2023-05-31T19:22:38.102Z",
            "updatedTime": "2023-05-31T19:22:38.102Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0vbsjfoe0fw",
            "brokerType": "kafka",
            "delimiter": ".",
            "type": "addressSpace"
        }
    ],
    "customAttributeDefinitions": [{
            "createdTime": "2023-07-11T13:05:08.766Z",
            "updatedTime": "2023-07-11T13:05:08.766Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "d9z0mgmqpgl",
            "name": "confidential",
            "valueType": "STRING",
            "scope": "applicationDomain",
            "associatedEntityTypes": ["event"],
            "associatedEntities": [{
                    "entityType": "event",
                    "applicationDomainIds": ["2z0ko9we2h4", "ezxlo4q49gm", "j2qmrw1niws", "l4un3rmfk9k"]
                }
            ],
            "type": "customAttributeDefinition"
        }, {
            "createdTime": "2023-07-11T13:05:08.763Z",
            "updatedTime": "2023-07-11T13:05:08.763Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "yzjklqq1fgt",
            "name": "application-type",
            "valueType": "STRING",
            "scope": "applicationDomain",
            "associatedEntityTypes": ["application"],
            "associatedEntities": [{
                    "entityType": "application",
                    "applicationDomainIds": ["2z0ko9we2h4", "ezxlo4q49gm", "j2qmrw1niws", "l4un3rmfk9k"]
                }
            ],
            "type": "customAttributeDefinition"
        }
    ]
}
