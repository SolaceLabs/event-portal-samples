{
    "formatVersion": "2.0.0",
    "applicationDomains": [{
            "createdTime": "2023-05-31T19:42:49.621Z",
            "updatedTime": "2023-05-31T19:42:49.621Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7ruyh8oib6n",
            "name": "Fulfillment",
            "description": "Event Hubs",
            "uniqueTopicAddressEnforcementEnabled": false,
            "topicDomainEnforcementEnabled": false,
            "customAttributes": [],
            "type": "applicationDomain"
        }, {
            "createdTime": "2023-05-31T19:42:49.621Z",
            "updatedTime": "2023-05-31T19:42:49.621Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5inu9z9e7al",
            "name": "Merchandising",
            "description": "Event Hubs",
            "uniqueTopicAddressEnforcementEnabled": false,
            "topicDomainEnforcementEnabled": false,
            "customAttributes": [],
            "type": "applicationDomain"
        }, {
            "createdTime": "2023-05-31T19:42:49.621Z",
            "updatedTime": "2023-05-31T19:42:49.621Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "v8r9hyl6xmu",
            "name": "OnlineServices",
            "description": "Event Hubs",
            "uniqueTopicAddressEnforcementEnabled": false,
            "topicDomainEnforcementEnabled": false,
            "customAttributes": [],
            "type": "applicationDomain"
        }, {
            "createdTime": "2023-05-31T19:42:49.621Z",
            "updatedTime": "2023-05-31T19:42:49.621Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "wwuh6eshak7",
            "name": "Shipping",
            "description": "Event Hubs",
            "uniqueTopicAddressEnforcementEnabled": false,
            "topicDomainEnforcementEnabled": false,
            "customAttributes": [],
            "type": "applicationDomain"
        }
    ],
    "topicDomains": [],
    "applications": [{
            "createdTime": "2023-05-31T19:42:49.866Z",
            "updatedTime": "2023-05-31T19:46:32.775Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ouqx1q2aoa8",
            "name": "Basket Service - Basket View (kSQL)",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "v8r9hyl6xmu",
            "numberOfVersions": 7,
            "customAttributes": [{
                    "customAttributeDefinitionId": "0d1cz9t1288",
                    "customAttributeDefinitionName": "application-type",
                    "value": "ksql"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-31T19:42:49.897Z",
            "updatedTime": "2023-05-31T19:46:37.584Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "3a535u38env",
            "name": "Basket Service - Basket Writer (REST proxy)",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "v8r9hyl6xmu",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "0d1cz9t1288",
                    "customAttributeDefinitionName": "application-type",
                    "value": "rest-proxy"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-31T19:42:49.930Z",
            "updatedTime": "2023-05-31T19:46:43.252Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "tz2eafpw8jn",
            "name": "Catalogue Filter View (kSQL)",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "v8r9hyl6xmu",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "0d1cz9t1288",
                    "customAttributeDefinitionName": "application-type",
                    "value": "ksql"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-31T19:42:49.961Z",
            "updatedTime": "2023-05-31T19:46:47.533Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "uwiuuaojbjq",
            "name": "Catalogue Search (Kafka Connect -> Elasticsearch)",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "v8r9hyl6xmu",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "0d1cz9t1288",
                    "customAttributeDefinitionName": "application-type",
                    "value": "kafka-connect"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-31T19:42:49.992Z",
            "updatedTime": "2023-05-31T19:46:03.812Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "6xpei234inf",
            "name": "Catalogue Services",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "5inu9z9e7al",
            "numberOfVersions": 4,
            "customAttributes": [{
                    "customAttributeDefinitionId": "0d1cz9t1288",
                    "customAttributeDefinitionName": "application-type",
                    "value": "cobol"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-31T19:42:50.023Z",
            "updatedTime": "2023-05-31T19:45:57.564Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "vw27un1dkmc",
            "name": "Email Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "7ruyh8oib6n",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "0d1cz9t1288",
                    "customAttributeDefinitionName": "application-type",
                    "value": "java"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-31T19:42:50.054Z",
            "updatedTime": "2023-05-31T19:43:20.157Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "wb6iac7phv6",
            "name": "Fraud Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "7ruyh8oib6n",
            "numberOfVersions": 4,
            "customAttributes": [{
                    "customAttributeDefinitionId": "0d1cz9t1288",
                    "customAttributeDefinitionName": "application-type",
                    "value": "java"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-31T19:42:50.085Z",
            "updatedTime": "2023-05-31T19:46:09.778Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ce8eumekjjd",
            "name": "Inventory Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "7ruyh8oib6n",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "0d1cz9t1288",
                    "customAttributeDefinitionName": "application-type",
                    "value": "java"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-31T19:42:50.117Z",
            "updatedTime": "2023-05-31T19:46:14.672Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5jk4ih2feix",
            "name": "Order Details Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "7ruyh8oib6n",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "0d1cz9t1288",
                    "customAttributeDefinitionName": "application-type",
                    "value": "ksql"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-31T19:42:50.148Z",
            "updatedTime": "2023-05-31T19:46:51.781Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "bsxkyeq5qzh",
            "name": "Orders Service  - Order Writer",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "v8r9hyl6xmu",
            "numberOfVersions": 4,
            "customAttributes": [{
                    "customAttributeDefinitionId": "0d1cz9t1288",
                    "customAttributeDefinitionName": "application-type",
                    "value": "rest-proxy"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-31T19:42:50.178Z",
            "updatedTime": "2023-05-31T19:47:29.372Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "qthmuh73ye0",
            "name": "Orders Service - Orders View",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "v8r9hyl6xmu",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "0d1cz9t1288",
                    "customAttributeDefinitionName": "application-type",
                    "value": "rest-proxy"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-31T19:42:50.209Z",
            "updatedTime": "2023-05-31T19:47:35.747Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "95ax2yn5gud",
            "name": "Orders Service - Validations Aggregator",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "v8r9hyl6xmu",
            "numberOfVersions": 7,
            "customAttributes": [{
                    "customAttributeDefinitionId": "0d1cz9t1288",
                    "customAttributeDefinitionName": "application-type",
                    "value": "java"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-05-31T19:42:50.240Z",
            "updatedTime": "2023-05-31T19:47:45.775Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "f8efy4hdhge",
            "name": "Shipping Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "wwuh6eshak7",
            "numberOfVersions": 2,
            "customAttributes": [{
                    "customAttributeDefinitionId": "0d1cz9t1288",
                    "customAttributeDefinitionName": "application-type",
                    "value": "kafka-streams"
                }
            ],
            "type": "application"
        }
    ],
    "applicationVersions": [{
            "createdTime": "2023-05-31T19:43:20.339Z",
            "updatedTime": "2023-05-31T19:46:37.584Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "igngixc7bvx",
            "applicationId": "3a535u38env",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["8j6sahex9dy"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:20.574Z",
            "updatedTime": "2023-05-31T19:43:20.574Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "9r22g7nj6g7",
            "applicationId": "3a535u38env",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["vs7c1ixldb8"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:20.810Z",
            "updatedTime": "2023-05-31T19:43:20.810Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "umwt9jgjsg6",
            "applicationId": "3a535u38env",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["vs7c1ixldb8"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:21.046Z",
            "updatedTime": "2023-05-31T19:43:21.046Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "4kkir2xg6jr",
            "applicationId": "3a535u38env",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.2",
            "displayName": "",
            "declaredProducedEventVersionIds": ["vs7c1ixldb8"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:21.306Z",
            "updatedTime": "2023-05-31T19:43:21.306Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "cxx6pd1u8rl",
            "applicationId": "3a535u38env",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["vs7c1ixldb8"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:21.543Z",
            "updatedTime": "2023-05-31T19:43:21.543Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "4nzb4pznr6s",
            "applicationId": "3a535u38env",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["vs7c1ixldb8"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:15.154Z",
            "updatedTime": "2023-05-31T19:46:14.672Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "1xys3jv31vj",
            "applicationId": "5jk4ih2feix",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "1.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["puqnkhe2ptq"],
            "declaredConsumedEventVersionIds": ["x5qr7rnsns3"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:15.365Z",
                    "updatedTime": "2023-05-31T19:43:15.365Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "qitcc090tb0",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "1xys3jv31vj",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "gpyr1c260j3",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:15.590Z",
            "updatedTime": "2023-05-31T19:43:15.868Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ig689j7fcm6",
            "applicationId": "5jk4ih2feix",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["cd3ov0nnesw"],
            "declaredConsumedEventVersionIds": ["ximgv8bwt6o"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:15.810Z",
                    "updatedTime": "2023-05-31T19:43:15.810Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "l8ud3fxazml",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "ig689j7fcm6",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "zhp59iqucax",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:16.052Z",
            "updatedTime": "2023-05-31T19:43:16.326Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "04jfurx0n60",
            "applicationId": "5jk4ih2feix",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "0.2.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["cd3ov0nnesw"],
            "declaredConsumedEventVersionIds": ["ximgv8bwt6o"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:16.269Z",
                    "updatedTime": "2023-05-31T19:43:16.269Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "i74wsvielji",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "04jfurx0n60",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "opfkkffiiez",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:16.498Z",
            "updatedTime": "2023-05-31T19:43:16.770Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "19vomyj89ba",
            "applicationId": "5jk4ih2feix",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["cd3ov0nnesw"],
            "declaredConsumedEventVersionIds": ["ximgv8bwt6o"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:16.711Z",
                    "updatedTime": "2023-05-31T19:43:16.711Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "hc46dv5dg3v",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "19vomyj89ba",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "6322984c953",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:16.946Z",
            "updatedTime": "2023-05-31T19:43:17.256Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "3swxfee1ch8",
            "applicationId": "5jk4ih2feix",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["cd3ov0nnesw"],
            "declaredConsumedEventVersionIds": ["ximgv8bwt6o"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:17.196Z",
                    "updatedTime": "2023-05-31T19:43:17.196Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "3aul74wy2m6",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "3swxfee1ch8",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "fz8afk21h7h",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:27.304Z",
            "updatedTime": "2023-05-31T19:46:03.812Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "qq5xls73d35",
            "applicationId": "6xpei234inf",
            "description": "A legacy codebase that manages changes made to the product catalog, initiated from an internal UI. This has comparatively fewer users, and an existing codebase. Events are picked up from the legacy Postgres database using a CDC connector to push them into Kafka. The single-message transforms feature reformats the messages before they are made public. Images are saved to a distributed filesystem for access by the web tier.\n\n[GitHub source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "1.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["qdsdk4jgv8v"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:27.541Z",
            "updatedTime": "2023-05-31T19:43:27.541Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "hvwbfirgnwe",
            "applicationId": "6xpei234inf",
            "description": "A legacy codebase that manages changes made to the product catalog, initiated from an internal UI. This has comparatively fewer users, and an existing codebase. Events are picked up from the legacy Postgres database using a CDC connector to push them into Kafka. The single-message transforms feature reformats the messages before they are made public. Images are saved to a distributed filesystem for access by the web tier.\n\n[GitHub source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["p8n6pp29jo4"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:27.789Z",
            "updatedTime": "2023-05-31T19:43:27.789Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "s1p56viitzq",
            "applicationId": "6xpei234inf",
            "description": "A legacy codebase that manages changes made to the product catalog, initiated from an internal UI. This has comparatively fewer users, and an existing codebase. Events are picked up from the legacy Postgres database using a CDC connector to push them into Kafka. The single-message transforms feature reformats the messages before they are made public. Images are saved to a distributed filesystem for access by the web tier.\n\n[GitHub source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["p8n6pp29jo4"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "3",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:28.015Z",
            "updatedTime": "2023-05-31T19:43:28.015Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "99fmit21e1c",
            "applicationId": "6xpei234inf",
            "description": "A legacy codebase that manages changes made to the product catalog, initiated from an internal UI. This has comparatively fewer users, and an existing codebase. Events are picked up from the legacy Postgres database using a CDC connector to push them into Kafka. The single-message transforms feature reformats the messages before they are made public. Images are saved to a distributed filesystem for access by the web tier.\n\n[GitHub source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["p8n6pp29jo4"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:42:59.850Z",
            "updatedTime": "2023-05-31T19:47:35.747Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "lk5vg6u1b4h",
            "applicationId": "95ax2yn5gud",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.2",
            "displayName": "",
            "declaredProducedEventVersionIds": ["r6wqtam6ula"],
            "declaredConsumedEventVersionIds": ["puqnkhe2ptq"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:00.135Z",
                    "updatedTime": "2023-05-31T19:43:00.135Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "gqmotk6vcrq",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "lk5vg6u1b4h",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "053p6456i2s",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:00.384Z",
            "updatedTime": "2023-05-31T19:43:00.659Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "06v3zz4vest",
            "applicationId": "95ax2yn5gud",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["zozna4h9q47"],
            "declaredConsumedEventVersionIds": ["cd3ov0nnesw"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:00.606Z",
                    "updatedTime": "2023-05-31T19:43:00.606Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "ej3inqi3p3v",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "06v3zz4vest",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "8c6612w805k",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:00.806Z",
            "updatedTime": "2023-05-31T19:43:01.066Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "v48q4irpeco",
            "applicationId": "95ax2yn5gud",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["zozna4h9q47"],
            "declaredConsumedEventVersionIds": ["cd3ov0nnesw"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "3",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:01.015Z",
                    "updatedTime": "2023-05-31T19:43:01.015Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "38f2xo1albz",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "v48q4irpeco",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "r9f5zsnffpx",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:01.243Z",
            "updatedTime": "2023-05-31T19:43:01.512Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "a1d163n0mg3",
            "applicationId": "95ax2yn5gud",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.3",
            "displayName": "",
            "declaredProducedEventVersionIds": ["zozna4h9q47"],
            "declaredConsumedEventVersionIds": ["cd3ov0nnesw"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:01.462Z",
                    "updatedTime": "2023-05-31T19:43:01.462Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "284feg1f7gb",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "a1d163n0mg3",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "o1besjmyav6",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:01.660Z",
            "updatedTime": "2023-05-31T19:43:01.922Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "9e76thojrr2",
            "applicationId": "95ax2yn5gud",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.2",
            "displayName": "",
            "declaredProducedEventVersionIds": ["zozna4h9q47"],
            "declaredConsumedEventVersionIds": ["cd3ov0nnesw"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:01.871Z",
                    "updatedTime": "2023-05-31T19:43:01.871Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "c5bwaaz2oip",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "9e76thojrr2",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "pcbnfs2w3a7",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:02.068Z",
            "updatedTime": "2023-05-31T19:43:02.339Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ntb0v30555n",
            "applicationId": "95ax2yn5gud",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["zozna4h9q47"],
            "declaredConsumedEventVersionIds": ["cd3ov0nnesw"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:02.285Z",
                    "updatedTime": "2023-05-31T19:43:02.285Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "awu76a9aeg5",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "ntb0v30555n",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "954npc24sf5",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:02.497Z",
            "updatedTime": "2023-05-31T19:43:02.758Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "qhmlbsxplwu",
            "applicationId": "95ax2yn5gud",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["zozna4h9q47"],
            "declaredConsumedEventVersionIds": ["cd3ov0nnesw"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:02.707Z",
                    "updatedTime": "2023-05-31T19:43:02.707Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "r1ecmg7kvu2",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "qhmlbsxplwu",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "72xg7fj7v0g",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:17.454Z",
            "updatedTime": "2023-05-31T19:46:51.781Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "epqiurv35zw",
            "applicationId": "bsxkyeq5qzh",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nPOST  adds Order, Payment and Customer information to the system returning when Kafka sends the appropriate acknowledgement.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["d2ii0o31gk8", "rodxdx8bj4t", "x5qr7rnsns3"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:17.692Z",
            "updatedTime": "2023-05-31T19:43:17.692Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "dl8c1ogbc5o",
            "applicationId": "bsxkyeq5qzh",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nPOST  adds Order, Payment and Customer information to the system returning when Kafka sends the appropriate acknowledgement.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["klk699flfil", "mlcooyeg7ia", "ximgv8bwt6o"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:17.936Z",
            "updatedTime": "2023-05-31T19:43:17.936Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "4fo0ixfwgst",
            "applicationId": "bsxkyeq5qzh",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nPOST  adds Order, Payment and Customer information to the system returning when Kafka sends the appropriate acknowledgement.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["klk699flfil", "mlcooyeg7ia", "ximgv8bwt6o"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:18.174Z",
            "updatedTime": "2023-05-31T19:43:18.174Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gct26wuc3fh",
            "applicationId": "bsxkyeq5qzh",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nPOST  adds Order, Payment and Customer information to the system returning when Kafka sends the appropriate acknowledgement.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["klk699flfil", "mlcooyeg7ia", "ximgv8bwt6o"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:28.241Z",
            "updatedTime": "2023-05-31T19:46:09.778Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5tkjczbij76",
            "applicationId": "ce8eumekjjd",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "1.0.2",
            "displayName": "",
            "declaredProducedEventVersionIds": ["pe5vt5m13jb", "puqnkhe2ptq"],
            "declaredConsumedEventVersionIds": ["pe5vt5m13jb", "x5qr7rnsns3"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:28.486Z",
                    "updatedTime": "2023-05-31T19:43:28.486Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "31x7boe506a",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "5tkjczbij76",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "12dhd7v5jve",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:28.722Z",
                    "updatedTime": "2023-05-31T19:43:28.722Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "0kxh2r0z8t9",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "5tkjczbij76",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "hbo01jbiko4",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:29.038Z",
            "updatedTime": "2023-05-31T19:43:29.690Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "iw0ab4ih2k2",
            "applicationId": "ce8eumekjjd",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["cd3ov0nnesw", "ea1f15casq6"],
            "declaredConsumedEventVersionIds": ["ea1f15casq6", "ximgv8bwt6o"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:29.345Z",
                    "updatedTime": "2023-05-31T19:43:29.345Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "u0eow6gu35e",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "iw0ab4ih2k2",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "4i4wyd38n91",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:29.584Z",
                    "updatedTime": "2023-05-31T19:43:29.584Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "bbr3juufnza",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "iw0ab4ih2k2",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "xgai3hg3a3m",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:29.883Z",
            "updatedTime": "2023-05-31T19:43:30.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "sabaztmatug",
            "applicationId": "ce8eumekjjd",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["cd3ov0nnesw", "ea1f15casq6"],
            "declaredConsumedEventVersionIds": ["ea1f15casq6", "ximgv8bwt6o"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "3",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:30.197Z",
                    "updatedTime": "2023-05-31T19:43:30.197Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "5xgn87v7gt1",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "sabaztmatug",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "55l5i7diauf",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:30.437Z",
                    "updatedTime": "2023-05-31T19:43:30.437Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "9vb0e9ztw0t",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "sabaztmatug",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "q1i9sl7te23",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:30.752Z",
            "updatedTime": "2023-05-31T19:43:31.353Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "6y5kyaw1xnw",
            "applicationId": "ce8eumekjjd",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["cd3ov0nnesw", "ea1f15casq6"],
            "declaredConsumedEventVersionIds": ["ea1f15casq6", "ximgv8bwt6o"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:31.006Z",
                    "updatedTime": "2023-05-31T19:43:31.006Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "khcjt2eevfw",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "6y5kyaw1xnw",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "3uetskrbkw7",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:31.244Z",
                    "updatedTime": "2023-05-31T19:43:31.244Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "jnewfcnr6bt",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "6y5kyaw1xnw",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "174n3d1sryr",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:31.545Z",
            "updatedTime": "2023-05-31T19:43:32.145Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ho44lrqo3a9",
            "applicationId": "ce8eumekjjd",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["cd3ov0nnesw", "ea1f15casq6"],
            "declaredConsumedEventVersionIds": ["ea1f15casq6", "ximgv8bwt6o"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:31.805Z",
                    "updatedTime": "2023-05-31T19:43:31.805Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "4ap1md195jc",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "ho44lrqo3a9",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "e5onab3x4ty",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:32.041Z",
                    "updatedTime": "2023-05-31T19:43:32.041Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "gx7suqy1xi9",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "ho44lrqo3a9",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "buuzg47d2ea",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:13.827Z",
            "updatedTime": "2023-05-31T19:47:45.775Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "v2s1en0bv4f",
            "applicationId": "f8efy4hdhge",
            "description": "A streaming service leveraging the Kafka Streams API. This service reacts to orders as they are created, updating the Shipping topic as notifications are received from the delivery company.\n\n[GitHub Source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["sjgeakgus64"],
            "declaredConsumedEventVersionIds": ["qdsdk4jgv8v", "rodxdx8bj4t"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:14.054Z",
                    "updatedTime": "2023-05-31T19:43:14.054Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "ge2i7ltohhs",
                    "name": "SHIPPING.CATALOGUE",
                    "applicationVersionId": "v2s1en0bv4f",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "cm6n6k86kdq",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:14.264Z",
                    "updatedTime": "2023-05-31T19:43:14.264Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "r72d7ysw8cn",
                    "name": "SHIPPING.CUSTOMERS",
                    "applicationVersionId": "v2s1en0bv4f",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "b35eirlrgdp",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:14.523Z",
            "updatedTime": "2023-05-31T19:43:14.997Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "b1fzeqi1glk",
            "applicationId": "f8efy4hdhge",
            "description": "A streaming service leveraging the Kafka Streams API. This service reacts to orders as they are created, updating the Shipping topic as notifications are received from the delivery company.",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["73n2iftnv2a"],
            "declaredConsumedEventVersionIds": ["mlcooyeg7ia", "p8n6pp29jo4"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:14.757Z",
                    "updatedTime": "2023-05-31T19:43:14.757Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "huz2opa7rjt",
                    "name": "SHIPPING.CATALOGUE",
                    "applicationVersionId": "b1fzeqi1glk",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "s4b2h9kw14c",
                            "subscriptionType": "topic",
                            "value": "CATALOGUE",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:14.935Z",
                    "updatedTime": "2023-05-31T19:43:14.935Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "th7r6vy4na6",
                    "name": "SHIPPING.CUSTOMERS",
                    "applicationVersionId": "b1fzeqi1glk",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "5go2gbx8ea6",
                            "subscriptionType": "topic",
                            "value": "CUSTOMERS",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:21.776Z",
            "updatedTime": "2023-05-31T19:46:32.775Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "9a1h19erdgc",
            "applicationId": "ouqx1q2aoa8",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["8j6sahex9dy", "rodxdx8bj4t"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:22.021Z",
                    "updatedTime": "2023-05-31T19:43:22.021Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "9cuu0ihaj59",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "9a1h19erdgc",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "c57ekrvmtvi",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:22.242Z",
                    "updatedTime": "2023-05-31T19:43:22.242Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "fda8cdtet0n",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "9a1h19erdgc",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "43psle74647",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:22.600Z",
            "updatedTime": "2023-05-31T19:43:23.274Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "99y67ns6abs",
            "applicationId": "ouqx1q2aoa8",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["mlcooyeg7ia", "vs7c1ixldb8"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:22.923Z",
                    "updatedTime": "2023-05-31T19:43:22.923Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "bg85agidnck",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "99y67ns6abs",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ha49m6d2ll4",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:23.165Z",
                    "updatedTime": "2023-05-31T19:43:23.165Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "1yn9i2iobh7",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "99y67ns6abs",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "kvfs4n1aivc",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:23.455Z",
            "updatedTime": "2023-05-31T19:43:24.043Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "1xric6s1tyv",
            "applicationId": "ouqx1q2aoa8",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["mlcooyeg7ia", "vs7c1ixldb8"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:23.708Z",
                    "updatedTime": "2023-05-31T19:43:23.708Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "e87lauidhlc",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "1xric6s1tyv",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ry5favqs1mw",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:23.937Z",
                    "updatedTime": "2023-05-31T19:43:23.937Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "n3yzzwpiub3",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "1xric6s1tyv",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "y5zdyh6xxxo",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:24.227Z",
            "updatedTime": "2023-05-31T19:43:24.807Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "puksgqdp3sm",
            "applicationId": "ouqx1q2aoa8",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["mlcooyeg7ia", "vs7c1ixldb8"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:24.473Z",
                    "updatedTime": "2023-05-31T19:43:24.473Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "gbe5y3c41is",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "puksgqdp3sm",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "s5i67nj2go5",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:24.702Z",
                    "updatedTime": "2023-05-31T19:43:24.702Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "2s5p8meb789",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "puksgqdp3sm",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "967f6d58fs1",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:25.013Z",
            "updatedTime": "2023-05-31T19:43:25.612Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "vq3hikjiiic",
            "applicationId": "ouqx1q2aoa8",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.2",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["mlcooyeg7ia", "vs7c1ixldb8"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:25.283Z",
                    "updatedTime": "2023-05-31T19:43:25.283Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "9m13ofe4ill",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "vq3hikjiiic",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "wqo41dvi9zl",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:25.507Z",
                    "updatedTime": "2023-05-31T19:43:25.507Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "7m3znh22l1u",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "vq3hikjiiic",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "0m44ay6drfx",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:25.795Z",
            "updatedTime": "2023-05-31T19:43:26.362Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jtycqc8o457",
            "applicationId": "ouqx1q2aoa8",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["mlcooyeg7ia", "vs7c1ixldb8"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:26.039Z",
                    "updatedTime": "2023-05-31T19:43:26.039Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "m3mwage66bf",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "jtycqc8o457",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "fh4bwxygf81",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:26.262Z",
                    "updatedTime": "2023-05-31T19:43:26.262Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "egkz0b3io68",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "jtycqc8o457",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "2ankgr5m3gw",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:26.545Z",
            "updatedTime": "2023-05-31T19:43:27.120Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "880ocq5pl0e",
            "applicationId": "ouqx1q2aoa8",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["mlcooyeg7ia", "vs7c1ixldb8"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:26.797Z",
                    "updatedTime": "2023-05-31T19:43:26.797Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "9awobayknl2",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "880ocq5pl0e",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "gf9fvi4wnjd",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:27.018Z",
                    "updatedTime": "2023-05-31T19:43:27.018Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "4pquhjru0hi",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "880ocq5pl0e",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "obe47qvgfgt",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:47:20.436Z",
            "updatedTime": "2023-05-31T19:47:24.674Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "uj9d5llhcib",
            "applicationId": "qthmuh73ye0",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nGET returns requested order, blocking for timeout if no id present.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.3",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["r6wqtam6ula"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:47:20.763Z",
                    "updatedTime": "2023-05-31T19:47:20.763Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "37ahe1toobh",
                    "name": "ORDERSVIEW.ORDERVALIDATED",
                    "applicationVersionId": "uj9d5llhcib",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "c3i4d213iy4",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:42:58.205Z",
            "updatedTime": "2023-05-31T19:47:03.966Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0036gradt1i",
            "applicationId": "qthmuh73ye0",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nGET returns requested order, blocking for timeout if no id present.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.2",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["r6wqtam6ula"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "3",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:42:58.424Z",
                    "updatedTime": "2023-05-31T19:42:58.424Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "ihjh8uy1xyc",
                    "name": "ORDERSVIEW.ORDERVALIDATED",
                    "applicationVersionId": "0036gradt1i",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "v52rxc8wber",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:42:58.649Z",
            "updatedTime": "2023-05-31T19:47:29.372Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "69ee1au5x0u",
            "applicationId": "qthmuh73ye0",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nGET returns requested order, blocking for timeout if no id present.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["zozna4h9q47"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "3",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:42:58.891Z",
                    "updatedTime": "2023-05-31T19:42:58.891Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "uq46955bk5a",
                    "name": "ORDERSVIEW.ORDERVALIDATED",
                    "applicationVersionId": "69ee1au5x0u",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "hljeyk0amhw",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:42:59.088Z",
            "updatedTime": "2023-05-31T19:42:59.333Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "af4v2pf6n60",
            "applicationId": "qthmuh73ye0",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nGET returns requested order, blocking for timeout if no id present.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["zozna4h9q47"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:42:59.283Z",
                    "updatedTime": "2023-05-31T19:42:59.283Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "0avfb0on2db",
                    "name": "ORDERSVIEW.ORDERVALIDATED",
                    "applicationVersionId": "af4v2pf6n60",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "gh67dlu3lwn",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:42:59.475Z",
            "updatedTime": "2023-05-31T19:42:59.711Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "iz9gc0ezini",
            "applicationId": "qthmuh73ye0",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nGET returns requested order, blocking for timeout if no id present.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["zozna4h9q47"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:42:59.662Z",
                    "updatedTime": "2023-05-31T19:42:59.662Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "g1m4r10t2b9",
                    "name": "ORDERSVIEW.ORDERVALIDATED",
                    "applicationVersionId": "iz9gc0ezini",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "0s8hv2yfuba",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:05.376Z",
            "updatedTime": "2023-05-31T19:46:43.252Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "h2jnhni0hdc",
            "applicationId": "tz2eafpw8jn",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["pe5vt5m13jb", "qdsdk4jgv8v"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:05.591Z",
                    "updatedTime": "2023-05-31T19:43:05.591Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "076svafra82",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "h2jnhni0hdc",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "79kz8fdqc1o",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:05.778Z",
                    "updatedTime": "2023-05-31T19:43:05.778Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "oj55499orlk",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "h2jnhni0hdc",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "yce1sd4roef",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:06.016Z",
            "updatedTime": "2023-05-31T19:43:06.505Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "pidvje9hfmg",
            "applicationId": "tz2eafpw8jn",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["ea1f15casq6", "p8n6pp29jo4"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:06.220Z",
                    "updatedTime": "2023-05-31T19:43:06.220Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "ke05os9ut59",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "pidvje9hfmg",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "1th3bzw2dut",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:06.414Z",
                    "updatedTime": "2023-05-31T19:43:06.414Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "eeryt2in5fo",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "pidvje9hfmg",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ibpjgf37k1f",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:06.656Z",
            "updatedTime": "2023-05-31T19:43:07.134Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "3zi2r6qbkqm",
            "applicationId": "tz2eafpw8jn",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["ea1f15casq6", "p8n6pp29jo4"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:06.861Z",
                    "updatedTime": "2023-05-31T19:43:06.861Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "qe1keej1g9t",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "3zi2r6qbkqm",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "syciadj1v74",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:07.050Z",
                    "updatedTime": "2023-05-31T19:43:07.050Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "pzfyfoel940",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "3zi2r6qbkqm",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ml50i55iuic",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:07.287Z",
            "updatedTime": "2023-05-31T19:43:07.752Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "81pabq7zmy3",
            "applicationId": "tz2eafpw8jn",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.2",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["ea1f15casq6", "p8n6pp29jo4"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:07.484Z",
                    "updatedTime": "2023-05-31T19:43:07.484Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "8uzajfr1abh",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "81pabq7zmy3",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "7jesh74cmy1",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:07.670Z",
                    "updatedTime": "2023-05-31T19:43:07.670Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "nwaf0wd6vm8",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "81pabq7zmy3",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "zz391ny0jtl",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:07.905Z",
            "updatedTime": "2023-05-31T19:43:08.382Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "s6tjm9v3456",
            "applicationId": "tz2eafpw8jn",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["ea1f15casq6", "p8n6pp29jo4"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:08.103Z",
                    "updatedTime": "2023-05-31T19:43:08.103Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "o19zby213e3",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "s6tjm9v3456",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ebbbgu1vtf8",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:08.299Z",
                    "updatedTime": "2023-05-31T19:43:08.299Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "fqberwt7lca",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "s6tjm9v3456",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "8olvqdhjm8v",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:08.536Z",
            "updatedTime": "2023-05-31T19:43:09.019Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "6jjhzu8y3aj",
            "applicationId": "tz2eafpw8jn",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["ea1f15casq6", "p8n6pp29jo4"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:08.736Z",
                    "updatedTime": "2023-05-31T19:43:08.736Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "7egg7vxdfpp",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "6jjhzu8y3aj",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "amac4v928xu",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:08.931Z",
                    "updatedTime": "2023-05-31T19:43:08.931Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "76jimzekwy1",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "6jjhzu8y3aj",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "4bdj071wn0d",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:02.904Z",
            "updatedTime": "2023-05-31T19:46:47.533Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "wfvbn0aqk04",
            "applicationId": "uwiuuaojbjq",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "3.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["qdsdk4jgv8v"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:03.091Z",
                    "updatedTime": "2023-05-31T19:43:03.091Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "rd6o2x8i4g9",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "wfvbn0aqk04",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ah4hvh6fh35",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:03.292Z",
            "updatedTime": "2023-05-31T19:43:03.535Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "s91ad1atlag",
            "applicationId": "uwiuuaojbjq",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "3.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["p8n6pp29jo4"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:03.482Z",
                    "updatedTime": "2023-05-31T19:43:03.482Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "e73cpxu9kvz",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "s91ad1atlag",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "4euoob8nii2",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:03.688Z",
            "updatedTime": "2023-05-31T19:43:03.931Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "iw5685q778g",
            "applicationId": "uwiuuaojbjq",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["p8n6pp29jo4"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:03.879Z",
                    "updatedTime": "2023-05-31T19:43:03.879Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "0buhera38ex",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "iw5685q778g",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "5kwwx6hcsl7",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:04.104Z",
            "updatedTime": "2023-05-31T19:43:04.392Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "sfe82slc6h5",
            "applicationId": "uwiuuaojbjq",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["p8n6pp29jo4"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:04.341Z",
                    "updatedTime": "2023-05-31T19:43:04.341Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "ic9iik7xssc",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "sfe82slc6h5",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "gfs1aaxl42b",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:04.548Z",
            "updatedTime": "2023-05-31T19:43:04.804Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7brhldnyyia",
            "applicationId": "uwiuuaojbjq",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["p8n6pp29jo4"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:04.752Z",
                    "updatedTime": "2023-05-31T19:43:04.752Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "cm5eoz3vqcv",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "7brhldnyyia",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "n9gkx5hkqzh",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:04.972Z",
            "updatedTime": "2023-05-31T19:43:05.219Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "n4k894hvr06",
            "applicationId": "uwiuuaojbjq",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["p8n6pp29jo4"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:05.169Z",
                    "updatedTime": "2023-05-31T19:43:05.169Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "x6azukoh40p",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "n4k894hvr06",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "rh4ntbtnm66",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:09.188Z",
            "updatedTime": "2023-05-31T19:45:57.564Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "t5ia375dq2j",
            "applicationId": "vw27un1dkmc",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "1.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["d2ii0o31gk8", "rodxdx8bj4t", "x5qr7rnsns3"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:09.400Z",
                    "updatedTime": "2023-05-31T19:43:09.400Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "7tc7h6r418b",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "t5ia375dq2j",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ldr77fewah7",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:09.593Z",
                    "updatedTime": "2023-05-31T19:43:09.593Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "ux0hpvp6h13",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "t5ia375dq2j",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "9lkl6fperw5",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:09.834Z",
                    "updatedTime": "2023-05-31T19:43:09.834Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "dy2uffl29x6",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "t5ia375dq2j",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "cyk85hg2f26",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:10.092Z",
            "updatedTime": "2023-05-31T19:43:10.906Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "k2ihqiipghg",
            "applicationId": "vw27un1dkmc",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["klk699flfil", "mlcooyeg7ia", "ximgv8bwt6o"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:10.308Z",
                    "updatedTime": "2023-05-31T19:43:10.308Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "c0smn4d5n2t",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "k2ihqiipghg",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "9lr7uq3chkt",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:10.509Z",
                    "updatedTime": "2023-05-31T19:43:10.509Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "oh8qvi11gvd",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "k2ihqiipghg",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "03vp5203qp8",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:10.804Z",
                    "updatedTime": "2023-05-31T19:43:10.804Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "3uvjmb6z59w",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "k2ihqiipghg",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "3c67inw2n18",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:11.070Z",
            "updatedTime": "2023-05-31T19:43:11.816Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ie1wcfjgj1e",
            "applicationId": "vw27un1dkmc",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["klk699flfil", "mlcooyeg7ia", "ximgv8bwt6o"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:11.283Z",
                    "updatedTime": "2023-05-31T19:43:11.283Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "fxed95c6hjk",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "ie1wcfjgj1e",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "2hlnn977gx3",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:11.474Z",
                    "updatedTime": "2023-05-31T19:43:11.474Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "mq8x5p9w5l3",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "ie1wcfjgj1e",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "b2drn4owf9e",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:11.719Z",
                    "updatedTime": "2023-05-31T19:43:11.719Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "1endjvcgt9q",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "ie1wcfjgj1e",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "f8fhnd771q1",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:11.985Z",
            "updatedTime": "2023-05-31T19:43:12.744Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "irc7oa4it0q",
            "applicationId": "vw27un1dkmc",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["klk699flfil", "mlcooyeg7ia", "ximgv8bwt6o"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:12.202Z",
                    "updatedTime": "2023-05-31T19:43:12.202Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "f7jg8n4jtol",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "irc7oa4it0q",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "w7jcfyjrajv",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:12.399Z",
                    "updatedTime": "2023-05-31T19:43:12.399Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "oge69d3k9jg",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "irc7oa4it0q",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "gd30b8o0m99",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:12.644Z",
                    "updatedTime": "2023-05-31T19:43:12.644Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "y4ps7bkx45k",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "irc7oa4it0q",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "rs4te1laebk",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:12.907Z",
            "updatedTime": "2023-05-31T19:43:13.669Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0k1b4g8ajp1",
            "applicationId": "vw27un1dkmc",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["klk699flfil", "mlcooyeg7ia", "ximgv8bwt6o"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:13.113Z",
                    "updatedTime": "2023-05-31T19:43:13.113Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "egoc3vsbblz",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "0k1b4g8ajp1",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "gz7067cp8sv",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:13.328Z",
                    "updatedTime": "2023-05-31T19:43:13.328Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "y7b58feiu6k",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "0k1b4g8ajp1",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "2f809ziext4",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-05-31T19:43:13.573Z",
                    "updatedTime": "2023-05-31T19:43:13.573Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "6ybf3nh9otc",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "0k1b4g8ajp1",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "wayazkiime2",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:18.420Z",
            "updatedTime": "2023-05-31T19:43:18.708Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "6vqhn2vz164",
            "applicationId": "wb6iac7phv6",
            "description": "This service searches for potentially fraudulent transactions by calculating the total value of orders for a customer within a time period, then checks to see if this is over a configured limit. \n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/FraudService.java)",
            "version": "1.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["puqnkhe2ptq"],
            "declaredConsumedEventVersionIds": ["x5qr7rnsns3"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "1",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:18.651Z",
                    "updatedTime": "2023-05-31T19:43:18.651Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "s9cfm63iroo",
                    "name": "FRAUD.ORDERCREATED",
                    "applicationVersionId": "6vqhn2vz164",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "fj7blz2uff9",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:18.887Z",
            "updatedTime": "2023-05-31T19:43:19.169Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "oofd013c9sj",
            "applicationId": "wb6iac7phv6",
            "description": "This service searches for potentially fraudulent transactions by calculating the total value of orders for a customer within a time period, then checks to see if this is over a configured limit. \n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/FraudService.java)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["cd3ov0nnesw"],
            "declaredConsumedEventVersionIds": ["ximgv8bwt6o"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:19.114Z",
                    "updatedTime": "2023-05-31T19:43:19.114Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "vmbgvi4f6bo",
                    "name": "FRAUD.ORDERCREATED",
                    "applicationVersionId": "oofd013c9sj",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "o2kseotepwu",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:19.351Z",
            "updatedTime": "2023-05-31T19:43:19.683Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gwcrdx6yb1d",
            "applicationId": "wb6iac7phv6",
            "description": "This service searches for potentially fraudulent transactions by calculating the total value of orders for a customer within a time period, then checks to see if this is over a configured limit. \n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/FraudService.java)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["cd3ov0nnesw"],
            "declaredConsumedEventVersionIds": ["ximgv8bwt6o"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:19.624Z",
                    "updatedTime": "2023-05-31T19:43:19.624Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "9np1n66bvk2",
                    "name": "FRAUD.ORDERCREATED",
                    "applicationVersionId": "gwcrdx6yb1d",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "dwrbi2b5gem",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-05-31T19:43:19.863Z",
            "updatedTime": "2023-05-31T19:43:20.157Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "i9b7y5e69nq",
            "applicationId": "wb6iac7phv6",
            "description": "This service searches for potentially fraudulent transactions by calculating the total value of orders for a customer within a time period, then checks to see if this is over a configured limit. \n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/FraudService.java)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["cd3ov0nnesw"],
            "declaredConsumedEventVersionIds": ["ximgv8bwt6o"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-05-31T19:43:20.099Z",
                    "updatedTime": "2023-05-31T19:43:20.099Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "38k550a4d7e",
                    "name": "FRAUD.ORDERCREATED",
                    "applicationVersionId": "i9b7y5e69nq",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "9ccjc3ke5gk",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }
    ],
    "events": [{
            "createdTime": "2023-05-31T19:42:49.830Z",
            "updatedTime": "2023-05-31T19:45:10.396Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "hrxotg4p2w3",
            "name": "Basket",
            "shared": false,
            "applicationDomainId": "v8r9hyl6xmu",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "nie0ibn8fa8",
                    "customAttributeDefinitionName": "confidential",
                    "value": "false"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "2": 3,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-31T19:42:49.831Z",
            "updatedTime": "2023-05-31T19:44:25.405Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gmruaud2cz7",
            "name": "Catalogue",
            "shared": true,
            "applicationDomainId": "5inu9z9e7al",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "nie0ibn8fa8",
                    "customAttributeDefinitionName": "confidential",
                    "value": "false"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-31T19:42:49.831Z",
            "updatedTime": "2023-05-31T19:45:15.320Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "dg0joehd80b",
            "name": "Customer",
            "shared": true,
            "applicationDomainId": "v8r9hyl6xmu",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "nie0ibn8fa8",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 4
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-31T19:42:49.831Z",
            "updatedTime": "2023-05-31T19:45:19.927Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "eq0jggr3mq7",
            "name": "Order Created",
            "shared": true,
            "applicationDomainId": "v8r9hyl6xmu",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "nie0ibn8fa8",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-31T19:42:49.831Z",
            "updatedTime": "2023-05-31T19:45:25.078Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "6k3wf84um4b",
            "name": "Order Updated",
            "shared": true,
            "applicationDomainId": "v8r9hyl6xmu",
            "numberOfVersions": 4,
            "customAttributes": [{
                    "customAttributeDefinitionId": "nie0ibn8fa8",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 2
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-31T19:42:49.831Z",
            "updatedTime": "2023-05-31T19:45:30.633Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ah15rtmgn01",
            "name": "Order Validated",
            "shared": false,
            "applicationDomainId": "v8r9hyl6xmu",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "nie0ibn8fa8",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-31T19:42:49.831Z",
            "updatedTime": "2023-05-31T19:45:35.859Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "k6kjx1p9kyi",
            "name": "Payment",
            "shared": true,
            "applicationDomainId": "v8r9hyl6xmu",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "nie0ibn8fa8",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 4
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-31T19:42:49.831Z",
            "updatedTime": "2023-05-31T19:45:51.039Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0g6g3gdh3ta",
            "name": "Shipping",
            "shared": false,
            "applicationDomainId": "wwuh6eshak7",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "nie0ibn8fa8",
                    "customAttributeDefinitionName": "confidential",
                    "value": "false"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-05-31T19:42:49.831Z",
            "updatedTime": "2023-05-31T19:44:03.458Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "r1tv72wxcs0",
            "name": "Warehouse Inventory",
            "shared": true,
            "applicationDomainId": "7ruyh8oib6n",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "nie0ibn8fa8",
                    "customAttributeDefinitionName": "confidential",
                    "value": "false"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 3
                }
            },
            "type": "event"
        }
    ],
    "eventVersions": [{
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:45:51.039Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "sjgeakgus64",
            "eventId": "0g6g3gdh3ta",
            "description": "Changes in the shipping status of ordered items as they move out of the warehouse to home delivery.",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "2p6rhhh6hi5",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "shipping",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "onoxf6ovc6j",
            "eventId": "0g6g3gdh3ta",
            "description": "Changes in the shipping status of ordered items as they move out of the warehouse to home delivery.",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "685a7ma9xha",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "shipping",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "9zlinkj64dl",
            "eventId": "0g6g3gdh3ta",
            "description": "Changes in the shipping status of ordered items as they move out of the warehouse to home delivery.",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "685a7ma9xha",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "shipping",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "2idn80hokkj",
            "eventId": "0g6g3gdh3ta",
            "description": "Changes in the shipping status of ordered items as they move out of the warehouse to home delivery.",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "685a7ma9xha",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "shipping",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "73n2iftnv2a",
            "eventId": "0g6g3gdh3ta",
            "description": "Changes in the shipping status of ordered items.",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "685a7ma9xha",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "SHIPPING",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:45:25.078Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "puqnkhe2ptq",
            "eventId": "6k3wf84um4b",
            "description": "As the order moves through the fulfillment process, each service add to this topic to show current state.",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "8rdoskmlr20",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "order-validations",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "qrj4au1qyyt",
            "eventId": "6k3wf84um4b",
            "description": "As the order moves through the fulfillment process, each service add to this topic to show current state.",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "u61ik3x447k",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "order-validations",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "521m9f16567",
            "eventId": "6k3wf84um4b",
            "description": "As the order moves through the fulfillment process, each service add to this topic to show current state.",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "u61ik3x447k",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "order-validations",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "cd3ov0nnesw",
            "eventId": "6k3wf84um4b",
            "description": "As the order moves through the fulfillment process, each service add to this topic to show current state.",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "u61ik3x447k",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "order-validations",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:45:30.633Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "r6wqtam6ula",
            "eventId": "ah15rtmgn01",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "1.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "r99bicit21s",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "yxkhg3puf16",
            "eventId": "ah15rtmgn01",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "g2iwbl023yd",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "je4z98kcmv5",
            "eventId": "ah15rtmgn01",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "g2iwbl023yd",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jlns97anrmy",
            "eventId": "ah15rtmgn01",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "0.2.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "g2iwbl023yd",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "zozna4h9q47",
            "eventId": "ah15rtmgn01",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "g2iwbl023yd",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:45:15.320Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "rodxdx8bj4t",
            "eventId": "dg0joehd80b",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "2.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "n5f0hgrivsa",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "8gpe5u3s5nd",
            "eventId": "dg0joehd80b",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "2.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "qwdjlusllja",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "977y2rzu911",
            "eventId": "dg0joehd80b",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "0.2.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "qwdjlusllja",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "oh8uejrv1g0",
            "eventId": "dg0joehd80b",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "qwdjlusllja",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "lanf1z6v3da",
            "eventId": "dg0joehd80b",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "qwdjlusllja",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "mlcooyeg7ia",
            "eventId": "dg0joehd80b",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "qwdjlusllja",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:45:19.927Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "x5qr7rnsns3",
            "eventId": "eq0jggr3mq7",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "2.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "4bcfsu6a63j",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "24lw8a1yztj",
            "eventId": "eq0jggr3mq7",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "2.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "iohurf014kj",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "oxe5zhy9fd7",
            "eventId": "eq0jggr3mq7",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "0.2.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "iohurf014kj",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "a69e99mi96w",
            "eventId": "eq0jggr3mq7",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "0.2.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "iohurf014kj",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ximgv8bwt6o",
            "eventId": "eq0jggr3mq7",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "iohurf014kj",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:44:25.405Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "qdsdk4jgv8v",
            "eventId": "gmruaud2cz7",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "9m1d03wk5x2",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gigca0m8e0s",
            "eventId": "gmruaud2cz7",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "zmo3d6tgn8t",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "yd34exohxyb",
            "eventId": "gmruaud2cz7",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "zmo3d6tgn8t",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "75611cjjqmw",
            "eventId": "gmruaud2cz7",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "zmo3d6tgn8t",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "p8n6pp29jo4",
            "eventId": "gmruaud2cz7",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "zmo3d6tgn8t",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:45:10.396Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "8j6sahex9dy",
            "eventId": "hrxotg4p2w3",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "1.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "rohaai0vx9a",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7s4c50zni9e",
            "eventId": "hrxotg4p2w3",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "pt89rlel8h8",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "bq9wy72v6jz",
            "eventId": "hrxotg4p2w3",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "pt89rlel8h8",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "3aaxsamp9ni",
            "eventId": "hrxotg4p2w3",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "pt89rlel8h8",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "wi775d48yt0",
            "eventId": "hrxotg4p2w3",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "pt89rlel8h8",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "vs7c1ixldb8",
            "eventId": "hrxotg4p2w3",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "pt89rlel8h8",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:45:35.859Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "d2ii0o31gk8",
            "eventId": "k6kjx1p9kyi",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "1.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "4jw028fieis",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "v9pwd5x7lfx",
            "eventId": "k6kjx1p9kyi",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "o8glmo91mdy",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "oh7jygkl88a",
            "eventId": "k6kjx1p9kyi",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "0.1.3",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "o8glmo91mdy",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "n6lwg9zj0qp",
            "eventId": "k6kjx1p9kyi",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "o8glmo91mdy",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "weogp3bv2np",
            "eventId": "k6kjx1p9kyi",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "o8glmo91mdy",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "klk699flfil",
            "eventId": "k6kjx1p9kyi",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "o8glmo91mdy",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:44:03.458Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "pe5vt5m13jb",
            "eventId": "r1tv72wxcs0",
            "description": "Current stock levels for items in the warehouse",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "xx7rrg7c9ht",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0jsemrcqca5",
            "eventId": "r1tv72wxcs0",
            "description": "Current stock levels for items in the warehouse",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "cteyadea8rx",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "548q886xv6r",
            "eventId": "r1tv72wxcs0",
            "description": "Current stock levels for items in the warehouse",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "cteyadea8rx",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ahkblfv0z1u",
            "eventId": "r1tv72wxcs0",
            "description": "Current stock levels for items in the warehouse",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "cteyadea8rx",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-05-31T19:42:56.071Z",
            "updatedTime": "2023-05-31T19:42:56.071Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ea1f15casq6",
            "eventId": "r1tv72wxcs0",
            "description": "Current stock levels for items in the warehouse",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "cteyadea8rx",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }
    ],
    "schemas": [{
            "createdTime": "2023-05-31T19:42:49.649Z",
            "updatedTime": "2023-05-31T19:44:34.740Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "1fe5tn6284x",
            "applicationDomainId": "v8r9hyl6xmu",
            "name": "Basket",
            "shared": false,
            "schemaType": "avro",
            "numberOfVersions": 7,
            "eventVersionRefCount": 6,
            "stats": {
                "versionCountByStateId": {
                    "2": 3,
                    "3": 4
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-31T19:42:49.668Z",
            "updatedTime": "2023-05-31T19:44:14.501Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "6jqwyub2zos",
            "applicationDomainId": "5inu9z9e7al",
            "name": "Catalog",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 8,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "2": 1,
                    "3": 7
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-31T19:42:49.690Z",
            "updatedTime": "2023-05-31T19:44:41.408Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "z1g2acoxaaa",
            "applicationDomainId": "v8r9hyl6xmu",
            "name": "Customer",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 8,
            "eventVersionRefCount": 6,
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 6
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-31T19:42:49.711Z",
            "updatedTime": "2023-05-31T19:44:46.425Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "vo17amlsx82",
            "applicationDomainId": "v8r9hyl6xmu",
            "name": "Enriched Order",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 6,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 4
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-31T19:42:49.732Z",
            "updatedTime": "2023-05-31T19:43:54.625Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "zj4e0hbrx5j",
            "applicationDomainId": "7ruyh8oib6n",
            "name": "Inventory",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 6,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 4
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-31T19:42:49.751Z",
            "updatedTime": "2023-05-31T19:44:51.503Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "uid41gssjfp",
            "applicationDomainId": "v8r9hyl6xmu",
            "name": "Order",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 8,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 6
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-31T19:42:49.771Z",
            "updatedTime": "2023-05-31T19:44:58.285Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jb18j1l6ylj",
            "applicationDomainId": "v8r9hyl6xmu",
            "name": "Order Validation",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 7,
            "eventVersionRefCount": 4,
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 5
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-31T19:42:49.791Z",
            "updatedTime": "2023-05-31T19:45:03.481Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "viv69jxp6f2",
            "applicationDomainId": "v8r9hyl6xmu",
            "name": "Payment",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 5,
            "eventVersionRefCount": 6,
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 3
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-05-31T19:42:49.811Z",
            "updatedTime": "2023-05-31T19:45:44.745Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "v7ynpdgvmtt",
            "applicationDomainId": "wwuh6eshak7",
            "name": "Shipping",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 5,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 1,
                    "4": 2
                }
            },
            "customAttributes": [],
            "type": "schema"
        }
    ],
    "schemaVersions": [{
            "createdTime": "2023-05-31T19:42:50.279Z",
            "updatedTime": "2023-05-31T19:44:58.285Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "8rdoskmlr20",
            "schemaId": "jb18j1l6ylj",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "3.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:50.338Z",
            "updatedTime": "2023-05-31T19:42:50.338Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ouxhq8mqqzw",
            "schemaId": "jb18j1l6ylj",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "3.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:50.398Z",
            "updatedTime": "2023-05-31T19:44:41.408Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "n5f0hgrivsa",
            "schemaId": "z1g2acoxaaa",
            "description": "Represents a customer of the store ",
            "version": "2.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:50.460Z",
            "updatedTime": "2023-05-31T19:42:50.460Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "3wae82h3g78",
            "schemaId": "jb18j1l6ylj",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "2.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:50.527Z",
            "updatedTime": "2023-05-31T19:42:50.527Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "d6w9pnkauef",
            "schemaId": "z1g2acoxaaa",
            "description": "Represents a customer of the store ",
            "version": "2.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:50.589Z",
            "updatedTime": "2023-05-31T19:44:34.740Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "rohaai0vx9a",
            "schemaId": "1fe5tn6284x",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "1.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:50.658Z",
            "updatedTime": "2023-05-31T19:43:54.625Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "xx7rrg7c9ht",
            "schemaId": "zj4e0hbrx5j",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "1.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:50.726Z",
            "updatedTime": "2023-05-31T19:45:03.481Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "4jw028fieis",
            "schemaId": "viv69jxp6f2",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "1.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:50.798Z",
            "updatedTime": "2023-05-31T19:42:50.798Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "fe74rienn8b",
            "schemaId": "1fe5tn6284x",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "1.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:50.875Z",
            "updatedTime": "2023-05-31T19:42:50.875Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "oa0pegyzmmw",
            "schemaId": "zj4e0hbrx5j",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "1.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:51.042Z",
            "updatedTime": "2023-05-31T19:44:14.501Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "9m1d03wk5x2",
            "schemaId": "6jqwyub2zos",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "1.0.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:50.963Z",
            "updatedTime": "2023-05-31T19:42:50.963Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ljrzi5de5fs",
            "schemaId": "z1g2acoxaaa",
            "description": "Represents a customer of the store ",
            "version": "1.0.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:51.119Z",
            "updatedTime": "2023-05-31T19:44:46.425Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "r99bicit21s",
            "schemaId": "vo17amlsx82",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "1.0.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:51.192Z",
            "updatedTime": "2023-05-31T19:42:51.192Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "10dx31a7xpu",
            "schemaId": "vo17amlsx82",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "1.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:51.273Z",
            "updatedTime": "2023-05-31T19:45:44.745Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "2p6rhhh6hi5",
            "schemaId": "v7ynpdgvmtt",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "1.0.1",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:51.421Z",
            "updatedTime": "2023-05-31T19:44:51.503Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "4bcfsu6a63j",
            "schemaId": "uid41gssjfp",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "1.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:51.502Z",
            "updatedTime": "2023-05-31T19:42:51.502Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ft9gmhsgdph",
            "schemaId": "z1g2acoxaaa",
            "description": "Represents a customer of the store ",
            "version": "1.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:51.346Z",
            "updatedTime": "2023-05-31T19:42:51.346Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gr0ajhng8yg",
            "schemaId": "6jqwyub2zos",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "1.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:51.593Z",
            "updatedTime": "2023-05-31T19:42:51.593Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "24u8au6brf7",
            "schemaId": "z1g2acoxaaa",
            "description": "Represents a customer of the store ",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:52.038Z",
            "updatedTime": "2023-05-31T19:42:52.038Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "3g43zqoooj1",
            "schemaId": "6jqwyub2zos",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:51.677Z",
            "updatedTime": "2023-05-31T19:42:51.677Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "4u993oikl97",
            "schemaId": "uid41gssjfp",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:51.933Z",
            "updatedTime": "2023-05-31T19:42:51.933Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "8s9b5uh021d",
            "schemaId": "1fe5tn6284x",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:52.239Z",
            "updatedTime": "2023-05-31T19:42:52.239Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "rv6e4snat9d",
            "schemaId": "v7ynpdgvmtt",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:52.131Z",
            "updatedTime": "2023-05-31T19:42:52.131Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ttapkx6d370",
            "schemaId": "viv69jxp6f2",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:51.844Z",
            "updatedTime": "2023-05-31T19:42:51.844Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "v7xmcraqc4c",
            "schemaId": "vo17amlsx82",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:51.760Z",
            "updatedTime": "2023-05-31T19:42:51.760Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "xydivmsjqib",
            "schemaId": "jb18j1l6ylj",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:52.345Z",
            "updatedTime": "2023-05-31T19:42:52.345Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "yhjhm9iahg3",
            "schemaId": "zj4e0hbrx5j",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:52.433Z",
            "updatedTime": "2023-05-31T19:42:52.433Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "udyc6dcb0sg",
            "schemaId": "uid41gssjfp",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.3.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:52.612Z",
            "updatedTime": "2023-05-31T19:42:52.612Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "h7lqgmddyi4",
            "schemaId": "6jqwyub2zos",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.3.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:52.523Z",
            "updatedTime": "2023-05-31T19:42:52.523Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ib6ma2xuvg0",
            "schemaId": "uid41gssjfp",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.3.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:52.700Z",
            "updatedTime": "2023-05-31T19:42:52.700Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jdhwilvmys2",
            "schemaId": "vo17amlsx82",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "0.2.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:53.018Z",
            "updatedTime": "2023-05-31T19:42:53.018Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "1bj1mhxlahh",
            "schemaId": "z1g2acoxaaa",
            "description": "Represents a customer of the store ",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:53.100Z",
            "updatedTime": "2023-05-31T19:42:53.100Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "85skrfeipis",
            "schemaId": "1fe5tn6284x",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:52.782Z",
            "updatedTime": "2023-05-31T19:42:52.782Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "c3fgtmuxib3",
            "schemaId": "6jqwyub2zos",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:52.858Z",
            "updatedTime": "2023-05-31T19:42:52.858Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "qymqbbg2f0v",
            "schemaId": "uid41gssjfp",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:52.935Z",
            "updatedTime": "2023-05-31T19:42:52.935Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "wa9lvr0b6e2",
            "schemaId": "vo17amlsx82",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:53.698Z",
            "updatedTime": "2023-05-31T19:42:53.698Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "03r3o8e6t17",
            "schemaId": "viv69jxp6f2",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:53.174Z",
            "updatedTime": "2023-05-31T19:42:53.174Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "en39a5oexri",
            "schemaId": "6jqwyub2zos",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:53.518Z",
            "updatedTime": "2023-05-31T19:42:53.518Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "hsfwqsnmx1b",
            "schemaId": "jb18j1l6ylj",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:53.330Z",
            "updatedTime": "2023-05-31T19:42:53.330Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "kwqza63n5hz",
            "schemaId": "1fe5tn6284x",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:53.416Z",
            "updatedTime": "2023-05-31T19:42:53.416Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ng3uttjchgh",
            "schemaId": "v7ynpdgvmtt",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "4",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:53.619Z",
            "updatedTime": "2023-05-31T19:42:53.619Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "xh41dq3ykh8",
            "schemaId": "zj4e0hbrx5j",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:53.252Z",
            "updatedTime": "2023-05-31T19:42:53.252Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "y480y49s9y7",
            "schemaId": "uid41gssjfp",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:54.002Z",
            "updatedTime": "2023-05-31T19:42:54.002Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "35n9adi3sxk",
            "schemaId": "viv69jxp6f2",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:54.162Z",
            "updatedTime": "2023-05-31T19:42:54.162Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "byt35mbna05",
            "schemaId": "jb18j1l6ylj",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:53.921Z",
            "updatedTime": "2023-05-31T19:42:53.921Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "dafn1erdd3e",
            "schemaId": "1fe5tn6284x",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:53.773Z",
            "updatedTime": "2023-05-31T19:42:53.773Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "fksav7jgd9h",
            "schemaId": "6jqwyub2zos",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:53.846Z",
            "updatedTime": "2023-05-31T19:42:53.846Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "pv5bjrffjdn",
            "schemaId": "z1g2acoxaaa",
            "description": "Represents a customer of the store ",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:54.084Z",
            "updatedTime": "2023-05-31T19:42:54.084Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "uje9h6l87z9",
            "schemaId": "v7ynpdgvmtt",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "4",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:54.239Z",
            "updatedTime": "2023-05-31T19:42:54.239Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "uy10glet7jq",
            "schemaId": "zj4e0hbrx5j",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:54.321Z",
            "updatedTime": "2023-05-31T19:42:54.321Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ztfx0s0pluf",
            "schemaId": "uid41gssjfp",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:54.402Z",
            "updatedTime": "2023-05-31T19:42:54.402Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "685a7ma9xha",
            "schemaId": "v7ynpdgvmtt",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:55.068Z",
            "updatedTime": "2023-05-31T19:42:55.068Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "cteyadea8rx",
            "schemaId": "zj4e0hbrx5j",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:54.893Z",
            "updatedTime": "2023-05-31T19:42:54.893Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "g2iwbl023yd",
            "schemaId": "vo17amlsx82",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:54.717Z",
            "updatedTime": "2023-05-31T19:42:54.717Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "iohurf014kj",
            "schemaId": "uid41gssjfp",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:54.555Z",
            "updatedTime": "2023-05-31T19:42:54.555Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "o8glmo91mdy",
            "schemaId": "viv69jxp6f2",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:54.979Z",
            "updatedTime": "2023-05-31T19:42:54.979Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "pt89rlel8h8",
            "schemaId": "1fe5tn6284x",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:54.478Z",
            "updatedTime": "2023-05-31T19:42:54.478Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "qwdjlusllja",
            "schemaId": "z1g2acoxaaa",
            "description": "Represents a customer of the store ",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:54.632Z",
            "updatedTime": "2023-05-31T19:42:54.632Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "u61ik3x447k",
            "schemaId": "jb18j1l6ylj",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-05-31T19:42:54.807Z",
            "updatedTime": "2023-05-31T19:42:54.807Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "zmo3d6tgn8t",
            "schemaId": "6jqwyub2zos",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }
    ],
    "enums": [],
    "enumVersions": [],
    "eventApis": [],
    "eventApiVersions": [],
    "eventApiProducts": [],
    "eventApiProductVersions": [],
    "addressSpaces": [{
            "createdTime": "2023-05-31T19:22:38.102Z",
            "updatedTime": "2023-05-31T19:22:38.102Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0vbsjfoe0fw",
            "brokerType": "kafka",
            "delimiter": ".",
            "type": "addressSpace"
        }
    ],
    "customAttributeDefinitions": [{
            "createdTime": "2023-05-31T19:42:49.625Z",
            "updatedTime": "2023-05-31T19:42:49.625Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0d1cz9t1288",
            "name": "application-type",
            "valueType": "STRING",
            "scope": "applicationDomain",
            "associatedEntityTypes": ["application"],
            "associatedEntities": [{
                    "entityType": "application",
                    "applicationDomainIds": ["5inu9z9e7al", "7ruyh8oib6n", "v8r9hyl6xmu", "wwuh6eshak7"]
                }
            ],
            "type": "customAttributeDefinition"
        }, {
            "createdTime": "2023-05-31T19:42:49.631Z",
            "updatedTime": "2023-05-31T19:42:49.631Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "nie0ibn8fa8",
            "name": "confidential",
            "valueType": "STRING",
            "scope": "applicationDomain",
            "associatedEntityTypes": ["event"],
            "associatedEntities": [{
                    "entityType": "event",
                    "applicationDomainIds": ["5inu9z9e7al", "7ruyh8oib6n", "v8r9hyl6xmu", "wwuh6eshak7"]
                }
            ],
            "type": "customAttributeDefinition"
        }
    ]
}
