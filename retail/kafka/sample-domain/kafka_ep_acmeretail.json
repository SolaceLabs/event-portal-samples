{
    "formatVersion": "2.0.0",
    "applicationDomains": [{
            "createdTime": "2023-07-12T14:03:49.855Z",
            "updatedTime": "2023-07-12T14:03:49.855Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gf82aon308v",
            "name": "Fulfillment",
            "description": "Event Hubs",
            "uniqueTopicAddressEnforcementEnabled": false,
            "topicDomainEnforcementEnabled": false,
            "customAttributes": [],
            "type": "applicationDomain"
        }, {
            "createdTime": "2023-07-12T14:03:49.855Z",
            "updatedTime": "2023-07-12T14:03:49.855Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "zp40l564ym7",
            "name": "Merchandising",
            "description": "Event Hubs",
            "uniqueTopicAddressEnforcementEnabled": false,
            "topicDomainEnforcementEnabled": false,
            "customAttributes": [],
            "type": "applicationDomain"
        }, {
            "createdTime": "2023-07-12T14:03:49.855Z",
            "updatedTime": "2023-07-12T14:03:49.855Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "4u9gsifl3c6",
            "name": "OnlineServices",
            "description": "Event Hubs",
            "uniqueTopicAddressEnforcementEnabled": false,
            "topicDomainEnforcementEnabled": false,
            "customAttributes": [],
            "type": "applicationDomain"
        }, {
            "createdTime": "2023-07-12T14:03:49.855Z",
            "updatedTime": "2023-07-12T14:03:49.855Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "8nkidw2ecv5",
            "name": "Shipping",
            "description": "Event Hubs",
            "uniqueTopicAddressEnforcementEnabled": false,
            "topicDomainEnforcementEnabled": false,
            "customAttributes": [],
            "type": "applicationDomain"
        }
    ],
    "topicDomains": [],
    "applications": [{
            "createdTime": "2023-07-12T14:03:50.072Z",
            "updatedTime": "2023-07-12T14:05:31.027Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "b0q07e0lvym",
            "name": "Basket Service - Basket View (kSQL)",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "4u9gsifl3c6",
            "numberOfVersions": 7,
            "customAttributes": [{
                    "customAttributeDefinitionId": "cvs25yyx8pd",
                    "customAttributeDefinitionName": "acl-principal",
                    "value": "CN=BasketViewService,OU=OnlineServices,DC=AcmeRetail,DC=COM"
                }, {
                    "customAttributeDefinitionId": "gecji55fe0f",
                    "customAttributeDefinitionName": "application-type",
                    "value": "ksql"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-12T14:03:50.072Z",
            "updatedTime": "2023-07-12T14:05:31.362Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gak3bqz9c79",
            "name": "Basket Service - Basket Writer (REST proxy)",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "4u9gsifl3c6",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "gecji55fe0f",
                    "customAttributeDefinitionName": "application-type",
                    "value": "rest-proxy"
                }, {
                    "customAttributeDefinitionId": "cvs25yyx8pd",
                    "customAttributeDefinitionName": "acl-principal",
                    "value": "CN=BasketWriterService,OU=OnlineServices,DC=AcmeRetail,DC=COM"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-12T14:03:50.072Z",
            "updatedTime": "2023-07-12T14:05:31.715Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "3afslbys7yt",
            "name": "Catalogue Filter View (kSQL)",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "4u9gsifl3c6",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "gecji55fe0f",
                    "customAttributeDefinitionName": "application-type",
                    "value": "ksql"
                }, {
                    "customAttributeDefinitionId": "cvs25yyx8pd",
                    "customAttributeDefinitionName": "acl-principal",
                    "value": "CN=CatalogueFilterView,OU=OnlineServices,DC=AcmeRetail,DC=COM"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-12T14:03:50.072Z",
            "updatedTime": "2023-07-12T14:05:32.154Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ly00m4qyebh",
            "name": "Catalogue Search (Kafka Connect -> Elasticsearch)",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "4u9gsifl3c6",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "cvs25yyx8pd",
                    "customAttributeDefinitionName": "acl-principal",
                    "value": "CN=CatalogueSearch,OU=OnlineServices,DC=AcmeRetail,DC=COM"
                }, {
                    "customAttributeDefinitionId": "gecji55fe0f",
                    "customAttributeDefinitionName": "application-type",
                    "value": "kafka-connect"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-12T14:03:50.072Z",
            "updatedTime": "2023-07-12T14:05:30.647Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "lvlnpuk0ryi",
            "name": "Catalogue Services",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "zp40l564ym7",
            "numberOfVersions": 4,
            "customAttributes": [{
                    "customAttributeDefinitionId": "gecji55fe0f",
                    "customAttributeDefinitionName": "application-type",
                    "value": "cobol"
                }, {
                    "customAttributeDefinitionId": "cvs25yyx8pd",
                    "customAttributeDefinitionName": "acl-principal",
                    "value": "CN=CatalogueServices,OU=Merchandising,DC=AcmeRetail,DC=COM"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-12T14:03:50.072Z",
            "updatedTime": "2023-07-12T14:05:29.004Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "f6th4ai7cc6",
            "name": "Email Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "gf82aon308v",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "cvs25yyx8pd",
                    "customAttributeDefinitionName": "acl-principal",
                    "value": "CN=EmailService,OU=Fulfillment,DC=AcmeRetail,DC=COM"
                }, {
                    "customAttributeDefinitionId": "gecji55fe0f",
                    "customAttributeDefinitionName": "application-type",
                    "value": "java"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-12T14:03:50.072Z",
            "updatedTime": "2023-07-12T14:05:29.429Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "hdahf3kf3nn",
            "name": "Fraud Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "gf82aon308v",
            "numberOfVersions": 4,
            "customAttributes": [{
                    "customAttributeDefinitionId": "cvs25yyx8pd",
                    "customAttributeDefinitionName": "acl-principal",
                    "value": "CN=FraudService,OU=Fulfillment,DC=AcmeRetail,DC=COM"
                }, {
                    "customAttributeDefinitionId": "gecji55fe0f",
                    "customAttributeDefinitionName": "application-type",
                    "value": "java"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-12T14:03:50.072Z",
            "updatedTime": "2023-07-12T14:05:29.868Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "igvo21t3e6j",
            "name": "Inventory Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "gf82aon308v",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "cvs25yyx8pd",
                    "customAttributeDefinitionName": "acl-principal",
                    "value": "CN=InventoryService,OU=Fulfillment,DC=AcmeRetail,DC=COM"
                }, {
                    "customAttributeDefinitionId": "gecji55fe0f",
                    "customAttributeDefinitionName": "application-type",
                    "value": "java"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-12T14:03:50.073Z",
            "updatedTime": "2023-07-12T14:05:30.301Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gl4czrjtf6e",
            "name": "Order Details Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "gf82aon308v",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "gecji55fe0f",
                    "customAttributeDefinitionName": "application-type",
                    "value": "ksql"
                }, {
                    "customAttributeDefinitionId": "cvs25yyx8pd",
                    "customAttributeDefinitionName": "acl-principal",
                    "value": "CN=OrderDetailsService,OU=Fulfillment,DC=AcmeRetail,DC=COM"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-12T14:03:50.073Z",
            "updatedTime": "2023-07-12T14:05:32.497Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "er10wvt0a1w",
            "name": "Orders Service  - Order Writer",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "4u9gsifl3c6",
            "numberOfVersions": 4,
            "customAttributes": [{
                    "customAttributeDefinitionId": "gecji55fe0f",
                    "customAttributeDefinitionName": "application-type",
                    "value": "rest-proxy"
                }, {
                    "customAttributeDefinitionId": "cvs25yyx8pd",
                    "customAttributeDefinitionName": "acl-principal",
                    "value": "CN=OrdersWriter,OU=OnlineServices,DC=AcmeRetail,DC=COM"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-12T14:03:50.073Z",
            "updatedTime": "2023-07-12T14:05:32.878Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "wszsqbhyct1",
            "name": "Orders Service - Orders View",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "4u9gsifl3c6",
            "numberOfVersions": 4,
            "customAttributes": [{
                    "customAttributeDefinitionId": "gecji55fe0f",
                    "customAttributeDefinitionName": "application-type",
                    "value": "rest-proxy"
                }, {
                    "customAttributeDefinitionId": "cvs25yyx8pd",
                    "customAttributeDefinitionName": "acl-principal",
                    "value": "CN=OrdersView,OU=OnlineServices,DC=AcmeRetail,DC=COM"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-12T14:03:50.073Z",
            "updatedTime": "2023-07-12T14:05:33.267Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ku15eldllov",
            "name": "Orders Service - Validations Aggregator",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "4u9gsifl3c6",
            "numberOfVersions": 7,
            "customAttributes": [{
                    "customAttributeDefinitionId": "cvs25yyx8pd",
                    "customAttributeDefinitionName": "acl-principal",
                    "value": "CN=ValidationAggregator,OU=OnlineServices,DC=AcmeRetail,DC=COM"
                }, {
                    "customAttributeDefinitionId": "gecji55fe0f",
                    "customAttributeDefinitionName": "application-type",
                    "value": "java"
                }
            ],
            "type": "application"
        }, {
            "createdTime": "2023-07-12T14:03:50.073Z",
            "updatedTime": "2023-07-12T14:05:33.659Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "i03kpn72izj",
            "name": "Shipping Service",
            "applicationType": "standard",
            "brokerType": "kafka",
            "applicationDomainId": "8nkidw2ecv5",
            "numberOfVersions": 2,
            "customAttributes": [{
                    "customAttributeDefinitionId": "gecji55fe0f",
                    "customAttributeDefinitionName": "application-type",
                    "value": "kafka-streams"
                }, {
                    "customAttributeDefinitionId": "cvs25yyx8pd",
                    "customAttributeDefinitionName": "acl-principal",
                    "value": "CN=ShippingService,OU=OnlineServices,DC=AcmeRetail,DC=COM"
                }
            ],
            "type": "application"
        }
    ],
    "applicationVersions": [{
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:05:31.715Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "avtfn27j6bo",
            "applicationId": "3afslbys7yt",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["d5bwzb5kc3w", "i1d60fqg2db"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "heirda8u4ax",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "avtfn27j6bo",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "k721d8v9pod",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "pw7pxz5po58",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "avtfn27j6bo",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ij3xejdevo6",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "pkoj75k3au6",
            "applicationId": "3afslbys7yt",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["567meazq40p", "t3ie0387jpi"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "6jsk7de5wgo",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "pkoj75k3au6",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ajh51ab1lh3",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "1ugva7ekmzf",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "pkoj75k3au6",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "vcfcb01gob7",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ehq8vqhjxo6",
            "applicationId": "3afslbys7yt",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["567meazq40p", "t3ie0387jpi"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "gge11n3iyjx",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "ehq8vqhjxo6",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "58uxhwdlmj7",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "mwdsidcrk6x",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "ehq8vqhjxo6",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "nkmf2ndqn26",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "xgc5genq5m9",
            "applicationId": "3afslbys7yt",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.2",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["567meazq40p", "t3ie0387jpi"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "7vvi3s62t51",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "xgc5genq5m9",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "leuyz00agca",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "q3ju2g689g0",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "xgc5genq5m9",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "qxj35j3iu7g",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "upbq1xdclay",
            "applicationId": "3afslbys7yt",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["567meazq40p", "t3ie0387jpi"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "t50qe1nopk2",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "upbq1xdclay",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "89e4y30tlii",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "h77wftzama6",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "upbq1xdclay",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "30z4b1vgglg",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "itk5kd15hsq",
            "applicationId": "3afslbys7yt",
            "description": "An event-sourced view combining information from the catalogue and stock topics\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["567meazq40p", "t3ie0387jpi"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "3b999ivby2e",
                    "name": "CATALOGUE.INVENTORY",
                    "applicationVersionId": "itk5kd15hsq",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "l490rve51fq",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "18cgqg7ehdi",
                    "name": "CATALOGUEFILTER.CATALOGUE",
                    "applicationVersionId": "itk5kd15hsq",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "2hhbodxd7bg",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:05:31.027Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5s4ryzvy605",
            "applicationId": "b0q07e0lvym",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["50yrp8tjtm9", "i5awfetv0fy"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "6np8v0vcalr",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "5s4ryzvy605",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "jbqx4zkvrad",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "cjuk3ne6izl",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "5s4ryzvy605",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "nzlf0t3niop",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "4x5ghedffa6",
            "applicationId": "b0q07e0lvym",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["600ile6k2b0", "86t42k0aiok"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "83cegwskhdk",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "4x5ghedffa6",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "4jqi63298bh",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "sd2m97zjw7k",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "4x5ghedffa6",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "1lic7m64u28",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "bteehb9fxtn",
            "applicationId": "b0q07e0lvym",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["600ile6k2b0", "86t42k0aiok"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "9eeydq31m0h",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "bteehb9fxtn",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "o0e1mcj4gtu",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "7c3j64h3pi5",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "bteehb9fxtn",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "m8yvfazgj2e",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "29soqei9u92",
            "applicationId": "b0q07e0lvym",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["600ile6k2b0", "86t42k0aiok"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "p051v2spnqb",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "29soqei9u92",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "1ugj7pfgao2",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "4j7xryvl0uo",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "29soqei9u92",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "fatbgvp68ed",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ga4p3dbo1s2",
            "applicationId": "b0q07e0lvym",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.2",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["600ile6k2b0", "86t42k0aiok"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "xbdt49cwl4e",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "ga4p3dbo1s2",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "so55zf80eh5",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "iashkb2q8i0",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "ga4p3dbo1s2",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "fuhyr802up9",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "g6170z79ano",
            "applicationId": "b0q07e0lvym",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["600ile6k2b0", "86t42k0aiok"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "jesdttajwue",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "g6170z79ano",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "qj0o9iwae4i",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "ws71z5f6bfc",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "g6170z79ano",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "4g8wfkfetx1",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "zd3gh9ng5k7",
            "applicationId": "b0q07e0lvym",
            "description": "The Basket view is an event-sourced view, implemented in Kafka Streams, with the contents of its state stores exposed over a REST interface. The view represents a join between User and Basket topics, but much of the information is thrown away, retaining only the bare minimum: userId → List[product],  minimizing the view’s footprint.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["600ile6k2b0", "86t42k0aiok"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "65ozrtajkz1",
                    "name": "BASKET.CUSTOMER",
                    "applicationVersionId": "zd3gh9ng5k7",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "mo0p871bz5o",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "y0bhjyn0r2p",
                    "name": "BASKETWRITER.BASKET",
                    "applicationVersionId": "zd3gh9ng5k7",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "anac2s8jjfq",
                            "subscriptionType": "topic",
                            "value": "basket",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:05:32.497Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "31k1nwe6v2h",
            "applicationId": "er10wvt0a1w",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nPOST  adds Order, Payment and Customer information to the system returning when Kafka sends the appropriate acknowledgement.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["i5awfetv0fy", "kjtjmdgh191", "m28d87t7fi2"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:52.867Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "dw1xbck8gfk",
            "applicationId": "er10wvt0a1w",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nPOST  adds Order, Payment and Customer information to the system returning when Kafka sends the appropriate acknowledgement.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["0n6l2yhcect", "86t42k0aiok", "9uw3756zjg2"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:52.867Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "nfhhrisijwe",
            "applicationId": "er10wvt0a1w",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nPOST  adds Order, Payment and Customer information to the system returning when Kafka sends the appropriate acknowledgement.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["0n6l2yhcect", "86t42k0aiok", "9uw3756zjg2"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:52.867Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ureph6mwao2",
            "applicationId": "er10wvt0a1w",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nPOST  adds Order, Payment and Customer information to the system returning when Kafka sends the appropriate acknowledgement.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["0n6l2yhcect", "86t42k0aiok", "9uw3756zjg2"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:05:29.004Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "b9c783ab874",
            "applicationId": "f6th4ai7cc6",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "1.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["i5awfetv0fy", "kjtjmdgh191", "m28d87t7fi2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "qb35i7dhker",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "b9c783ab874",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "c5or34xvwhx",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "jgqr3yik14p",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "b9c783ab874",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "7cyjy8umga3",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "ov4hd3e2fbv",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "b9c783ab874",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "x6ce24yo4o7",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "8rk8nduyxdm",
            "applicationId": "f6th4ai7cc6",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["0n6l2yhcect", "86t42k0aiok", "9uw3756zjg2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "76xdu21iml6",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "8rk8nduyxdm",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "0zl5ujuzdet",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "dz0ubivd07n",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "8rk8nduyxdm",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "cxis074l0rv",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "k6m1tkbefgm",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "8rk8nduyxdm",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "dwo15f4r4dc",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "cfaeusb0wi1",
            "applicationId": "f6th4ai7cc6",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["0n6l2yhcect", "86t42k0aiok", "9uw3756zjg2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "yq9ax9k3cum",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "cfaeusb0wi1",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "vjbeo74xtyt",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "ga3e6y0vl3a",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "cfaeusb0wi1",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "i4e2q9jdje2",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "ndm91jj2vfa",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "cfaeusb0wi1",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "bism4j0w4i3",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "6jabmreh1gh",
            "applicationId": "f6th4ai7cc6",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["0n6l2yhcect", "86t42k0aiok", "9uw3756zjg2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "k78e8ubh5pq",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "6jabmreh1gh",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "i86qty2fych",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "3g8pw0z0w0f",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "6jabmreh1gh",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ud3m6h3fa3p",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "8f34e7ayplo",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "6jabmreh1gh",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "h35pd7kj0y7",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ujwhi5k6yn9",
            "applicationId": "f6th4ai7cc6",
            "description": "A very simple service which sends emails. Order and Payment streams are joined using a window. The result is then joined to a lookup table of Customers. Finally an email is sent for each resulting tuple.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/EmailService.java)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["0n6l2yhcect", "86t42k0aiok", "9uw3756zjg2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "7v1xj9bhetv",
                    "name": "EMAIL.CUSTOMERS",
                    "applicationVersionId": "ujwhi5k6yn9",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "s82fojv8vhz",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "p3md8802cgi",
                    "name": "EMAIL.ORDERS",
                    "applicationVersionId": "ujwhi5k6yn9",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "djs8blp969w",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "1bkbgu99ler",
                    "name": "EMAIL.PAYMENTS",
                    "applicationVersionId": "ujwhi5k6yn9",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "zen8cfwasof",
                            "subscriptionType": "topic",
                            "value": "payments",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:05:31.362Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "uwbam5w0foj",
            "applicationId": "gak3bqz9c79",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["50yrp8tjtm9"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:52.867Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5f4g1786xn2",
            "applicationId": "gak3bqz9c79",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["600ile6k2b0"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:52.867Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "a5zevog2lw7",
            "applicationId": "gak3bqz9c79",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["600ile6k2b0"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:52.867Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ij3o4bebdbj",
            "applicationId": "gak3bqz9c79",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.2",
            "displayName": "",
            "declaredProducedEventVersionIds": ["600ile6k2b0"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:52.867Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jgjkzc431ag",
            "applicationId": "gak3bqz9c79",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["600ile6k2b0"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:52.867Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "kosigj3ve83",
            "applicationId": "gak3bqz9c79",
            "description": "The Basket writer proxies HTTP requests, forwarding them to the Basket topic in Kafka when a user adds a new item using the REST proxy. \n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["600ile6k2b0"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:05:30.301Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "4ywdq5kja1e",
            "applicationId": "gl4czrjtf6e",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "1.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["63r8r0i6ood"],
            "declaredConsumedEventVersionIds": ["m28d87t7fi2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "k4ucfzs3wlf",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "4ywdq5kja1e",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "11l4ii8odki",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "tj6dunnavc9",
            "applicationId": "gl4czrjtf6e",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["ad28l2ykkbt"],
            "declaredConsumedEventVersionIds": ["9uw3756zjg2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "tqr4n4vdff4",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "tj6dunnavc9",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "5s4ig8haxpb",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "t768uq781p6",
            "applicationId": "gl4czrjtf6e",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "0.2.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["ad28l2ykkbt"],
            "declaredConsumedEventVersionIds": ["9uw3756zjg2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "7l3h8ofbu41",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "t768uq781p6",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "1e64qzk3ba8",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ylt162vhiux",
            "applicationId": "gl4czrjtf6e",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["ad28l2ykkbt"],
            "declaredConsumedEventVersionIds": ["9uw3756zjg2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "11moad1m5cv",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "ylt162vhiux",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "777vd5rie8a",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "zfpf295lcs2",
            "applicationId": "gl4czrjtf6e",
            "description": " This service validates the details of each order, checking business rules such as:\n *  Is the quantity positive?\n * Is there a customerId?\n[GitHub source code](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/OrderDetailsService.java)\n\n\n\n",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["ad28l2ykkbt"],
            "declaredConsumedEventVersionIds": ["9uw3756zjg2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "8561s9wn3aj",
                    "name": "ORDERDETAILS.ORDERCREATED",
                    "applicationVersionId": "zfpf295lcs2",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "3c4i9c4f9cm",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:05:29.429Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5904azp5kcp",
            "applicationId": "hdahf3kf3nn",
            "description": "This service searches for potentially fraudulent transactions by calculating the total value of orders for a customer within a time period, then checks to see if this is over a configured limit. \n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/FraudService.java)",
            "version": "1.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["63r8r0i6ood"],
            "declaredConsumedEventVersionIds": ["m28d87t7fi2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "umhzb7gircd",
                    "name": "FRAUD.ORDERCREATED",
                    "applicationVersionId": "5904azp5kcp",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "c5z5z0lug7n",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "78yh0wbmcck",
            "applicationId": "hdahf3kf3nn",
            "description": "This service searches for potentially fraudulent transactions by calculating the total value of orders for a customer within a time period, then checks to see if this is over a configured limit. \n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/FraudService.java)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["ad28l2ykkbt"],
            "declaredConsumedEventVersionIds": ["9uw3756zjg2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "9hjm0v3guuz",
                    "name": "FRAUD.ORDERCREATED",
                    "applicationVersionId": "78yh0wbmcck",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "qawt7ml8t48",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jqtk67a7orz",
            "applicationId": "hdahf3kf3nn",
            "description": "This service searches for potentially fraudulent transactions by calculating the total value of orders for a customer within a time period, then checks to see if this is over a configured limit. \n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/FraudService.java)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["ad28l2ykkbt"],
            "declaredConsumedEventVersionIds": ["9uw3756zjg2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "8u0fgb2j8ir",
                    "name": "FRAUD.ORDERCREATED",
                    "applicationVersionId": "jqtk67a7orz",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "020uhg8g9je",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "f6i3hb2db6i",
            "applicationId": "hdahf3kf3nn",
            "description": "This service searches for potentially fraudulent transactions by calculating the total value of orders for a customer within a time period, then checks to see if this is over a configured limit. \n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/FraudService.java)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["ad28l2ykkbt"],
            "declaredConsumedEventVersionIds": ["9uw3756zjg2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "aeet206t4ym",
                    "name": "FRAUD.ORDERCREATED",
                    "applicationVersionId": "f6i3hb2db6i",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "yoxkr4en5jb",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:05:33.659Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "133tineuf8h",
            "applicationId": "i03kpn72izj",
            "description": "A streaming service leveraging the Kafka Streams API. This service reacts to orders as they are created, updating the Shipping topic as notifications are received from the delivery company.\n\n[GitHub Source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["wer4rkx11tc"],
            "declaredConsumedEventVersionIds": ["d5bwzb5kc3w", "i5awfetv0fy"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "lufz4f9au1f",
                    "name": "SHIPPING.CATALOGUE",
                    "applicationVersionId": "133tineuf8h",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "g6q6ikx56ph",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "pa7yy9j9maa",
                    "name": "SHIPPING.CUSTOMERS",
                    "applicationVersionId": "133tineuf8h",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "25j34f1cxef",
                            "subscriptionType": "topic",
                            "value": "customers",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "c7mho8gy1wo",
            "applicationId": "i03kpn72izj",
            "description": "A streaming service leveraging the Kafka Streams API. This service reacts to orders as they are created, updating the Shipping topic as notifications are received from the delivery company.",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["x89sxh143a3"],
            "declaredConsumedEventVersionIds": ["86t42k0aiok", "t3ie0387jpi"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "11oxdh5sc7f",
                    "name": "SHIPPING.CATALOGUE",
                    "applicationVersionId": "c7mho8gy1wo",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "t7lu43bmt64",
                            "subscriptionType": "topic",
                            "value": "CATALOGUE",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "6cwb5wt0mvw",
                    "name": "SHIPPING.CUSTOMERS",
                    "applicationVersionId": "c7mho8gy1wo",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "d9e5j28e8bo",
                            "subscriptionType": "topic",
                            "value": "CUSTOMERS",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:05:29.868Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "bpu6l4aw1oc",
            "applicationId": "igvo21t3e6j",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "1.0.2",
            "displayName": "",
            "declaredProducedEventVersionIds": ["63r8r0i6ood", "i1d60fqg2db"],
            "declaredConsumedEventVersionIds": ["i1d60fqg2db", "m28d87t7fi2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "gjatsleieyf",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "bpu6l4aw1oc",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "24o8enf47l6",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "4y2cx6h7738",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "bpu6l4aw1oc",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "2qd0kim1w4w",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gao4vapw3vj",
            "applicationId": "igvo21t3e6j",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["567meazq40p", "ad28l2ykkbt"],
            "declaredConsumedEventVersionIds": ["567meazq40p", "9uw3756zjg2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "iz1ot8j1dg4",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "gao4vapw3vj",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "566f6asxo6g",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "0tatkz4g5cj",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "gao4vapw3vj",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "7c4yusm2olo",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "mz9lnz84k1b",
            "applicationId": "igvo21t3e6j",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["567meazq40p", "ad28l2ykkbt"],
            "declaredConsumedEventVersionIds": ["567meazq40p", "9uw3756zjg2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "3",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "nzx1ewjhjaz",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "mz9lnz84k1b",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "qjspaal4c6u",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "fbsmjrpxjo2",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "mz9lnz84k1b",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "mjpv314zfdj",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "l5395m9crji",
            "applicationId": "igvo21t3e6j",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["567meazq40p", "ad28l2ykkbt"],
            "declaredConsumedEventVersionIds": ["567meazq40p", "9uw3756zjg2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "w4w5p9m38pt",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "l5395m9crji",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ib16di7n5lh",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "mywq7vewliz",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "l5395m9crji",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "6750lnhmndw",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "1sbpj6qwjaf",
            "applicationId": "igvo21t3e6j",
            "description": "This service validates incoming orders to ensure there is sufficient stock to fulfill them. This validation process considers both the inventory in the warehouse as well as a set \"reserved\" items which is maintained by this service. Reserved items are those that are in the warehouse, but have been allocated to a pending order.\n\n[GitHub](https://github.com/confluentinc/kafka-streams-examples/blob/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices/InventoryService.java)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["567meazq40p", "ad28l2ykkbt"],
            "declaredConsumedEventVersionIds": ["567meazq40p", "9uw3756zjg2"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "23jpc4t77ss",
                    "name": "INVENTORY.INVENTORY",
                    "applicationVersionId": "1sbpj6qwjaf",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "tj3am2po0fl",
                            "subscriptionType": "topic",
                            "value": "warehouse-inventory",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }, {
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "m84wepojrmd",
                    "name": "INVENTORY.ORDERS",
                    "applicationVersionId": "1sbpj6qwjaf",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "v6sl3wxpjpe",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:05:33.267Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "20i5y6yzsw9",
            "applicationId": "ku15eldllov",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.2",
            "displayName": "",
            "declaredProducedEventVersionIds": ["9w3p511ijad"],
            "declaredConsumedEventVersionIds": ["63r8r0i6ood"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "pc9xa5gbta8",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "20i5y6yzsw9",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "4g1285jgojj",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "1vla6cwl32a",
            "applicationId": "ku15eldllov",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["8rqo4s35p57"],
            "declaredConsumedEventVersionIds": ["ad28l2ykkbt"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "atdbq8obm0e",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "1vla6cwl32a",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "rmsj0btly82",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "9nc5fbvpuyg",
            "applicationId": "ku15eldllov",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["8rqo4s35p57"],
            "declaredConsumedEventVersionIds": ["ad28l2ykkbt"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "3",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "kfab4i9zijf",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "9nc5fbvpuyg",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "4ilajrf7kh6",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "sj3m3kqbbzy",
            "applicationId": "ku15eldllov",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.3",
            "displayName": "",
            "declaredProducedEventVersionIds": ["8rqo4s35p57"],
            "declaredConsumedEventVersionIds": ["ad28l2ykkbt"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "ihbof6uwfrv",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "sj3m3kqbbzy",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "as7emf21dsq",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "m1yys63u1ge",
            "applicationId": "ku15eldllov",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.2",
            "displayName": "",
            "declaredProducedEventVersionIds": ["8rqo4s35p57"],
            "declaredConsumedEventVersionIds": ["ad28l2ykkbt"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "qu6shxxo3aa",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "m1yys63u1ge",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "gqip2c784z0",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gj3upl5je6m",
            "applicationId": "ku15eldllov",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["8rqo4s35p57"],
            "declaredConsumedEventVersionIds": ["ad28l2ykkbt"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "cqh9kse8iiv",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "gj3upl5je6m",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "v3ch6o4dxn7",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "9orc6kbg5hy",
            "applicationId": "ku15eldllov",
            "description": " A simple service which listens to to validation results from each of the Validation services and aggregates them by order Id, triggering a pass or fail based on whether all rules pass or not.\n \n [GitHub Source Code](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["8rqo4s35p57"],
            "declaredConsumedEventVersionIds": ["ad28l2ykkbt"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "231m52bwpgg",
                    "name": "ORDERSSERVICE.VALIDATIONSAGGREGATOR",
                    "applicationVersionId": "9orc6kbg5hy",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "yjvek8bnt4d",
                            "subscriptionType": "topic",
                            "value": "order-validations",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:05:30.647Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "uxa5ul4hvvw",
            "applicationId": "lvlnpuk0ryi",
            "description": "A legacy codebase that manages changes made to the product catalog, initiated from an internal UI. This has comparatively fewer users, and an existing codebase. Events are picked up from the legacy Postgres database using a CDC connector to push them into Kafka. The single-message transforms feature reformats the messages before they are made public. Images are saved to a distributed filesystem for access by the web tier.\n\n[GitHub source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "1.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["d5bwzb5kc3w"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:52.867Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "3zrhrk8vvr7",
            "applicationId": "lvlnpuk0ryi",
            "description": "A legacy codebase that manages changes made to the product catalog, initiated from an internal UI. This has comparatively fewer users, and an existing codebase. Events are picked up from the legacy Postgres database using a CDC connector to push them into Kafka. The single-message transforms feature reformats the messages before they are made public. Images are saved to a distributed filesystem for access by the web tier.\n\n[GitHub source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": ["t3ie0387jpi"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:52.867Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "kx9chub94cn",
            "applicationId": "lvlnpuk0ryi",
            "description": "A legacy codebase that manages changes made to the product catalog, initiated from an internal UI. This has comparatively fewer users, and an existing codebase. Events are picked up from the legacy Postgres database using a CDC connector to push them into Kafka. The single-message transforms feature reformats the messages before they are made public. Images are saved to a distributed filesystem for access by the web tier.\n\n[GitHub source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "1.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["t3ie0387jpi"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "3",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:52.867Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "eneyrmlnc2q",
            "applicationId": "lvlnpuk0ryi",
            "description": "A legacy codebase that manages changes made to the product catalog, initiated from an internal UI. This has comparatively fewer users, and an existing codebase. Events are picked up from the legacy Postgres database using a CDC connector to push them into Kafka. The single-message transforms feature reformats the messages before they are made public. Images are saved to a distributed filesystem for access by the web tier.\n\n[GitHub source](https://github.com/confluentinc/kafka-streams-examples)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": ["t3ie0387jpi"],
            "declaredConsumedEventVersionIds": [],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:05:32.154Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "000cm0s7hmd",
            "applicationId": "ly00m4qyebh",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "3.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["d5bwzb5kc3w"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "q9xcxkk3pxx",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "000cm0s7hmd",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "255ph54nfb1",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ppz2ebf7d8b",
            "applicationId": "ly00m4qyebh",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "3.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["t3ie0387jpi"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "5yht9pjq9e6",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "ppz2ebf7d8b",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "v87nh3ylz96",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "s45pg7qximv",
            "applicationId": "ly00m4qyebh",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["t3ie0387jpi"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "5jjqgfry24t",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "s45pg7qximv",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "3c2qby0cns1",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "3pvot7x5j0f",
            "applicationId": "ly00m4qyebh",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "2.0.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["t3ie0387jpi"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "3d8kt3djssi",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "3pvot7x5j0f",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "5lezse3ikeb",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "i3lnxyy4tha",
            "applicationId": "ly00m4qyebh",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["t3ie0387jpi"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "s6mgvjf1b7j",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "i3lnxyy4tha",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ahyhw3uqaqe",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "8wo51ixk4x4",
            "applicationId": "ly00m4qyebh",
            "description": "A third event-sourced view using Elasticsearch for full-text search capabilities.\n\n\n[Source Code within GitHub](https://github.com/confluentinc/examples/tree/7.4.0-post/microservices-orders)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["t3ie0387jpi"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "cw8u4pz81d7",
                    "name": "CATALOGUESEARCH.CATALOGUE",
                    "applicationVersionId": "8wo51ixk4x4",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "50493a455kz",
                            "subscriptionType": "topic",
                            "value": "catalogue",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:05:32.878Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "j7oo99jhmk1",
            "applicationId": "wszsqbhyct1",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nGET returns requested order, blocking for timeout if no id present.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.3",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["9w3p511ijad"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "2",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "o3dbbhbwdl7",
                    "name": "ORDERSVIEW.ORDERVALIDATED",
                    "applicationVersionId": "j7oo99jhmk1",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "b578m4qs4jn",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7j1jhl68umu",
            "applicationId": "wszsqbhyct1",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nGET returns requested order, blocking for timeout if no id present.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "1.0.1",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["8rqo4s35p57"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "3",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "dxwczsdvadi",
                    "name": "ORDERSVIEW.ORDERVALIDATED",
                    "applicationVersionId": "7j1jhl68umu",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "d5h592ejgtz",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "12c4q3rj22r",
            "applicationId": "wszsqbhyct1",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nGET returns requested order, blocking for timeout if no id present.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.2.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["8rqo4s35p57"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "npfdycc0if5",
                    "name": "ORDERSVIEW.ORDERVALIDATED",
                    "applicationVersionId": "12c4q3rj22r",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "goqgujdqf76",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }, {
            "createdTime": "2023-07-12T14:03:52.867Z",
            "updatedTime": "2023-07-12T14:03:59.361Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "6vetgzg6d4r",
            "applicationId": "wszsqbhyct1",
            "description": "This class provides a REST interface to write and read orders using a [CQRS pattern](https://martinfowler.com/bliki/CQRS.html) \n\nGET returns requested order, blocking for timeout if no id present.\n\n[Source Code within GitHub](https://github.com/confluentinc/kafka-streams-examples/tree/5.0.0-post/src/main/java/io/confluent/examples/streams/microservices)",
            "version": "0.1.0",
            "displayName": "",
            "declaredProducedEventVersionIds": [],
            "declaredConsumedEventVersionIds": ["8rqo4s35p57"],
            "declaredEventApiProductVersionIds": [],
            "stateId": "4",
            "eventMeshIds": [],
            "consumers": [{
                    "createdTime": "2023-07-12T14:03:58.410Z",
                    "updatedTime": "2023-07-12T14:03:58.410Z",
                    "createdBy": "2ko4lk2qe58f",
                    "changedBy": "2ko4lk2qe58f",
                    "id": "1ng9ae1smbf",
                    "name": "ORDERSVIEW.ORDERVALIDATED",
                    "applicationVersionId": "6vetgzg6d4r",
                    "brokerType": "kafka",
                    "consumerType": "kafkaConsumer",
                    "subscriptions": [{
                            "id": "ru3m5he7sje",
                            "subscriptionType": "topic",
                            "value": "orders",
                            "attractedEventVersionIds": []
                        }
                    ],
                    "type": "consumer"
                }
            ],
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "applicationVersion"
        }
    ],
    "events": [{
            "createdTime": "2023-07-12T14:03:49.979Z",
            "updatedTime": "2023-07-12T14:24:27.182Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "hkju98515iy",
            "name": "Basket",
            "shared": false,
            "applicationDomainId": "4u9gsifl3c6",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "jf06cx8vw8b",
                    "customAttributeDefinitionName": "runtime-config",
                    "value": "{\n\t\"kafkaTopic\": {\n\t\t\"cleanup.policy\": \"delete\",\n\t\t\"compression.type\": \"producer\",\n\t\t\"delete.retention.ms\": 86400000,\n\t\t\"file.delete.delay.ms\": 60000,\n\t\t\"flush.messages\": 9223372036854776000,\n\t\t\"flush.ms\": 9223372036854776000,\n\t\t\"follower.replication.throttled.replicas\": \"\",\n\t\t\"index.interval.bytes\": 4096,\n\t\t\"leader.replication.throttled.replicas\": \"\",\n\t\t\"max.compaction.lag.ms\": 9223372036854776000,\n\t\t\"max.message.bytes\": 2097164,\n\t\t\"message.downconversion.enable\": true,\n\t\t\"message.format.version\": \"3.0-IV1\",\n\t\t\"message.timestamp.difference.max.ms\": 9223372036854776000,\n\t\t\"message.timestamp.type\": \"CreateTime\",\n\t\t\"min.cleanable.dirty.ratio\": 0.5,\n\t\t\"min.compaction.lag.ms\": 0,\n\t\t\"min.insync.replicas\": 2,\n\t\t\"name\": \"basket\",\n\t\t\"partitions\": [{\n\t\t\t\"id\": 0,\n\t\t\t\"isrCount\": 3,\n\t\t\t\"replicaCount\": 3\n\t\t}, {\n\t\t\t\"id\": 1,\n\t\t\t\"isrCount\": 3,\n\t\t\t\"replicaCount\": 3\n\t\t}],\n\t\t\"preallocate\": false,\n\t\t\"retention.bytes\": -1,\n\t\t\"retention.ms\": 604800000,\n\t\t\"segment.bytes\": 104857600,\n\t\t\"segment.index.bytes\": 10485760,\n\t\t\"segment.jitter.ms\": 0,\n\t\t\"segment.ms\": 604800000,\n\t\t\"unclean.leader.election.enable\": false\n\t}\n}"
                }, {
                    "customAttributeDefinitionId": "w27xl6vat69",
                    "customAttributeDefinitionName": "confidential",
                    "value": "false"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "2": 3,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-07-12T14:03:49.979Z",
            "updatedTime": "2023-07-12T14:24:27.182Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "x2ccslndfpj",
            "name": "Catalogue",
            "shared": true,
            "applicationDomainId": "zp40l564ym7",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "jf06cx8vw8b",
                    "customAttributeDefinitionName": "runtime-config",
                    "value": "{\n\t\"kafkaTopic\": {\n\t\t\"cleanup.policy\": \"delete\",\n\t\t\"compression.type\": \"producer\",\n\t\t\"delete.retention.ms\": 86400000,\n\t\t\"file.delete.delay.ms\": 60000,\n\t\t\"flush.messages\": 9223372036854776000,\n\t\t\"flush.ms\": 9223372036854776000,\n\t\t\"follower.replication.throttled.replicas\": \"\",\n\t\t\"index.interval.bytes\": 4096,\n\t\t\"leader.replication.throttled.replicas\": \"\",\n\t\t\"max.compaction.lag.ms\": 9223372036854776000,\n\t\t\"max.message.bytes\": 2097164,\n\t\t\"message.downconversion.enable\": true,\n\t\t\"message.format.version\": \"3.0-IV1\",\n\t\t\"message.timestamp.difference.max.ms\": 9223372036854776000,\n\t\t\"message.timestamp.type\": \"CreateTime\",\n\t\t\"min.cleanable.dirty.ratio\": 0.5,\n\t\t\"min.compaction.lag.ms\": 0,\n\t\t\"min.insync.replicas\": 2,\n\t\t\"name\": \"catalogue\",\n\t\t\"partitions\": [{\n\t\t\t\"id\": 0,\n\t\t\t\"isrCount\": 3,\n\t\t\t\"replicaCount\": 3\n\t\t}, {\n\t\t\t\"id\": 1,\n\t\t\t\"isrCount\": 3,\n\t\t\t\"replicaCount\": 3\n\t\t}],\n\t\t\"preallocate\": false,\n\t\t\"retention.bytes\": -1,\n\t\t\"retention.ms\": 604800000,\n\t\t\"segment.bytes\": 104857600,\n\t\t\"segment.index.bytes\": 10485760,\n\t\t\"segment.jitter.ms\": 0,\n\t\t\"segment.ms\": 604800000,\n\t\t\"unclean.leader.election.enable\": false\n\t}\n}"
                }, {
                    "customAttributeDefinitionId": "w27xl6vat69",
                    "customAttributeDefinitionName": "confidential",
                    "value": "false"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-07-12T14:03:49.979Z",
            "updatedTime": "2023-07-12T14:24:27.182Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7oe8hpycb3k",
            "name": "Customer",
            "shared": true,
            "applicationDomainId": "4u9gsifl3c6",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "w27xl6vat69",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }, {
                    "customAttributeDefinitionId": "jf06cx8vw8b",
                    "customAttributeDefinitionName": "runtime-config",
                    "value": "{\n\t\"kafkaTopic\": {\n\t\t\"cleanup.policy\": \"delete\",\n\t\t\"compression.type\": \"producer\",\n\t\t\"delete.retention.ms\": 86400000,\n\t\t\"file.delete.delay.ms\": 60000,\n\t\t\"flush.messages\": 9223372036854776000,\n\t\t\"flush.ms\": 9223372036854776000,\n\t\t\"follower.replication.throttled.replicas\": \"\",\n\t\t\"index.interval.bytes\": 4096,\n\t\t\"leader.replication.throttled.replicas\": \"\",\n\t\t\"max.compaction.lag.ms\": 9223372036854776000,\n\t\t\"max.message.bytes\": 2097164,\n\t\t\"message.downconversion.enable\": true,\n\t\t\"message.format.version\": \"3.0-IV1\",\n\t\t\"message.timestamp.difference.max.ms\": 9223372036854776000,\n\t\t\"message.timestamp.type\": \"CreateTime\",\n\t\t\"min.cleanable.dirty.ratio\": 0.5,\n\t\t\"min.compaction.lag.ms\": 0,\n\t\t\"min.insync.replicas\": 2,\n\t\t\"name\": \"customers\",\n\t\t\"partitions\": [{\n\t\t\t\"id\": 0,\n\t\t\t\"isrCount\": 3,\n\t\t\t\"replicaCount\": 3\n\t\t}, {\n\t\t\t\"id\": 1,\n\t\t\t\"isrCount\": 3,\n\t\t\t\"replicaCount\": 3\n\t\t}],\n\t\t\"preallocate\": false,\n\t\t\"retention.bytes\": -1,\n\t\t\"retention.ms\": 604800000,\n\t\t\"segment.bytes\": 104857600,\n\t\t\"segment.index.bytes\": 10485760,\n\t\t\"segment.jitter.ms\": 0,\n\t\t\"segment.ms\": 604800000,\n\t\t\"unclean.leader.election.enable\": false\n\t}\n}"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 4
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-07-12T14:03:49.979Z",
            "updatedTime": "2023-07-12T14:24:27.182Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "cjrkzqy1b4e",
            "name": "Order Created",
            "shared": true,
            "applicationDomainId": "4u9gsifl3c6",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "jf06cx8vw8b",
                    "customAttributeDefinitionName": "runtime-config",
                    "value": "{\n\t\"kafkaTopic\": {\n\t\t\"cleanup.policy\": \"delete\",\n\t\t\"compression.type\": \"producer\",\n\t\t\"delete.retention.ms\": 86400000,\n\t\t\"file.delete.delay.ms\": 60000,\n\t\t\"flush.messages\": 9223372036854776000,\n\t\t\"flush.ms\": 9223372036854776000,\n\t\t\"follower.replication.throttled.replicas\": \"\",\n\t\t\"index.interval.bytes\": 4096,\n\t\t\"leader.replication.throttled.replicas\": \"\",\n\t\t\"max.compaction.lag.ms\": 9223372036854776000,\n\t\t\"max.message.bytes\": 2097164,\n\t\t\"message.downconversion.enable\": true,\n\t\t\"message.format.version\": \"3.0-IV1\",\n\t\t\"message.timestamp.difference.max.ms\": 9223372036854776000,\n\t\t\"message.timestamp.type\": \"CreateTime\",\n\t\t\"min.cleanable.dirty.ratio\": 0.5,\n\t\t\"min.compaction.lag.ms\": 0,\n\t\t\"min.insync.replicas\": 2,\n\t\t\"name\": \"orders\",\n\t\t\"partitions\": [{\n\t\t\t\"id\": 0,\n\t\t\t\"isrCount\": 3,\n\t\t\t\"replicaCount\": 3\n\t\t}, {\n\t\t\t\"id\": 1,\n\t\t\t\"isrCount\": 3,\n\t\t\t\"replicaCount\": 3\n\t\t}],\n\t\t\"preallocate\": false,\n\t\t\"retention.bytes\": -1,\n\t\t\"retention.ms\": 604800000,\n\t\t\"segment.bytes\": 104857600,\n\t\t\"segment.index.bytes\": 10485760,\n\t\t\"segment.jitter.ms\": 0,\n\t\t\"segment.ms\": 604800000,\n\t\t\"unclean.leader.election.enable\": false\n\t}\n}"
                }, {
                    "customAttributeDefinitionId": "w27xl6vat69",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-07-12T14:03:49.979Z",
            "updatedTime": "2023-07-12T14:24:27.182Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "c07wyeuia0a",
            "name": "Order Updated",
            "shared": true,
            "applicationDomainId": "4u9gsifl3c6",
            "numberOfVersions": 4,
            "customAttributes": [{
                    "customAttributeDefinitionId": "jf06cx8vw8b",
                    "customAttributeDefinitionName": "runtime-config",
                    "value": "{\n\t\"kafkaTopic\": {\n\t\t\"cleanup.policy\": \"delete\",\n\t\t\"compression.type\": \"producer\",\n\t\t\"delete.retention.ms\": 86400000,\n\t\t\"file.delete.delay.ms\": 60000,\n\t\t\"flush.messages\": 9223372036854776000,\n\t\t\"flush.ms\": 9223372036854776000,\n\t\t\"follower.replication.throttled.replicas\": \"\",\n\t\t\"index.interval.bytes\": 4096,\n\t\t\"leader.replication.throttled.replicas\": \"\",\n\t\t\"max.compaction.lag.ms\": 9223372036854776000,\n\t\t\"max.message.bytes\": 2097164,\n\t\t\"message.downconversion.enable\": true,\n\t\t\"message.format.version\": \"3.0-IV1\",\n\t\t\"message.timestamp.difference.max.ms\": 9223372036854776000,\n\t\t\"message.timestamp.type\": \"CreateTime\",\n\t\t\"min.cleanable.dirty.ratio\": 0.5,\n\t\t\"min.compaction.lag.ms\": 0,\n\t\t\"min.insync.replicas\": 2,\n\t\t\"name\": \"order-validations\",\n\t\t\"partitions\": [{\n\t\t\t\"id\": 0,\n\t\t\t\"isrCount\": 3,\n\t\t\t\"replicaCount\": 3\n\t\t}, {\n\t\t\t\"id\": 1,\n\t\t\t\"isrCount\": 3,\n\t\t\t\"replicaCount\": 3\n\t\t}],\n\t\t\"preallocate\": false,\n\t\t\"retention.bytes\": -1,\n\t\t\"retention.ms\": 604800000,\n\t\t\"segment.bytes\": 104857600,\n\t\t\"segment.index.bytes\": 10485760,\n\t\t\"segment.jitter.ms\": 0,\n\t\t\"segment.ms\": 604800000,\n\t\t\"unclean.leader.election.enable\": false\n\t}\n}"
                }, {
                    "customAttributeDefinitionId": "w27xl6vat69",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 2
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-07-12T14:03:49.979Z",
            "updatedTime": "2023-07-12T14:24:27.182Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "cd693dfftu7",
            "name": "Order Validated",
            "shared": false,
            "applicationDomainId": "4u9gsifl3c6",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "w27xl6vat69",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }, {
                    "customAttributeDefinitionId": "jf06cx8vw8b",
                    "customAttributeDefinitionName": "runtime-config",
                    "value": "{\n\t\"kafkaTopic\": {\n\t\t\"cleanup.policy\": \"delete\",\n\t\t\"compression.type\": \"producer\",\n\t\t\"delete.retention.ms\": 86400000,\n\t\t\"file.delete.delay.ms\": 60000,\n\t\t\"flush.messages\": 9223372036854776000,\n\t\t\"flush.ms\": 9223372036854776000,\n\t\t\"follower.replication.throttled.replicas\": \"\",\n\t\t\"index.interval.bytes\": 4096,\n\t\t\"leader.replication.throttled.replicas\": \"\",\n\t\t\"max.compaction.lag.ms\": 9223372036854776000,\n\t\t\"max.message.bytes\": 2097164,\n\t\t\"message.downconversion.enable\": true,\n\t\t\"message.format.version\": \"3.0-IV1\",\n\t\t\"message.timestamp.difference.max.ms\": 9223372036854776000,\n\t\t\"message.timestamp.type\": \"CreateTime\",\n\t\t\"min.cleanable.dirty.ratio\": 0.5,\n\t\t\"min.compaction.lag.ms\": 0,\n\t\t\"min.insync.replicas\": 2,\n\t\t\"name\": \"orders\",\n\t\t\"partitions\": [{\n\t\t\t\"id\": 0,\n\t\t\t\"isrCount\": 3,\n\t\t\t\"replicaCount\": 3\n\t\t}, {\n\t\t\t\"id\": 1,\n\t\t\t\"isrCount\": 3,\n\t\t\t\"replicaCount\": 3\n\t\t}],\n\t\t\"preallocate\": false,\n\t\t\"retention.bytes\": -1,\n\t\t\"retention.ms\": 604800000,\n\t\t\"segment.bytes\": 104857600,\n\t\t\"segment.index.bytes\": 10485760,\n\t\t\"segment.jitter.ms\": 0,\n\t\t\"segment.ms\": 604800000,\n\t\t\"unclean.leader.election.enable\": false\n\t}\n}"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-07-12T14:03:49.979Z",
            "updatedTime": "2023-07-12T14:24:27.182Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "grb3ipuk53v",
            "name": "Payment",
            "shared": true,
            "applicationDomainId": "4u9gsifl3c6",
            "numberOfVersions": 6,
            "customAttributes": [{
                    "customAttributeDefinitionId": "w27xl6vat69",
                    "customAttributeDefinitionName": "confidential",
                    "value": "true"
                }, {
                    "customAttributeDefinitionId": "jf06cx8vw8b",
                    "customAttributeDefinitionName": "runtime-config",
                    "value": "{\n\t\"kafkaTopic\": {\n\t\t\"cleanup.policy\": \"delete\",\n\t\t\"compression.type\": \"producer\",\n\t\t\"delete.retention.ms\": 86400000,\n\t\t\"file.delete.delay.ms\": 60000,\n\t\t\"flush.messages\": 9223372036854776000,\n\t\t\"flush.ms\": 9223372036854776000,\n\t\t\"follower.replication.throttled.replicas\": \"\",\n\t\t\"index.interval.bytes\": 4096,\n\t\t\"leader.replication.throttled.replicas\": \"\",\n\t\t\"max.compaction.lag.ms\": 9223372036854776000,\n\t\t\"max.message.bytes\": 2097164,\n\t\t\"message.downconversion.enable\": true,\n\t\t\"message.format.version\": \"3.0-IV1\",\n\t\t\"message.timestamp.difference.max.ms\": 9223372036854776000,\n\t\t\"message.timestamp.type\": \"CreateTime\",\n\t\t\"min.cleanable.dirty.ratio\": 0.5,\n\t\t\"min.compaction.lag.ms\": 0,\n\t\t\"min.insync.replicas\": 2,\n\t\t\"name\": \"payments\",\n\t\t\"partitions\": [{\n\t\t\t\"id\": 0,\n\t\t\t\"isrCount\": 3,\n\t\t\t\"replicaCount\": 3\n\t\t}, {\n\t\t\t\"id\": 1,\n\t\t\t\"isrCount\": 3,\n\t\t\t\"replicaCount\": 3\n\t\t}],\n\t\t\"preallocate\": false,\n\t\t\"retention.bytes\": -1,\n\t\t\"retention.ms\": 604800000,\n\t\t\"segment.bytes\": 104857600,\n\t\t\"segment.index.bytes\": 10485760,\n\t\t\"segment.jitter.ms\": 0,\n\t\t\"segment.ms\": 604800000,\n\t\t\"unclean.leader.election.enable\": false\n\t}\n}"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 4
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-07-12T14:03:49.979Z",
            "updatedTime": "2023-07-12T14:24:27.182Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "bkqa67sb981",
            "name": "Shipping",
            "shared": false,
            "applicationDomainId": "8nkidw2ecv5",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "w27xl6vat69",
                    "customAttributeDefinitionName": "confidential",
                    "value": "false"
                }, {
                    "customAttributeDefinitionId": "jf06cx8vw8b",
                    "customAttributeDefinitionName": "runtime-config",
                    "value": "{\n\t\"kafkaTopic\": {\n\t\t\"cleanup.policy\": \"delete\",\n\t\t\"compression.type\": \"producer\",\n\t\t\"delete.retention.ms\": 86400000,\n\t\t\"file.delete.delay.ms\": 60000,\n\t\t\"flush.messages\": 9223372036854776000,\n\t\t\"flush.ms\": 9223372036854776000,\n\t\t\"follower.replication.throttled.replicas\": \"\",\n\t\t\"index.interval.bytes\": 4096,\n\t\t\"leader.replication.throttled.replicas\": \"\",\n\t\t\"max.compaction.lag.ms\": 9223372036854776000,\n\t\t\"max.message.bytes\": 2097164,\n\t\t\"message.downconversion.enable\": true,\n\t\t\"message.format.version\": \"3.0-IV1\",\n\t\t\"message.timestamp.difference.max.ms\": 9223372036854776000,\n\t\t\"message.timestamp.type\": \"CreateTime\",\n\t\t\"min.cleanable.dirty.ratio\": 0.5,\n\t\t\"min.compaction.lag.ms\": 0,\n\t\t\"min.insync.replicas\": 2,\n\t\t\"name\": \"shipping\",\n\t\t\"partitions\": [{\n\t\t\t\"id\": 0,\n\t\t\t\"isrCount\": 3,\n\t\t\t\"replicaCount\": 3\n\t\t}, {\n\t\t\t\"id\": 1,\n\t\t\t\"isrCount\": 3,\n\t\t\t\"replicaCount\": 3\n\t\t}],\n\t\t\"preallocate\": false,\n\t\t\"retention.bytes\": -1,\n\t\t\"retention.ms\": 604800000,\n\t\t\"segment.bytes\": 104857600,\n\t\t\"segment.index.bytes\": 10485760,\n\t\t\"segment.jitter.ms\": 0,\n\t\t\"segment.ms\": 604800000,\n\t\t\"unclean.leader.election.enable\": false\n\t}\n}"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 3
                }
            },
            "type": "event"
        }, {
            "createdTime": "2023-07-12T14:03:49.979Z",
            "updatedTime": "2023-07-12T14:24:27.182Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "mtp68xkue08",
            "name": "Warehouse Inventory",
            "shared": true,
            "applicationDomainId": "gf82aon308v",
            "numberOfVersions": 5,
            "customAttributes": [{
                    "customAttributeDefinitionId": "jf06cx8vw8b",
                    "customAttributeDefinitionName": "runtime-config",
                    "value": "{\n\t\"kafkaTopic\": {\n\t\t\"cleanup.policy\": \"delete\",\n\t\t\"compression.type\": \"producer\",\n\t\t\"delete.retention.ms\": 86400000,\n\t\t\"file.delete.delay.ms\": 60000,\n\t\t\"flush.messages\": 9223372036854776000,\n\t\t\"flush.ms\": 9223372036854776000,\n\t\t\"follower.replication.throttled.replicas\": \"\",\n\t\t\"index.interval.bytes\": 4096,\n\t\t\"leader.replication.throttled.replicas\": \"\",\n\t\t\"max.compaction.lag.ms\": 9223372036854776000,\n\t\t\"max.message.bytes\": 2097164,\n\t\t\"message.downconversion.enable\": true,\n\t\t\"message.format.version\": \"3.0-IV1\",\n\t\t\"message.timestamp.difference.max.ms\": 9223372036854776000,\n\t\t\"message.timestamp.type\": \"CreateTime\",\n\t\t\"min.cleanable.dirty.ratio\": 0.5,\n\t\t\"min.compaction.lag.ms\": 0,\n\t\t\"min.insync.replicas\": 2,\n\t\t\"name\": \"warehouse-inventory\",\n\t\t\"partitions\": [{\n\t\t\t\"id\": 0,\n\t\t\t\"isrCount\": 3,\n\t\t\t\"replicaCount\": 3\n\t\t}, {\n\t\t\t\"id\": 1,\n\t\t\t\"isrCount\": 3,\n\t\t\t\"replicaCount\": 3\n\t\t}],\n\t\t\"preallocate\": false,\n\t\t\"retention.bytes\": -1,\n\t\t\"retention.ms\": 604800000,\n\t\t\"segment.bytes\": 104857600,\n\t\t\"segment.index.bytes\": 10485760,\n\t\t\"segment.jitter.ms\": 0,\n\t\t\"segment.ms\": 604800000,\n\t\t\"unclean.leader.election.enable\": false\n\t}\n}"
                }, {
                    "customAttributeDefinitionId": "w27xl6vat69",
                    "customAttributeDefinitionName": "confidential",
                    "value": "false"
                }
            ],
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 3
                }
            },
            "type": "event"
        }
    ],
    "eventVersions": [{
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:24:27.182Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "i5awfetv0fy",
            "eventId": "7oe8hpycb3k",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "2.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "rmfctliccpf",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "3cptbxetpzh",
            "eventId": "7oe8hpycb3k",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "2.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "98lbl85kg11",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ug7r9780sf7",
            "eventId": "7oe8hpycb3k",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "0.2.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "98lbl85kg11",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "17iw0hvsjtz",
            "eventId": "7oe8hpycb3k",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "98lbl85kg11",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "s2tjby9y2ui",
            "eventId": "7oe8hpycb3k",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "98lbl85kg11",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "86t42k0aiok",
            "eventId": "7oe8hpycb3k",
            "description": "Shows changes to customer information including name, address and loyalty status",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "98lbl85kg11",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "customers",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:24:27.182Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "wer4rkx11tc",
            "eventId": "bkqa67sb981",
            "description": "Changes in the shipping status of ordered items as they move out of the warehouse to home delivery.",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "o8q9hrksge3",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "shipping",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "3wxvfb4zgfo",
            "eventId": "bkqa67sb981",
            "description": "Changes in the shipping status of ordered items as they move out of the warehouse to home delivery.",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "f85hda9gf9i",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "shipping",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "a41wwv26cjr",
            "eventId": "bkqa67sb981",
            "description": "Changes in the shipping status of ordered items as they move out of the warehouse to home delivery.",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "f85hda9gf9i",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "shipping",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "2las20a6s2w",
            "eventId": "bkqa67sb981",
            "description": "Changes in the shipping status of ordered items as they move out of the warehouse to home delivery.",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "f85hda9gf9i",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "shipping",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "x89sxh143a3",
            "eventId": "bkqa67sb981",
            "description": "Changes in the shipping status of ordered items.",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "f85hda9gf9i",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "SHIPPING",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:24:27.182Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "63r8r0i6ood",
            "eventId": "c07wyeuia0a",
            "description": "As the order moves through the fulfillment process, each service add to this topic to show current state.",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "tbafyq0nsi7",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "order-validations",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0hk1zg712cr",
            "eventId": "c07wyeuia0a",
            "description": "As the order moves through the fulfillment process, each service add to this topic to show current state.",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "nqizjuscfbp",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "order-validations",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7jg7ethnj99",
            "eventId": "c07wyeuia0a",
            "description": "As the order moves through the fulfillment process, each service add to this topic to show current state.",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "nqizjuscfbp",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "order-validations",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ad28l2ykkbt",
            "eventId": "c07wyeuia0a",
            "description": "As the order moves through the fulfillment process, each service add to this topic to show current state.",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "nqizjuscfbp",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "order-validations",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:24:27.182Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "9w3p511ijad",
            "eventId": "cd693dfftu7",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "1.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "5y8qdkf1qal",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "57g87hfje2d",
            "eventId": "cd693dfftu7",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "02msbhfoao7",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "2dczqpwzh18",
            "eventId": "cd693dfftu7",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "02msbhfoao7",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "m4qgxqz0a1c",
            "eventId": "cd693dfftu7",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "0.2.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "02msbhfoao7",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "8rqo4s35p57",
            "eventId": "cd693dfftu7",
            "description": "This is a store of order data that indicates whether the order has been validated",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "02msbhfoao7",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:24:27.182Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "m28d87t7fi2",
            "eventId": "cjrkzqy1b4e",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "2.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "j8eigdog4v6",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "bqi2om989jl",
            "eventId": "cjrkzqy1b4e",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "2.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "q28qm03v3u6",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "q93pb93xk5d",
            "eventId": "cjrkzqy1b4e",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "0.2.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "q28qm03v3u6",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "va73yuz02cj",
            "eventId": "cjrkzqy1b4e",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "0.2.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "q28qm03v3u6",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "9uw3756zjg2",
            "eventId": "cjrkzqy1b4e",
            "description": "Created after an order is validated as correct and passes logic checks",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "q28qm03v3u6",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "orders",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:24:27.182Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "kjtjmdgh191",
            "eventId": "grb3ipuk53v",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "1.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "tlcs0f5d51w",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "lpngihao900",
            "eventId": "grb3ipuk53v",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "jm97d6e2d9e",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "x25eaikg7m7",
            "eventId": "grb3ipuk53v",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "0.1.3",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "jm97d6e2d9e",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "pijplb3261k",
            "eventId": "grb3ipuk53v",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "jm97d6e2d9e",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "zcuv05m5ir3",
            "eventId": "grb3ipuk53v",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "jm97d6e2d9e",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0n6l2yhcect",
            "eventId": "grb3ipuk53v",
            "description": "Provides information on payment status for incoming orders including approvals and denials",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "jm97d6e2d9e",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "payments",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:24:27.182Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "50yrp8tjtm9",
            "eventId": "hkju98515iy",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "1.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "289u4gs8y77",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0ak36ic5ras",
            "eventId": "hkju98515iy",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "qjs4jhanufj",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "t43xtcj3t2f",
            "eventId": "hkju98515iy",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "qjs4jhanufj",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "r1tspk4m6iu",
            "eventId": "hkju98515iy",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "qjs4jhanufj",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "mpsofltf8c4",
            "eventId": "hkju98515iy",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "qjs4jhanufj",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "600ile6k2b0",
            "eventId": "hkju98515iy",
            "description": "Lists the items placed into a basket of goods online.",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "qjs4jhanufj",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "basket",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:24:27.182Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "i1d60fqg2db",
            "eventId": "mtp68xkue08",
            "description": "Current stock levels for items in the warehouse",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "4jh4j61j9g5",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ea34lmucn4w",
            "eventId": "mtp68xkue08",
            "description": "Current stock levels for items in the warehouse",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "k7deplufxv4",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "4z8f1vorg0f",
            "eventId": "mtp68xkue08",
            "description": "Current stock levels for items in the warehouse",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "k7deplufxv4",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7s95kfbadec",
            "eventId": "mtp68xkue08",
            "description": "Current stock levels for items in the warehouse",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "k7deplufxv4",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "567meazq40p",
            "eventId": "mtp68xkue08",
            "description": "Current stock levels for items in the warehouse",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "k7deplufxv4",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "warehouse-inventory",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:24:27.182Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "d5bwzb5kc3w",
            "eventId": "x2ccslndfpj",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "1.0.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "f3lk2iwd1p3",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jdbcy1stj7w",
            "eventId": "x2ccslndfpj",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "1.0.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "m059rmead4j",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "2",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "doge8cf4m7k",
            "eventId": "x2ccslndfpj",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "0.1.2",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "m059rmead4j",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gc6oyeaus0c",
            "eventId": "x2ccslndfpj",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "0.1.1",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "m059rmead4j",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }, {
            "createdTime": "2023-07-12T14:03:51.538Z",
            "updatedTime": "2023-07-12T14:03:51.538Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "t3ie0387jpi",
            "eventId": "x2ccslndfpj",
            "description": "Changes in items available for purchase from the store and their descriptions.",
            "version": "0.1.0",
            "displayName": "",
            "attractingApplicationVersionIds": [],
            "schemaVersionId": "m059rmead4j",
            "schemaPrimitiveType": null,
            "deliveryDescriptor": {
                "brokerType": "kafka",
                "address": {
                    "addressLevels": [{
                            "name": "catalogue",
                            "addressLevelType": "literal"
                        }
                    ],
                    "addressType": "topic"
                },
                "keySchemaVersionId": null,
                "keySchemaPrimitiveType": null
            },
            "stateId": "3",
            "customAttributes": [],
            "messagingServiceIds": [],
            "type": "eventVersion"
        }
    ],
    "schemas": [{
            "createdTime": "2023-07-12T14:03:49.957Z",
            "updatedTime": "2023-07-12T14:03:50.499Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "7xajmra0tpb",
            "applicationDomainId": "4u9gsifl3c6",
            "name": "Basket",
            "shared": false,
            "schemaType": "avro",
            "numberOfVersions": 7,
            "eventVersionRefCount": 6,
            "stats": {
                "versionCountByStateId": {
                    "2": 3,
                    "3": 4
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-07-12T14:03:49.957Z",
            "updatedTime": "2023-07-12T14:03:50.499Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "39ct01p74aa",
            "applicationDomainId": "zp40l564ym7",
            "name": "Catalog",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 8,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "2": 1,
                    "3": 7
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-07-12T14:03:49.957Z",
            "updatedTime": "2023-07-12T14:03:50.499Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "pwp20hhxykt",
            "applicationDomainId": "4u9gsifl3c6",
            "name": "Customer",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 8,
            "eventVersionRefCount": 6,
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 6
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-07-12T14:03:49.957Z",
            "updatedTime": "2023-07-12T14:03:50.499Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "9pw7fjhiccg",
            "applicationDomainId": "4u9gsifl3c6",
            "name": "Enriched Order",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 6,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 4
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-07-12T14:03:49.957Z",
            "updatedTime": "2023-07-12T14:03:50.499Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "eh8cuto6r89",
            "applicationDomainId": "gf82aon308v",
            "name": "Inventory",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 6,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 4
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-07-12T14:03:49.957Z",
            "updatedTime": "2023-07-12T14:03:50.499Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "8243i4z140g",
            "applicationDomainId": "4u9gsifl3c6",
            "name": "Order",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 8,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 6
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-07-12T14:03:49.957Z",
            "updatedTime": "2023-07-12T14:03:50.499Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "kji5j1ibsbi",
            "applicationDomainId": "4u9gsifl3c6",
            "name": "Order Validation",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 7,
            "eventVersionRefCount": 4,
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 5
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-07-12T14:03:49.957Z",
            "updatedTime": "2023-07-12T14:03:50.499Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "wu91cj8vn3a",
            "applicationDomainId": "4u9gsifl3c6",
            "name": "Payment",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 5,
            "eventVersionRefCount": 6,
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 3
                }
            },
            "customAttributes": [],
            "type": "schema"
        }, {
            "createdTime": "2023-07-12T14:03:49.957Z",
            "updatedTime": "2023-07-12T14:03:50.499Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "9dv4c0ve42e",
            "applicationDomainId": "8nkidw2ecv5",
            "name": "Shipping",
            "shared": true,
            "schemaType": "avro",
            "numberOfVersions": 5,
            "eventVersionRefCount": 5,
            "stats": {
                "versionCountByStateId": {
                    "2": 2,
                    "3": 1,
                    "4": 2
                }
            },
            "customAttributes": [],
            "type": "schema"
        }
    ],
    "schemaVersions": [{
            "createdTime": "2023-07-12T14:03:50.113Z",
            "updatedTime": "2023-07-12T14:03:50.113Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "tbafyq0nsi7",
            "schemaId": "kji5j1ibsbi",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "3.0.1",
            "displayName": "",
            "content": "{\n\t\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n\t\"type\": \"record\",\n\t\"name\": \"OrderValidation\",\n\t\"fields\": [{\n\t\t\t\"name\": \"orderId\",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t{\n\n\t\t\t\"type\": \"enum\",\n\t\t\t\"name\": \"OrderValidationType\",\n\t\t\t\"symbols\": [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"enum\",\n\t\t\t\"name\": \"OrderValidationResult\",\n\t\t\t\"symbols\": [\"PASS\", \"FAIL\", \"ERROR\"]\n\t\t}\n\t]\n}",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.119Z",
            "updatedTime": "2023-07-12T14:03:50.119Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "eo009e590ax",
            "schemaId": "kji5j1ibsbi",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "3.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.125Z",
            "updatedTime": "2023-07-12T14:03:50.125Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "rmfctliccpf",
            "schemaId": "pwp20hhxykt",
            "description": "Represents a customer of the store ",
            "version": "2.0.1",
            "displayName": "",
            "content": "{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.137Z",
            "updatedTime": "2023-07-12T14:03:50.137Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "kwhv7dblivk",
            "schemaId": "pwp20hhxykt",
            "description": "Represents a customer of the store ",
            "version": "2.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.131Z",
            "updatedTime": "2023-07-12T14:03:50.131Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "pzftcpxmm40",
            "schemaId": "kji5j1ibsbi",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "2.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.145Z",
            "updatedTime": "2023-07-12T14:03:50.145Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "289u4gs8y77",
            "schemaId": "7xajmra0tpb",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "1.1.2",
            "displayName": "",
            "content": "{\n\t\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n\t\"type\": \"record\",\n\t\"name\": \"Basket\",\n\t\"fields\": [{\n\t\t\t\"name\": \"id\",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"customerId\",\n\t\t\t\"type\": \"long\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"state\",\n\t\t\t\"type\": \"OrderState\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"enum\",\n\t\t\t\"name\": \"product\",\n\t\t\t\"symbols\": [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"quantity\",\n\t\t\t\"type\": \"int\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"price\",\n\t\t\t\"type\": \"double\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"enum\",\n\t\t\t\"name\": \"OrderState\",\n\t\t\t\"symbols\": [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n\t\t}\n\t]\n}",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.152Z",
            "updatedTime": "2023-07-12T14:03:50.152Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "4jh4j61j9g5",
            "schemaId": "eh8cuto6r89",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "1.1.1",
            "displayName": "",
            "content": "{\n\t\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n\t\"type\": \"record\",\n\t\"name\": \"Inventory\",\n\t\"fields\": [{\n\t\t\"name\": \"id\",\n\t\t\"type\": \"string\"\n\t}, {\n\t\t\"type\": \"enum\",\n\t\t\"name\": \"product\",\n\t\t\"symbols\": [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n\t}, {\n\t\t\"name\": \"quantity\",\n\t\t\"type\": \"int\"\n\t}]\n}",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.158Z",
            "updatedTime": "2023-07-12T14:03:50.158Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "f4qd6220qff",
            "schemaId": "eh8cuto6r89",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "1.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.164Z",
            "updatedTime": "2023-07-12T14:03:50.164Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "p556n5x102b",
            "schemaId": "7xajmra0tpb",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "1.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.170Z",
            "updatedTime": "2023-07-12T14:03:50.170Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "tlcs0f5d51w",
            "schemaId": "wu91cj8vn3a",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "1.1.0",
            "displayName": "",
            "content": "\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.182Z",
            "updatedTime": "2023-07-12T14:03:50.182Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "5y8qdkf1qal",
            "schemaId": "9pw7fjhiccg",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "1.0.2",
            "displayName": "",
            "content": "{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.176Z",
            "updatedTime": "2023-07-12T14:03:50.176Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "82lh9xxiubs",
            "schemaId": "pwp20hhxykt",
            "description": "Represents a customer of the store ",
            "version": "1.0.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.188Z",
            "updatedTime": "2023-07-12T14:03:50.188Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "f3lk2iwd1p3",
            "schemaId": "39ct01p74aa",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "1.0.2",
            "displayName": "",
            "content": "{\n\t\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n\t\"type\": \"record\",\n\t\"name\": \"Catalog\",\n\t\"fields\": [{\n\t\t\"name\": \"id\",\n\t\t\"type\": \"string\"\n\t}, {\n\t\t\"type\": \"enum\",\n\t\t\"name\": \"product\",\n\t\t\"symbols\": [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n\t}, {\n\t\t\"name\": \"quantity\",\n\t\t\"type\": \"int\"\n\t}]\n}",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.213Z",
            "updatedTime": "2023-07-12T14:03:50.213Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0naikf298gv",
            "schemaId": "pwp20hhxykt",
            "description": "Represents a customer of the store ",
            "version": "1.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.207Z",
            "updatedTime": "2023-07-12T14:03:50.207Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "3g0t4latv46",
            "schemaId": "9pw7fjhiccg",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "1.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.219Z",
            "updatedTime": "2023-07-12T14:03:50.219Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "b65uo1642el",
            "schemaId": "39ct01p74aa",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "1.0.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.194Z",
            "updatedTime": "2023-07-12T14:03:50.194Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "j8eigdog4v6",
            "schemaId": "8243i4z140g",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "1.0.1",
            "displayName": "",
            "content": "{\n\t\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n\t\"type\": \"record\",\n\t\"name\": \"Order\",\n\t\"fields\": [{\n\t\t\t\"name\": \"id\",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"customerId\",\n\t\t\t\"type\": \"long\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"state\",\n\t\t\t\"type\": \"OrderState\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"enum\",\n\t\t\t\"name\": \"product\",\n\t\t\t\"symbols\": [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"quantity\",\n\t\t\t\"type\": \"int\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"price\",\n\t\t\t\"type\": \"double\"\n\t\t},\n\t\t{\n\t\t\t\"type\": \"enum\",\n\t\t\t\"name\": \"OrderState\",\n\t\t\t\"symbols\": [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n\t\t}\n\t]\n}",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.200Z",
            "updatedTime": "2023-07-12T14:03:50.200Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "o8q9hrksge3",
            "schemaId": "9dv4c0ve42e",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "1.0.1",
            "displayName": "",
            "content": "{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.255Z",
            "updatedTime": "2023-07-12T14:03:50.255Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "14az3s0o71y",
            "schemaId": "8243i4z140g",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.237Z",
            "updatedTime": "2023-07-12T14:03:50.237Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "91jrw2yibti",
            "schemaId": "7xajmra0tpb",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.261Z",
            "updatedTime": "2023-07-12T14:03:50.261Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "9izy36fea40",
            "schemaId": "9dv4c0ve42e",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.243Z",
            "updatedTime": "2023-07-12T14:03:50.243Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "b9do8d0emkf",
            "schemaId": "wu91cj8vn3a",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "2",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.225Z",
            "updatedTime": "2023-07-12T14:03:50.225Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "bpek8za4owb",
            "schemaId": "9pw7fjhiccg",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.273Z",
            "updatedTime": "2023-07-12T14:03:50.273Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "dzcq12z17ge",
            "schemaId": "eh8cuto6r89",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.249Z",
            "updatedTime": "2023-07-12T14:03:50.249Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "lknn91lg2dw",
            "schemaId": "kji5j1ibsbi",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.231Z",
            "updatedTime": "2023-07-12T14:03:50.231Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "r84p6xoynjj",
            "schemaId": "39ct01p74aa",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.267Z",
            "updatedTime": "2023-07-12T14:03:50.267Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "v9p5m3220xn",
            "schemaId": "pwp20hhxykt",
            "description": "Represents a customer of the store ",
            "version": "1.0.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.279Z",
            "updatedTime": "2023-07-12T14:03:50.279Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jzc5dd82gc0",
            "schemaId": "8243i4z140g",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.3.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.291Z",
            "updatedTime": "2023-07-12T14:03:50.291Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ahbs1eei914",
            "schemaId": "39ct01p74aa",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.3.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.285Z",
            "updatedTime": "2023-07-12T14:03:50.285Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "h9fd3i9sq2c",
            "schemaId": "8243i4z140g",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.3.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.297Z",
            "updatedTime": "2023-07-12T14:03:50.297Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "bn27bt1225p",
            "schemaId": "9pw7fjhiccg",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "0.2.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.328Z",
            "updatedTime": "2023-07-12T14:03:50.328Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "02zd6y2sj22",
            "schemaId": "pwp20hhxykt",
            "description": "Represents a customer of the store ",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.310Z",
            "updatedTime": "2023-07-12T14:03:50.310Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "c2img4l3nne",
            "schemaId": "8243i4z140g",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.303Z",
            "updatedTime": "2023-07-12T14:03:50.303Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "e74l9xcphls",
            "schemaId": "9pw7fjhiccg",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.316Z",
            "updatedTime": "2023-07-12T14:03:50.316Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "usbdyaqb9gh",
            "schemaId": "7xajmra0tpb",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.322Z",
            "updatedTime": "2023-07-12T14:03:50.322Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "zfuraj8u9ah",
            "schemaId": "39ct01p74aa",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.2.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.359Z",
            "updatedTime": "2023-07-12T14:03:50.359Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "98tps98oacf",
            "schemaId": "9dv4c0ve42e",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "4",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.366Z",
            "updatedTime": "2023-07-12T14:03:50.366Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "fhd60xyce2o",
            "schemaId": "wu91cj8vn3a",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.334Z",
            "updatedTime": "2023-07-12T14:03:50.334Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ksmlctisyk2",
            "schemaId": "8243i4z140g",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.353Z",
            "updatedTime": "2023-07-12T14:03:50.353Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "nig3xsxcglh",
            "schemaId": "eh8cuto6r89",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.340Z",
            "updatedTime": "2023-07-12T14:03:50.340Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "rehnm94ukxj",
            "schemaId": "7xajmra0tpb",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.347Z",
            "updatedTime": "2023-07-12T14:03:50.347Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "sp8ig6kkj8o",
            "schemaId": "kji5j1ibsbi",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.372Z",
            "updatedTime": "2023-07-12T14:03:50.372Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "uf86p30hr96",
            "schemaId": "39ct01p74aa",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.1.2",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.420Z",
            "updatedTime": "2023-07-12T14:03:50.420Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "0d9v55aaz6p",
            "schemaId": "39ct01p74aa",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.402Z",
            "updatedTime": "2023-07-12T14:03:50.402Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "c2h3gtfv2or",
            "schemaId": "eh8cuto6r89",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.396Z",
            "updatedTime": "2023-07-12T14:03:50.396Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ch5y2x291ak",
            "schemaId": "wu91cj8vn3a",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.384Z",
            "updatedTime": "2023-07-12T14:03:50.384Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "hsfkv0go2fu",
            "schemaId": "9dv4c0ve42e",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "4",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.390Z",
            "updatedTime": "2023-07-12T14:03:50.390Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "kjgjxg2s3mm",
            "schemaId": "7xajmra0tpb",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.408Z",
            "updatedTime": "2023-07-12T14:03:50.408Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "ob4j50bdfyv",
            "schemaId": "8243i4z140g",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.414Z",
            "updatedTime": "2023-07-12T14:03:50.414Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "qj34it9z3qw",
            "schemaId": "kji5j1ibsbi",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.378Z",
            "updatedTime": "2023-07-12T14:03:50.378Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "zchhjfqtnf1",
            "schemaId": "pwp20hhxykt",
            "description": "Represents a customer of the store ",
            "version": "0.1.1",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.432Z",
            "updatedTime": "2023-07-12T14:03:50.432Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "02msbhfoao7",
            "schemaId": "9pw7fjhiccg",
            "description": "An order enriched with additonal information about the customer, to allow for differentiated order handling.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderEnriched\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"customerLevel\", \"type\": \"string\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.462Z",
            "updatedTime": "2023-07-12T14:03:50.462Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "98lbl85kg11",
            "schemaId": "pwp20hhxykt",
            "description": "Represents a customer of the store ",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Customer\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"long\"},\n     {\"name\": \"firstName\", \"type\": \"string\"},\n     {\"name\": \"lastName\", \"type\": \"string\"},\n     {\"name\": \"email\", \"type\": \"string\"},\n     {\"name\": \"address\", \"type\": \"string\"},\n     {\"name\": \"level\", \"type\": \"string\", \"default\": \"bronze\"}\n ]\n}\n]\n",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.450Z",
            "updatedTime": "2023-07-12T14:03:50.450Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "f85hda9gf9i",
            "schemaId": "9dv4c0ve42e",
            "description": "An individual record of an item shipped to an end consumer.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Shipping\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"trackingNumber\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.438Z",
            "updatedTime": "2023-07-12T14:03:50.438Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jm97d6e2d9e",
            "schemaId": "wu91cj8vn3a",
            "description": "Payment details from an end consumer as the result of a single transaction.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Payment\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"ccy\", \"type\": \"string\"},\n     {\"name\": \"amount\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.468Z",
            "updatedTime": "2023-07-12T14:03:50.468Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "k7deplufxv4",
            "schemaId": "eh8cuto6r89",
            "description": "Describes the current number of a particular item available to purchase.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Inventory\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.426Z",
            "updatedTime": "2023-07-12T14:03:50.426Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "m059rmead4j",
            "schemaId": "39ct01p74aa",
            "description": "An enriched view of a consumer item that includes catalog information along with stock levels.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Catalog\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.444Z",
            "updatedTime": "2023-07-12T14:03:50.444Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "nqizjuscfbp",
            "schemaId": "kji5j1ibsbi",
            "description": "Result of an order being validated against a set of business rules to ensure that it is valid.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationType\",\n \"symbols\" : [\"INVENTORY_CHECK\", \"FRAUD_CHECK\", \"ORDER_DETAILS_CHECK\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderValidationResult\",\n \"symbols\" : [\"PASS\", \"FAIL\", \"ERROR\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"OrderValidation\",\n \"fields\": [\n     {\"name\": \"orderId\", \"type\": \"string\"},\n     {\"name\": \"checkType\", \"type\": \"OrderValidationType\"},\n     {\"name\": \"validationResult\",  \"type\": \"OrderValidationResult\"}\n ]\n}]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.457Z",
            "updatedTime": "2023-07-12T14:03:50.457Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "q28qm03v3u6",
            "schemaId": "8243i4z140g",
            "description": "Basic information about an inflight order from an end customer.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Order\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n   \"type\": \"record\",\n   \"name\": \"OrderValue\",\n    \"fields\": [\n     {\"name\": \"order\", \"type\": \"Order\"},\n     {\"name\": \"value\", \"type\": \"double\"}\n    ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }, {
            "createdTime": "2023-07-12T14:03:50.474Z",
            "updatedTime": "2023-07-12T14:03:50.474Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "qjs4jhanufj",
            "schemaId": "7xajmra0tpb",
            "description": "An updated view of what an individual consumer has in their basket, including the product and its quantity.",
            "version": "0.1.0",
            "displayName": "",
            "content": "[\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"OrderState\",\n \"symbols\" : [\"CREATED\", \"VALIDATED\", \"FAILED\", \"SHIPPED\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"enum\",\n \"name\": \"Product\",\n \"symbols\" : [\"JUMPERS\", \"UNDERPANTS\", \"STOCKINGS\"]\n},\n{\"namespace\": \"io.confluent.examples.streams.avro.microservices\",\n \"type\": \"record\",\n \"name\": \"Basket\",\n \"fields\": [\n     {\"name\": \"id\", \"type\": \"string\"},\n     {\"name\": \"customerId\", \"type\": \"long\"},\n     {\"name\": \"state\", \"type\": \"OrderState\"},\n     {\"name\": \"product\",  \"type\": \"Product\"},\n     {\"name\": \"quantity\", \"type\": \"int\"},\n     {\"name\": \"price\", \"type\": \"double\"}\n ]\n}\n]",
            "referencedByEventVersionIds": [],
            "referencedBySchemaVersionIds": [],
            "schemaVersionReferences": [],
            "customAttributes": [],
            "stateId": "3",
            "schemaRegistryIds": [],
            "type": "schemaVersion"
        }
    ],
    "enums": [],
    "enumVersions": [],
    "eventApis": [],
    "eventApiVersions": [],
    "eventApiProducts": [],
    "eventApiProductVersions": [],
    "addressSpaces": [{
            "createdTime": "2023-05-31T12:58:14.766Z",
            "updatedTime": "2023-05-31T12:58:14.766Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "tgr2u66f2h5",
            "brokerType": "kafka",
            "delimiter": ".",
            "type": "addressSpace"
        }
    ],
    "customAttributeDefinitions": [{
            "createdTime": "2023-07-12T14:03:49.879Z",
            "updatedTime": "2023-07-12T14:03:49.879Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "gecji55fe0f",
            "name": "application-type",
            "valueType": "STRING",
            "scope": "applicationDomain",
            "associatedEntityTypes": ["application"],
            "associatedEntities": [{
                    "entityType": "application",
                    "applicationDomainIds": ["4u9gsifl3c6", "8nkidw2ecv5", "gf82aon308v", "zp40l564ym7"]
                }
            ],
            "type": "customAttributeDefinition"
        }, {
            "createdTime": "2023-07-12T14:03:49.858Z",
            "updatedTime": "2023-07-12T14:03:49.858Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "jf06cx8vw8b",
            "name": "runtime-config",
            "valueType": "LONG_TEXT",
            "scope": "applicationDomain",
            "associatedEntityTypes": ["event"],
            "associatedEntities": [{
                    "entityType": "event",
                    "applicationDomainIds": ["4u9gsifl3c6", "8nkidw2ecv5", "gf82aon308v", "zp40l564ym7"]
                }
            ],
            "type": "customAttributeDefinition"
        }, {
            "createdTime": "2023-07-12T14:03:49.865Z",
            "updatedTime": "2023-07-12T14:03:49.865Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "w27xl6vat69",
            "name": "confidential",
            "valueType": "STRING",
            "scope": "applicationDomain",
            "associatedEntityTypes": ["event"],
            "associatedEntities": [{
                    "entityType": "event",
                    "applicationDomainIds": ["4u9gsifl3c6", "8nkidw2ecv5", "gf82aon308v", "zp40l564ym7"]
                }
            ],
            "type": "customAttributeDefinition"
        }, {
            "createdTime": "2023-07-12T14:03:49.872Z",
            "updatedTime": "2023-07-12T14:03:49.872Z",
            "createdBy": "2ko4lk2qe58f",
            "changedBy": "2ko4lk2qe58f",
            "id": "cvs25yyx8pd",
            "name": "acl-principal",
            "valueType": "LONG_TEXT",
            "scope": "applicationDomain",
            "associatedEntityTypes": ["application"],
            "associatedEntities": [{
                    "entityType": "application",
                    "applicationDomainIds": ["4u9gsifl3c6", "8nkidw2ecv5", "gf82aon308v", "zp40l564ym7"]
                }
            ],
            "type": "customAttributeDefinition"
        }
    ]
}
